Class BD_Chainsaw : BDoomWeapon replaces Chainsaw
{
string mblood; //enemy blood color
int jamstacks; //chance to jam
int wallhits;
bool hittarget; //did hit?
bool started; //is it on?
bool cleaning; //is in the process of being cooled, for pseudo-refire of enhanced alt.attack (cleaning)
int sndcounter; //at >75 produces higher-pitched sound
	
Default	{
	Weapon.Kickback 0;
	Weapon.SelectionOrder 220;
	weapon.readysound "";
	weapon.upsound "";
	inventory.pickupsound "weapons/chainsaw/draw";
	Inventory.PickupMessage "$GOTCHAINSAW";
	Obituary "$OB_MPCHAINSAW";
	Tag "$TAG_CHAINSAW";
	weapon.slotnumber 1;
	weapon.slotpriority 1;
	+WEAPON.MELEEWEAPON
	+WEAPON.AXEBLOOD
	}
	
override void DoEffect()
	{
	if (owner) {
		if(bdoom_weapons == 2) 
			{ 
			bNOALERT = true;
			bNOAUTOFIRE = true;
			}
		else 
			{ 
			bNOALERT = false;
			bNOAUTOFIRE = false;
			}
		}
	Super.DoEffect();
	}	


//Thanks to phantombeta for helping me optimize this overlay thing
action void A_BloodOverlay () {
    let po = player.FindPSprite (3);
    let main = player.FindPSprite (PSP_Weapon);
 
    if (!po || !main)
        return;
 
    int stage = 0;
         if (invoker.jamstacks >  0  && invoker.jamstacks < 30) stage = 1;
    else if (invoker.jamstacks >= 30 && invoker.jamstacks < 52) stage = 2;
    else if (invoker.jamstacks >= 52 && invoker.jamstacks < 64) stage = 3;
    else if (invoker.jamstacks >= 64                          ) stage = 4;
 
    if (stage == 0)
        return;
 
    string colorLetter = "";
    if (invoker.mBlood ~== "blue")
        colorLetter = "Y";
    else if (invoker.mBlood ~== "green")
        colorLetter = "Z";
    else
        colorLetter = "X";
 
         if (main.sprite == GetSpriteIndex ("SAWN"))  po.sprite = GetSpriteIndex (String.Format ("S%s%dN", colorLetter, stage));
    else if (main.sprite == GetSpriteIndex ("SAWB"))  po.sprite = GetSpriteIndex (String.Format ("S%s%dB", colorLetter, stage));
    else if (main.sprite == GetSpriteIndex ("SAWS"))  po.sprite = GetSpriteIndex (String.Format ("S%s%dS", colorLetter, stage));
    else if (main.sprite == GetSpriteIndex ("SAWF"))  po.sprite = GetSpriteIndex (String.Format ("S%s%dF", colorLetter, stage));
    else if (main.sprite == GetSpriteIndex ("SAW2"))  po.sprite = GetSpriteIndex (String.Format ("S%s%d2", colorLetter, stage));
 
    po.frame = main.frame;
}

states
	{
	Spawn:
		CSAW A -1;
		Stop;
	Select:
		TNT1 A 0 A_JumpIf(bdoom_weapons == 2,"Select.Modern");
		TNT1 A 0 {
			if (bdoom_weapons > 0)
				A_PlaySound("weapons/chainsaw/draw");
			else
				A_PlaySound("weapons/sawup");
			}
		TNT1 AAAAAAAA 0 A_Raise();
		SAWS ABCDEF 1 A_WeaponReady(WRF_NOFIRE);
		goto ready;
	Deselect:
		TNT1 A 0 A_JumpIf(bdoom_weapons ==1,"Deselect.Enhanced");
		TNT1 A 0 A_JumpIf(bdoom_weapons ==2,"Deselect.Modern");
		TNT1 A 0 {
			A_ClearRefire();
			invoker.jamstacks = 0;
			invoker.started = 0;
			invoker.sndcounter = 0;
			invoker.cleaning = 0;
			A_Stopsound(4);
			A_Stopsound(5);
			A_ClearOverlays(3);
			}
		SAWN A 1 A_Lower();
		wait;
	Ready:
		TNT1 A 0 A_JumpIf(bdoom_weapons ==2,"Ready.Modern");
		TNT1 A 0 {
			invoker.jamstacks = 0;
			invoker.started = 0;
			invoker.sndcounter = 0;
			invoker.cleaning = 0;
			A_ClearOverlays(3);
			if (bdoom_weapons == 1)
				A_PlaySound("weapons/chainsaw/idle",5);
			else
				A_PlaySound("weapons/sawidle");
			}
		SAWB BCDC 2 {
			if (bdoom_weapons == 1)
				A_weaponready();
			else
				A_weaponready(WRF_NOSECONDARY);
			}
		TNT1 A 0 {
			A_SpawnItemEx("SawSmoke",cos(pitch)*15,random(8,10),sin(-pitch)*25+random(22,26),0,0,1,0,SXF_ABSOLUTEVELOCITY,80);
			A_SpawnItemEx("SawSmoke",cos(pitch)*15,random(8,10),sin(-pitch)*25+random(22,26),0,0,1,0,SXF_ABSOLUTEVELOCITY,210);
			}
		loop;
	Fire: //should be 8 tics with no refire frames
		TNT1 A 0 A_JumpIf(bdoom_weapons ==1,"Fire.Enhanced");
		TNT1 A 0 A_JumpIf(bdoom_weapons ==2,"Fire.Modern");
		//fake chargeup, attack begins to coincide with vanilla speed
		TNT1 A 0 A_Saw("","weapons/sawhit",2,"ChainsawPuff") ;
		SAWN AABC 1;
		TNT1 A 0 {
			A_playsound("weapons/sawfull",4,1.0,TRUE);
			A_Saw("","weapons/sawhit",2,"ChainsawPuff");
			}
		SAWF AB 2 A_WeaponOffset(frandom(-2.0,2.0),frandom(32.0,34.0),WOF_INTERPOLATE);
		TNT1 A 0 A_Refire();
		TNT1 A 0 A_Stopsound(4);
		SAWN CBA 1 A_WeaponReady(WRF_NOSECONDARY);
		goto ready;
	Hold:
		TNT1 A 0 A_JumpIf(bdoom_weapons ==1,"Hold.Enhanced");
		TNT1 A 0 A_JumpIf(bdoom_weapons ==2,"Hold.Modern");
		TNT1 A 0 A_Saw("","weapons/sawhit",2,"ChainsawPuff");
		SAWF AB 2 A_WeaponOffset(frandom(-2.0,2.0),frandom(32.0,34.0),WOF_INTERPOLATE);
		TNT1 A 0 A_Saw("","weapons/sawhit",2,"ChainsawPuff");
		SAWF AB 2 A_WeaponOffset(frandom(-2.0,2.0),frandom(32.0,34.0),WOF_INTERPOLATE);
		TNT1 A 0 A_Refire();
		TNT1 A 0 A_Stopsound(4);
		SAWN CBA 1 A_WeaponReady(WRF_NOSECONDARY);
		goto ready;

//// ENHANCED
	Deselect.Enhanced:
		TNT1 A 0 A_Stopsound(4);
		SAWN A 1 A_Lower();
		SAWN A 0 A_Lower();
		goto deselect.Enhanced+1;
	Fire.Enhanced:
		TNT1 A 0 {
			A_PlaySound("weapons/chainsaw/start",4);
			A_CustomPunch(2*random(1,10),1,0,"ChainsawPuff");
			}
		SAWN AABC 1 ;
		TNT1 A 0 {
			A_playsound("weapons/chainsaw/loop",4,1.0,TRUE);
			A_CustomPunch(2*random(1,10),1,0,"ChainsawPuff");
			}
		SAWF AB 2 A_WeaponOffset(frandom(-2.0,2.0),frandom(32.0,34.0),WOF_INTERPOLATE);
		TNT1 A 0 A_Refire("Hold.Enhanced");
		TNT1 A 0 A_PlaySound("weapons/chainsaw/stop",4);
		SAWN CBA 1 A_WeaponReady();
		goto ready;
	Hold.Enhanced:
		TNT1 A 0 A_CustomPunch(2*random(1,10),1,0,"ChainsawPuff");
		SAWF AB 2 A_WeaponOffset(frandom(-2.0,2.0),frandom(32.0,34.0),WOF_INTERPOLATE);
		TNT1 A 0 A_CustomPunch(2*random(1,10),1,0,"ChainsawPuff");
		SAWF AB 2 A_WeaponOffset(frandom(-2.0,2.0),frandom(32.0,34.0),WOF_INTERPOLATE);
		TNT1 A 0 A_Refire("Hold.Enhanced");
		TNT1 A 0 A_PlaySound("weapons/chainsaw/stop",4);
		SAWN CBA 1 A_WeaponReady();
		goto ready;
	AltFire:
		TNT1 A 0 A_JumpIf(bdoom_weapons ==2,"AltFire.Modern");
		TNT1 A 2 A_GunFlash("SawKick",GFF_NOEXTCHANGE);
		TNT1 A 0 A_jumpifinventory("PowerStrength",1,"AltHoldStrong");
		KICK AB 1;
		TNT1 A 0 {
			A_SetSpeed(0.1);
			A_playsound("weapons/kick/swing");
			}
		KICK CD 1 ;
		TNT1 A 0 A_Recoil(-2);
		KICK EF 1;
		KICK G 3 A_CustomPunch(3*random(5,12),TRUE,CPF_NOTURN,"KickPuff",72);
		KICK HD 2;
		KICK CBA 3;
		TNT1 A 4 A_SetSpeed(1); 
		goto ready;
	AltHoldStrong:
		KICK AB 1;
		TNT1 A 0 {
			A_SetSpeed(0.2);
			A_playsound("weapons/kick/swing");
			}
		KICK CD 1 ;
		TNT1 A 0 A_Recoil(-5);
		KICK EF 1;
		KICK G 3 A_CustomPunch(30*random(3,10),TRUE,CPF_NOTURN,"KickPuffStrong",80);
		KICK HD 2;
		KICK CBA 3;
		TNT1 A 4 A_SetSpeed(1);
		goto ready;
	SawKick:
		TNT1 A 0 A_PlaySound("weapons/chainsaw/idle",5);
		SAW2 ACDF 1;
		SAW2 FE 2;
		TNT1 A 0 A_PlaySound("weapons/chainsaw/idle",5);
		SAW2 DCBA 2;
		TNT1 A 0;
		SAWN A 4 A_PlaySound("weapons/chainsaw/idle",5);
		TNT1 A 0 A_PlaySound("weapons/chainsaw/idle",5);
		SAWB BCDC 2;
		stop;

/////////// MODERN

	Select.Modern:
		TNT1 AAAAAAAA 0 A_Raise();
		SAWN A 0 {
			A_Overlay(3,"BloodOverlay");
			A_WeaponOffset(-35.0,74.0);
			}
		SAWN AAAAAA 1 {
			A_WeaponOffset(5.0,-6.0,WOF_ADD);
			A_WeaponReady(WRF_NOFIRE|WRF_NOBOB);
			}
		goto ready;
	Deselect.Modern:
		TNT1 A 0 {
			A_ClearRefire();
			invoker.started = 0;
			invoker.sndcounter = 0;
			invoker.cleaning = 0;
			A_Stopsound(4);
			A_Stopsound(5);
			}
	Deselect1.Modern:
		SAWN A 1 A_Lower();
		SAWN A 0 A_Lower();
		loop;

	Ready.Modern:
		TNT1 A 0 {
			let po = player.FindPSprite (3);
			if (!po)
				A_Overlay(3,"BloodOverlay");
			}
		SAWN A 1 {
			If(invoker.started == 1)
				return ResolveState("ReadyOn");
			A_WeaponReady();
			return ResolveState(null);
			}
		wait;
	ReadyOn:
		TNT1 A 0 {
			A_PlaySound("Mweapons/saw/ready",5,1.0,TRUE);
			invoker.started = 1;
			A_AlertMonsters(312);
			A_SPawnItemEx("ChainsawBloodSpill",cos(pitch)* 24,frandom(1.0,3.0),sin(-pitch) * 25 + random(34,36),velx,vely,0,0,SXF_ABSOLUTEVELOCITY,256 - invoker.jamstacks * 8);
			}
		SAWB ABCDC 2 A_WeaponReady();
		TNT1 A 0 {
			A_SpawnItemEx("SawSmoke",cos(pitch)*15,random(8,10),sin(-pitch)*25+random(22,26),0,0,1,0,SXF_ABSOLUTEVELOCITY,80);
			A_SpawnItemEx("SawSmoke",cos(pitch)*15,random(8,10),sin(-pitch)*25+random(22,26),0,0,1,0,SXF_ABSOLUTEVELOCITY,80);
			A_AlertMonsters(312);
			invoker.jamstacks = clamp(invoker.jamstacks-1,0,2048);
			}
		SAWB ABCDC 2 A_WeaponReady();
		TNT1 A 0 {
			A_SpawnItemEx("SawSmoke",cos(pitch)*15,random(8,10),sin(-pitch)*25+random(22,26),0,0,1,0,SXF_ABSOLUTEVELOCITY,80);
			A_SpawnItemEx("SawSmoke",cos(pitch)*15,random(8,10),sin(-pitch)*25+random(22,26),0,0,1,0,SXF_ABSOLUTEVELOCITY,80);
			}
		loop;
	AltFire.Modern:
		TNT1 A 0 A_Jumpif(invoker.started == 0, "Fire.Modern");
		TNT1 A 0 A_Jumpif(invoker.cleaning == 1, "AltFire1.Modern");
		SAW2 ABCDE 1;
	AltFire1.Modern:
		TNT1 A 0 A_PlaySound("Mweapons/saw/start",4);
		SAW2 EFGEFGEFG 1  {
			if (invoker.jamstacks > 0)
				A_SpawnItemEx("ChainsawBloodSpray",0,5,random(10,13),vel.x+random(4,5),vel.y*0.4,frandom(6.0,6.5),frandom(5.5,6.0),SXF_SETTARGET,32);
			}
		TNT1 A 0 {
			A_PlaySound("Mweapons/saw/stop",4);
			invoker.jamstacks = clamp(invoker.jamstacks-8,0,2048);
			invoker.cleaning = 1;
			}
		SAW2 E 9 A_WeaponReady(WRF_NOPRIMARY);
		SAW2 E 9 A_WeaponReady();
		TNT1 A 0 { invoker.cleaning = 0; }
		SAW2 DCBA 1;
		goto ready;	

	Fire.Modern:
		TNT1 A 0 {
			invoker.cleaning = 0;
			A_AlertMonsters(312);
			A_PlaySound("Mweapons/saw/cock");
			if (invoker.started == 1)
				return ResolveState("Attack");
			return ResolveState(null);
			}
		
		SAWS FEDCBA 1 A_WeaponOffset(0,32);
		SAWS BCD 1 A_WeaponOffset(0,32);
		SAWS EF 2 A_WeaponOffset(0,32);

		TNT1 A 0 A_Jump(256 - invoker.jamstacks * 2,"ReadyOn");
		TNT1 A 0 { invoker.jamstacks = clamp(invoker.jamstacks-8,0,2048); }
		goto ready;		
	Attack:	
		TNT1 A 0 {
			A_StopSound(5);
			A_PlaySound("Mweapons/saw/start",4);
			}
		SAWN ABC 2;
	Hold.Modern:
		TNT1 A 0 {
			if(invoker.sndcounter < 75)
				A_playsound("Mweapons/saw/loop",4,1.0,TRUE);
			else
				A_playsound("Mweapons/saw/highloop",4,1.0,TRUE);
			A_AlertMonsters();
			A_CustomPunch(6*random(1,4),1,CPF_NOTURN,"ModernsawPuff");
			invoker.sndcounter++;
			A_SetAngle(angle + frandom(invoker.jamstacks * -0.01,invoker.jamstacks * 0.01));
			A_SetPitch(Pitch + frandom(invoker.jamstacks * -0.01,invoker.jamstacks * 0.01));
			}
		SAWF AB 1 A_WeaponOffset(frandom(-0.3 + invoker.jamstacks * -0.01, 0.3 + invoker.jamstacks * 0.01),frandom(32.0, 32.8 + invoker.jamstacks * 0.01), WOF_INTERPOLATE);
		TNT1 A 0 {
			if (invoker.jamstacks >= 28 && invoker.hittarget == 1 && random(0,256) <= invoker.jamstacks / 8)
				return ResolveState("Jam");
			invoker.hittarget = 0;
			return ResolveState(null);
			}
		TNT1 A 0 A_Refire("Hold.Modern");
	AttackEnd:	
		TNT1 A 0 {
			invoker.sndcounter = 0;
			A_PlaySound("Mweapons/saw/stop",4);
			}
		SAWN CBAA 2;
		TNT1 A 0 A_PlaySound("Mweapons/saw/ready",5,1.0,TRUE);
		goto ready;

	Jam:
		TNT1 A 0 {
			A_PlaySound("Mweapons/saw/stuck",4);
			invoker.started = 0;
			invoker.sndcounter = 0;
			invoker.hittarget = 0;
			A_ClearRefire();
			}
		SAW2 ABCDE 1;
		SAW2 FFFF 1 A_WeaponOffset(random(-1,1),random(32,33),WOF_INTERPOLATE);
		SAW2 F 9;
		SAW2 EDCBA 2;
		SAWN A 2;
		goto ready;


	BloodOverlay:
		TNT1 A 1 A_BloodOverlay();
		loop;
	Loadsprites:
		SX1F AB 0;		SX2F AB 0;		SX3F AB 0;		SX4F AB 0;			//attack
		SX1N ABC 0;		SX2N ABC 0;		SX3N ABC 0;		SX4N ABC 0;			//idle
		SX1B ABCD 0; 	SX2B ABCD 0; 	SX3B ABCD 0; 	SX4B ABCD 0;		//on
		SX1S ABCDEF 0;	SX2S ABCDEF 0;	SX3S ABCDEF 0;	SX4S ABCDEF 0;		//start
		SX12 ABCDEFG 0; SX22 ABCDEFG 0;	SX32 ABCDEFG 0;	SX42 ABCDEFG 0;		//clean
		SZ1F AB 0;		SZ2F AB 0;		SZ3F AB 0;		SZ4F AB 0;			//attack
		SZ1N ABC 0;		SZ2N ABC 0;		SZ3N ABC 0;		SZ4N ABC 0;			//idle
		SZ1B ABCD 0; 	SZ2B ABCD 0; 	SZ3B ABCD 0; 	SZ4B ABCD 0;		//on
		SZ1S ABCDEF 0;	SZ2S ABCDEF 0;	SZ3S ABCDEF 0;	SZ4S ABCDEF 0;		//start
		SZ12 ABCDEFG 0; SZ22 ABCDEFG 0;	SZ32 ABCDEFG 0;	SZ42 ABCDEFG 0;		//clean
		SY1F AB 0;		SY2F AB 0;		SY3F AB 0;		SY4F AB 0;			//attack
		SY1N ABC 0;		SY2N ABC 0;		SY3N ABC 0;		SY4N ABC 0;			//idle
		SY1B ABCD 0; 	SY2B ABCD 0; 	SY3B ABCD 0; 	SY4B ABCD 0;		//on
		SY1S ABCDEF 0;	SY2S ABCDEF 0;	SY3S ABCDEF 0;	SY4S ABCDEF 0;		//start
		SY12 ABCDEFG 0; SY22 ABCDEFG 0;	SY32 ABCDEFG 0;	SY42 ABCDEFG 0;		//clean
		stop;
	}
}



Class ChainsawPuff : EnBulletPuff
{
Default {
	+PUFFONACTORS
	Damagetype "Saw";
	scale 0.15;
	alpha 0.6;
	decal "Sawmark";
	}
states
	{
	Crash:
		TNT1 A 0 {
			If (bdoom_debris == 1) {
				for (int i = 5; i > 0; i--)
					A_SpawnItemEx("Wallpart",0,0,0,	random(6,9),0,random(6,15),	random(0,360),0,64);
				A_SpawnItemEx("ShotSmoke",0,0,0,0,0,frandom(0.2,0.5));
				}
			if (random(1,100) <= 70) {
				if (bdoom_sparks == 1)
					A_PlaySound("weapons/chainsaw/hitwall");
				for (int i = 15; i > 0; i--)
					A_SpawnItemEx("RicochetSpark",0,0,0,	random(1,2),0,random(5,10),random(0,360),0,160);
				}
			}
		CPUF ABCD 1 bright;
		stop;
	}
}

Class ModernsawPuff : ChainsawPuff
{
Default {
	+HITTRACER
	+PUFFONACTORS
	+PUFFGETSOWNER
	}
states
	{
	Melee:
		TNT1 A 0 {
			let chainsaw = BD_Chainsaw (target.player.readyweapon);
				if (chainsaw) {
					chainsaw.jamstacks++;
					chainsaw.hittarget = 1;	
					if (tracer) {
						if (tracer.bloodcolor.G > 4*(tracer.bloodcolor.R  + tracer.bloodcolor.B))
							chainsaw.mblood = "green";
						else if (tracer.bloodcolor.B > 4*(tracer.bloodcolor.R  + tracer.bloodcolor.G))
							chainsaw.mblood = "blue";
						else
							chainsaw.mblood = "red";
						}
					}
			}
		stop;
	}
}

Class ChainsawBloodSpray : BloodGeneral
{
string bcolor;
Default {
	scale 0.1;
	gravity 0.5;
	alpha 0.7;
	height 8;
	}
override void PostBeginPlay() {
	let chainsaw = BD_Chainsaw (target.player.readyweapon);
	if (chainsaw) {
		if (chainsaw.mblood == "green") {
			bcolor = "green";
			A_SetTranslation("GreenBlood");
			}
		else if (chainsaw.mblood == "blue") {
			bcolor = "blue";
			A_SetTranslation("BlueBlood");
			}
		else
			bcolor = "red";
		}
	Super.PostBeginPlay();
	}
states
	{
	spawn:
		TNT1 A 0 NoDelay A_CheckSight("Null");
		TNT1 A 0 {
			A_SetGravity(frandom(0.4,0.6));
			A_SetScale(scale.x*randompick(-1,1),scale.y*randompick(-1,1));
			A_SetRoll(random(0,359));
			}		
		TNT1 a 0 A_Jump(256,1,2,3);
		YBL7 A 0 A_Jump(256,"BloodDrop");
		YBL8 A 0 A_Jump(256,"BloodDrop");
		YBL9 A 0 A_Jump(256,"BloodDrop");
	BloodDrop:
		#### ABCDEFGHIJKLMNOPQRS 1 {
			if (bdoom_blood == 0)
				self.destroy();
			if (waterlevel > 0)
				return ResolveState("Raise");
			A_FadeOut(0.001);
			return ResolveState(null);
			}
		stop;
	Death:
		TNT1 A 1 { 
			if (bcolor == "blue")
				A_SprayDecal("BloodSprayBlue",32);
			if (bcolor == "green")
				A_SprayDecal("BloodSprayGreen",32);
			if (bcolor == "red")
				A_SprayDecal("BloodSprayRed",32);
			}
		stop;
	}
}