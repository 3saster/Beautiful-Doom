Class BD_ShotgunGuy : BDoomMonster replaces ShotgunGuy
{
Default {
	Health 30;
	Radius 20;
	Height 56;
	Mass 100;
	Speed 8;
	PainChance 170;
	Monster;
	+FLOORCLIP
	SeeSound "shotguy/sight";
	AttackSound "none";
	PainSound "shotguy/pain";
	DeathSound "shotguy/death";
	ActiveSound "shotguy/active";
	Obituary "$OB_SHOTGUY";
	Tag "$FN_SHOTGUN";
	DropItem "Shotgun";
+DOHARMSPECIES
BDoomMonster.monsterclip 8;
	}
states
	{
	Spawn:
		SARR AB 10 A_Look();
		loop;
	See:
		TNT1 A 0 {
			A_SetScale(1.0,1.0);
			bFRIGHTENED = false;
			}
	    SPO1 ABCDDCBA 3 A_Chase();
		loop; 	
	Crush:
		CRS1 A -1;
		stop;
	Missile:	
		TNT1 A 0 A_Jumpif(bdoom_weapons == 2,"MissileModern")	;
		SPSR A 5 A_FaceTarget();
		SPSR C 2 A_FaceTarget();
		SPO1 E 3 A_FaceTarget();
		SPO1 F 4 BD_BulletAttack(22.5, 0, 3, random(1,5)*3,"shotguy/attack","weapons/shotgun/fire","none");
		SPO1 F 4;
		SPO1 E 3;
		SPSR C 3;
		SPSR A 3;
		SPSR B 4 {
			if (bdoom_weapons == 1)
				A_playsound("weapons/shotgun/pump",5);
			If(bdoom_Debris == 1)
				A_SpawnItemEx("ShotgunCasing",0,0,28,		frandom(2,4),0,random(2,4),	random(-30,-40),SXF_SETTARGET);
			}
		SPSR A 3;
		goto See;
	MissileModern:		
		SPSR A 5 A_FaceTarget();
		SPSR C 2 A_FaceTarget();
		SPO1 E 3 A_FaceTarget();
		SPO1 F 4 {
			if (monsterclip == 0)
				return ResolveState("Reload");
			A_PlaySound("Mweapons/shotgun/fire");
			A_CustomBulletAttack(20.0, 1.5, 6, 0, "NUllPuff", 0, CBAF_NORANDOM,AAPTR_TARGET,"BD_ZombiePellet",29,7);
			monsterclip--;
			return ResolveState(null);
			}
		SPO1 E 3;
		SPSR C 3;
		SPSR A 3;
		SPSR B 3 {
			A_playsound("Mweapons/shotgun/pump",5);
			If(bdoom_Debris == 1)
				A_SpawnItemEx("ShotgunCasing",0,0,28,		frandom(2,4),0,random(2,4),	random(-30,-40),SXF_SETTARGET);
			}
		SPSR AC 4;
		SPO1 E 15 {
			if (monsterclip == 0)
				return ResolveState("Reload");
			else if (target && Distance2D(target) > 512)
				return ResolveState("See");
			return ResolveState(null);
			}
		SPO1 E 15;
		TNT1 A 0 { 
				return A_MonsterRefire(80,"See");
			return ResolveState(null);
			}
		goto MissileModern+3;
	Reload:
		TNT1 A 0 {
			bFRIGHTENED = true;
			}
	    SPO1 ABCDDCBA 3 A_Chase(null,null);
		TNT1 A 0 A_PlaySound("Mweapons/shotgun/shellin");
	    SPO1 ABCD 3 A_Chase(null,null);
		TNT1 A 0 A_PlaySound("Mweapons/shotgun/shellin");
	    SPO1 DCBA 3 A_Chase(null,null);
		TNT1 A 0 A_PlaySound("Mweapons/shotgun/shellin");
	    SPO1 ABCD 3 A_Chase(null,null);
		TNT1 A 0 A_PlaySound("Mweapons/shotgun/shellin");
	    SPO1 DCBA 3 A_Chase(null,null);
		TNT1 A 0 A_PlaySound("Mweapons/shotgun/shellin");
	    SPO1 ABCD 3 A_Chase(null,null);
		TNT1 A 0 A_PlaySound("Mweapons/shotgun/shellin");
	    SPO1 DCBA 3 A_Chase(null,null);
		TNT1 A 0 A_PlaySound("Mweapons/shotgun/shellin");
	    SPO1 ABCD 3 A_Chase(null,null);
		TNT1 A 0 {
			A_PlaySound("Mweapons/shotgun/shellin");
			monsterclip = 8;
			bFRIGHTENED = false;
			}
	    SPO1 DCBA 3 A_Chase(null,null);
		goto see;
	Pain:
		SSPA a 3;
		SSPA b 3 a_pain();
		goto see;
	Death:
		TNT1 A 0 {
			if (bdoom_gibs == 1 && health < -10 && !burning)
				return ResolveState("DecapDeath");
			else
				return A_Jump(256,"Death.Vanilla","Death1","Death2");
			return ResolveState(null);
			}
	Death.Vanilla:
		SPOM A 3 {
			A_Scream();
			BD_Bleed();
			}
		SPOM B 3 {
			A_NoBlocking();
			BD_Bleed();
			}
		SPOM CDEFG 3;
		SPOM H 3;
		SPOM I 1;
		goto deathbleed;
	Death1: //fall forward
		SPON A 3 BD_Bleed();
		SPON B 3 A_Scream();
		SPON C 3 {
			A_NoBlocking();
			BD_Bleed();
			}
		SPON D 3 BD_Bleed();
		SPON EFGHI 3;
		SPON JKL 4;
		SPON M 1;
		goto deathbleed;
	Death2: //fall left/right
		TNT1 A 0 { 
			A_SetScale(scale.x*randompick(-1,1),scale.y);
			A_Scream();
			}
		SPOO ABC 2 {
			if (!burning)
				A_SpawnItemEx("Blood",random(-2,2),0,random(32,34),	random(4,6),0,random(3,5),random(-70,-90)*scale.x,SXF_SETTARGET);
			}
		TNT1 A 0 A_NoBlocking();
		SPOO DEF 3 {
			if (!burning)
				A_SpawnItemEx("Blood",random(-2,2),0,random(24,26),	random(4,6),0,random(3,5),random(-70,-90)*scale.x,SXF_SETTARGET);
			}
		SPOO GHI 3 {
			if (!burning)
				A_SpawnItemEx("Blood",random(-2,2),0,random(10,16),	random(4,6),0,random(3,5),random(-70,-90)*scale.x,SXF_SETTARGET);
			}
		SPOO KLM 3;
		SPOO N 1;
		goto deathbleed;
	Death.Saw:
		TNT1 A 0 A_JumpIf(bdoom_gibs==0,"Death");
		TNT1 A 0 A_Jump(128,"Death");
		TNT1 A 0 { 
			A_SetScale(scale.x*randompick(-1,1),scale.y);
			A_FaceTarget();
			A_Pain();
			}
		SPOY AAZZ random(8,10) A_SpawnItemEx("BloodSpurt",	1,0,frandom(30,38),0,0,0,random(-40,40),SXF_SETTARGET,96);
		SPOY Z 5 {
			A_Pain();
			A_NoBlocking();
			}
		SPOY AAZZ random(8,10) A_SpawnItemEx("BloodSpurt",	1,0,frandom(30,38),0,0,0,random(-40,40),SXF_SETTARGET,96);
		SPOY Z 5 A_Scream();
		SPOY BCDEFG 3 A_SpawnItemEx("Blood",	random(-4,4),random(0,6),	random(12,18),	random(2,4),0,random(4,6),	random(-20,20),SXF_SETTARGET,128);
		TNT1 A 0 A_PlaySound("gibs/meatland");
		SPOY HI 2 		A_SpawnItemEx("Blood",	random(-4,4),random(0,6),	random(12,18),	random(2,4),0,random(4,6),	random(-20,20),SXF_SETTARGET,128);
		TNT1 A 0 A_PlaySound("gibs/meatland");
		SPOY JK 3 		A_SpawnItemEx("Blood",	random(-4,4),random(0,6),	random(12,18),	random(2,4),0,random(4,6),	random(-20,20),SXF_SETTARGET,128);
		SPOY L 1;
		goto deathbleed;
	DecapDeath:
		SPOD A 3 A_SpawnItemEx("Gib_Head",random(-2,2),random(-2,2),random(50,54),random(2,5),0,random(1,5),random(150,210),SXF_SETTARGET);
		SPOD B 3 BD_Bleed();
		SPOD C 3 A_NoBlocking();
		SPOD DE 3 A_SpawnItemEx("Blood",0,0,	random(48,52),	random(0,2),random(0,2),random(4,6),0,SXF_SETTARGET,96);
		SPOD LLMMLM random(7,11) {
			if (random(0,100) < 40) {
				A_PlaySound("gibs/bloodspurt");
				A_SpawnItemEx("NeckSpurt",frandom(-0.3,0.3),frandom(-0.3,0.3),33,0,0,0,random(0,359),SXF_SETTARGET);
				}
			}
		SPOD FG 2;
		SPOD HIJ 3;
		SPOD K 3 A_PlaySound("body/fall");
		goto deathbleed;
		
	XDeath:
		TNT1 A 0 A_JumpIf(bdoom_gibs==1,"XDeath.Particles");
	XDeath.Vanilla:
		SGIB ab 2;
		SGIB cd 2 A_XScream();
		SGIB e 2 A_NoBlocking();
		SGIB f 2;
		SGIB ghijklmnopq 2;
		goto deathbleed;
		}
}

Class BD_ZombiePellet : RealBullet
{
Default {
	damageFunction (2 * random(3,4));
	//decal "ShotChip";
	}
}