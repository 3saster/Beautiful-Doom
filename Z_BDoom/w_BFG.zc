//**********
// BFG-9001
//**********


class BD_BFG9000 : BDoomWeapon replaces BFG9000
{
int railcounter; //used for Heavy Laser alt attack
Default {
	Height 20;
	weapon.ammotype2 "Cell";
	weapon.ammouse2 1;
	weapon.ammogive2 0;
	Weapon.AmmoUse 40;
	Weapon.AmmoGive 40;
	Weapon.AmmoType "Cell";
	+WEAPON.NOAUTOFIRE;
	Inventory.PickupMessage "$GOTBFG9000";
	Tag "$TAG_BFG9000";	
	Weapon.Selectionorder 280;
	inventory.pickupsound "pickups/bfg";
	ProjectileKickback 100;
	weapon.kickback 30;
	decal "ArachnotronPlasmaSplat";
	weapon.slotnumber 7;
	}
states
	{
	Select:
		TNT1 A 0 {
			If(bdoom_weapons==1)
				A_PlaySound("weapons/bfg/draw");
			}
		BBGN A 1 A_Raise();
		wait;
	Deselect:
		TNT1 A 0 {
			A_StopSound(5);
			invoker.railcounter = 0;
			}
		BBGN A 1 A_Lower();
		wait;
	Ready:
		BBGN A 1 {
			if (bdoom_weapons == 1)
				A_WeaponReady();
			else
				A_WeaponReady(WRF_NOSECONDARY);
			}
		loop;
	Fire: //before fire = 30 tics, fire = 10 tics, refire = 20 tics
		TNT1 A 0 {
			if (bdoom_weapons == 0)
				A_playsound("weapons/bfgf");
			else
				A_PlaySound("weapons/bfg/start",5);
			}
		BBGN ABCDE 3;
		BBGF AABBCCDDDDEEEEE 1 bright;
		BBGF F 5 bright {
			A_FireProjectile("BD_BFGBall",0,1);
			if(bdoom_shakes == 1)
				Radius_Quake(1,20,0,2,0);
			if (bdoom_weapons == 1)
				A_PlaySound("weapons/bfg/fire",5);
			}
		BBGF EEBBA 1;
		TNT1 A 0 A_ReFire();
		TNT1 A 0 {
			If(bdoom_weapons==1)
				A_Playsound("weapons/bfg/cool");
			}
		BBGN EEDDCCBB 2 {
			if (bdoom_debris == 1)
				A_SpawnItemEx("WeaponSmoke",cos(pitch)*25,random(-5,5),sin(-pitch)*25+random(33,37), 0,0,1,0);
			}
		BBGN AA 2;
		goto ready;


	AltFire:
		BBGN A 5 {
			A_StopSound(5);
			A_PlaySound("weapons/bfg/railcharge",5,1,0);
			}
		BBGN BCDE 5;
		TNT1 A 0 A_PlaySound("weapons/bfg/railfire",5,1,0);
	RailFire:
		TNT1 A 0 A_JumpIf(invoker.railcounter >= 100,"AltEnd");
		BBGN E 1 bright {
			A_RailAttack(10*random(1,6),0,1,"","green",RGF_SILENT|RGF_NORANDOMPUFFZ,1,"BFGRailPuff",0,0,300,0,5.0,0,"BFGRailBall_Hold",-4); //this is memory-light
			A_GunFlash();
			if (invoker.railcounter >= 30 && bdoom_shakes == 1)
				Radius_Quake(1,2,0,1,0);
			invoker.railcounter++;
			}
		BBGN E 1 bright A_WeaponOffset(random(-1,1),random(32,34),WOF_INTERPOLATE);
		TNT1 A 0 A_ReFire("RailFire");
	AltEnd:
		TNT1 A 0 {
			A_WeaponOffset(0,32);
			A_RailAttack(0,0,0,"","green",RGF_SILENT|RGF_NORANDOMPUFFZ,2,"BFGRailPuff",0,0,300,0,3.0,5.0,"BFGRailBall",-4); //this memory-heavy ray is for nicer after-shot effect similar to plasma railgun
			A_StopSound(5);
			A_Playsound("weapons/bfg/railcool");
			}
		TNT1 A 0 A_JumpIf(invoker.railcounter >= 100,"AltEndLong");
		BBGN EEEDDDCCCBBB 2 {
			if (bdoom_debris == 1)
				A_SpawnItemEx("WeaponSmoke",cos(pitch)*25,random(-5,5),sin(-pitch)*25+random(33,37),	0,0,1,0);
			}
		BBGN A 5 { invoker.railcounter = 0; }
		goto ready;	
	AltEndLong: //Played only if you held the button until the end
		BBGN EEEEEDDDDDCCCCCBBBBB 2 {
			if (bdoom_debris == 1)
				A_SpawnItemEx("WeaponSmoke",cos(pitch)*25,random(-5,5),sin(-pitch)*25+random(33,37),	0,0,1,0);
			}
		BBGN A 5 { invoker.railcounter = 0; }
		goto ready;	
	AltFlash:
		TNT1 A 1 A_light1();
		TNT1 A 1 A_light2();
		TNT1 A 1 A_light1();
		TNT1 A 1 A_light2();
		goto lightdone;
	}
}


Class BD_BFGBall : FastProjectile replaces BFGBall
{
Default {
	Radius 13;
	Height 8;
	Speed 25;
	Damage 100;
	Projectile;		
	damagetype "BFGSplash";
	missiletype "BFGTrail";
	missileheight 8;
	+BLOODLESSIMPACT
	+FORCEXYBILLBOARD
	+THRUGHOST
	//+SKYEXPLODE
	renderstyle "ADD";
	alpha 0.7;
	decal "none"; //so that decorative railguns won't leave decals
	seesound "none";
	DeathSound "none";
	translation "GreenPlasma";
	scale 0.4;
	}
States
	{
	Spawn:
		TNT1 A 0 NoDelay {
			A_PlaySound("weapons/bfg/fly",6,1.0,TRUE,3);
			// tried this sprite lightning... not great
			/*if (bdoom_debris == 1) {
				A_SpawnItemEx("BFGFlare",0,0,0,velx,vely,velz,0,SXF_SETMASTER|SXF_ORIGINATOR|SXF_ABSOLUTEVELOCITY);
				A_SpawnItemEx("BFGLightning",0,0,0,velx,vely,velz,0,SXF_SETMASTER|SXF_ORIGINATOR|SXF_ABSOLUTEVELOCITY|SXF_ABSOLUTEANGLE);
				A_SpawnItemEx("BFGLightning",0,0,0,velx,vely,velz,90,SXF_SETMASTER|SXF_ORIGINATOR|SXF_ABSOLUTEVELOCITY|SXF_ABSOLUTEANGLE);
				A_SpawnItemEx("BFGLightning",0,0,0,velx,vely,velz,180,SXF_SETMASTER|SXF_ORIGINATOR|SXF_ABSOLUTEVELOCITY|SXF_ABSOLUTEANGLE);
				}*/
			}
	Spawn1:
		BFGB ABCDEFGH 1 bright {
			if (bdoom_debris == 1)
				A_CustomRailGun(0,0,"","none",RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING,0,4,"NullPuff",random(0,360),random(0,360),64,20,0,4,"BFGBallRay");
			}
		loop;
	Death.Sky:
		TNT1 A 1 A_RemoveChildren(1,RMVF_EVERYTHING);
		stop;
	Death:
		TNT1 A 0 {
			A_RemoveChildren(1,RMVF_EVERYTHING);
			A_SprayDecal("BFGLightning",32);
			A_StopSound(6);
			A_SetScale(1.0,1.0);
			If(bdoom_shakes  == 0)
				Radius_Quake(4,34,0,4,0);
			If(bdoom_weapons==1)
				A_PlaySound("weapons/bfg/explosion",6);
			else
				A_PlaySound("weapons/bfgx",6);
			}
		BFGX ABCD 4 bright;
		BFGX E 4 bright A_BFGSpray();
		BFGX FGHIJK 4 bright;
		stop;
	}
}

Class BD_BFGBallTest : BD_BFGBall
{
Default { speed 0; }
}

//experimental sprite lightning. not fun
Class BFGLightning : Flare_General
{
Default {
	alpha 0.4;
	scale 0.38;
	+WALLSPRITE
	+ROLLSPRITE
	+ROLLCENTER
	}
states
	{
	Spawn:
		TNT1 A 0 NoDelay {
			if (!master)
				self.destroy();
			SetOrigin(master.pos,0);
			if (angle == 0) {
				//Console.Printf("True");
				bWALLSPRITE = false;
				bFLATSPRITE = true;
				}
			roll = random(0,359);
			}
	Spawn1:
		BLIT ABCDEFGHIJKLMNO 3 bright {
			angle+=12;
			roll+=6;
			}
		loop;
	}
}

//flare around the bfg orb
Class BFGFlare : Flare_General
{
default {
	alpha 0.25;
	scale 0.7;
	}
states
	{	
	Spawn:
		TNT1 A 0 NoDelay A_Warp(AAPTR_MASTER);
		LENG A 1 bright {
			if (!master)
				self.destroy();
			}
		wait;
	}
}

//flare-like trail behind the orb
Class BFGTrail : Flare_General
{
default {
	alpha 0.07;
	scale 0.2;
	}
states
	{	
	Spawn:
		LENG A 1 NoDelay bright {
			A_FadeOut(0.007);
			scale.x*=0.99;
			scale.y*=0.99;
			}
		loop;
	}
}

//particles of the decorative lightning of the orb
Class BFGBallRay : PlasmaRailBall
{
Default {
	alpha 0.5;
	translation "GreenPlasma";
	}
states
	{
	Spawn:
		TNT1 A 0 Nodelay {
			if (Bdoom_debris == 1)
				A_SpawnItemEx("BFGBallRayFlare",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS);
//did you know that the actor who fires the railgun is also the target of the railgun particles? phantombeta knew
//transfer velocity so that the lightning is always next to the bfg orb and not lagging behind
			if (target)
				vel = target.vel;
				}
		PEXP ABCDEFGHIJKLM 1 bright A_FadeOut(0.08);
		stop;
	}
}

//flares around decorative lightning particles
Class BFGBallRayFlare : Flare_General
{
Default {
	renderstyle "Add";
	alpha 0.1;
	scale 0.07;
	}
states
	{
	Spawn:
		TNT1 A 0 NoDelay {
			if (target)
				vel = target.vel;
			}
		LENG A 1 bright A_FadeOut(0.01);
		loop;
	}
}

//the class that spawns on the targets hit by BFG ball tracers
Class BD_BFGExtra : BFGExtra replaces BFGExtra
{
Default {
	translation "GreenPlasma";
	damagetype "BFGSplash";
	scale 0.35;
	renderstyle "Add";
	alpha 0.6;
	}
states
	{
	Spawn:
		TNT1 A 0 NoDelay {
			If(bdoom_debris == 1) {
				for (int i = 16; i > 0; i--)
					A_SpawnItemEx("BFGGreenPlasmaPiece",0,0,0,frandom(-2.5,2.5),frandom(-2.5,2.5),frandom(-2.5,2.5),random(0,360));
				}
			}
		PEXP AABBCCDDEEFFGGHHIIJJKKLLMM 1 bright;
		stop;
	}
}

//small particles spawned by BFG hits
Class BFGGreenPlasmaPiece : BluePlasmaPiece
{
Default {
	translation "GreenPlasma";
	alpha 1.0;
	scale 0.1;
	smalldebris.dgravity 0.0;
	}
}

//large plasma shreds spawned by heavy laser
Class BFGGreenPlasmaShred : BluePlasmaShred
{
Default {
	translation "GreenPlasma";
	}
}

// particles for heavy laser (alt attack)
Class BFGRailBall : Flare_General
{
Default {
	renderstyle "Add";
	alpha 0.6;
	scale 0.17;
	translation "GreenPlasma";
	}
states
	{
	Spawn:
		TNT1 A 0 NoDelay {
			if(Bdoom_debris == 1)
				A_SpawnItemEx("BFGRailFlare",0,0,0,0,0,0,0);
			}
		PEXP ABCDEFGHIJKLM 1 bright A_FadeOut(0.1);
		stop;
	}
}

//flares for heavy laser particles
Class BFGRailFlare : Flare_General
{
Default {
	alpha 0.05;
	scale 0.2;
	}
states
	{
	Spawn:
		LENG A 1 bright A_FadeOut(0.0025);
		loop;
	}
}

//bigger particles used on the last heavy laser rail when the user stops shooting (too obnoxious to use all the time)
Class BFGRailBall_Hold : BFGRailBall
{
states
	{
	Spawn:
		TNT1 A 0 noDelay {
			if(Bdoom_debris == 1)
				A_SpawnItemEx("BFGRailFlare_Hold");
			}
		TNT1 A 0 A_Jump(256,1,2,3,4,5);
		PEXP ABCDEFGHIJKLM 1 bright A_FadeOut(0.2);
		stop;
	}
}

//flares for bigger heavy laser particles
Class BFGRailFlare_Hold : BFGRailFlare
{
states
	{
	Spawn:
		LENG A 1 bright A_FadeOut(0.01);
		loop;
	}
}

//heavy laser puff
Class BFGRailPuff : BDoomPuff
{
Default {
	+BLOODLESSIMPACT
	+ALWAYSPUFF
	+NOGRAVITY
	damagetype "BFGSplash";
	scale 0.35;
	renderstyle "Add";
	alpha 0.6;
	}
states
	{
	Spawn:
		TNT1 A 1 NoDelay {
			if (bdoom_debris == 1) {
				for (int i = 12; i > 0; i--)
					A_SpawnItemEx("BFGGreenPlasmaPiece",0,0,0,frandom(-2.5,2.5),frandom(-2.5,2.5),frandom(-2.5,2.5),random(0,360));
				for (int i = 8; i > 0; i--)
					A_SpawnItemEx("BFGGreenPlasmaShred",0,0,0,randompick(-5,5),randompick(-5,5),randompick(-5,5),random(0,360));
				}
			}
		stop;
	}
}

/*
Class ModernBFGBall : BFGBall
{
Default {
	+FORCEXYBILLBOARD
	+THRUGHOST
	+SKYEXPLODE
	+DONTHARMSPECIES
	+ROLLSPRITE
	+DONTTHRUST
	damagetype BFGSplash
	seesound ""
	DeathSound ""
	speed 25
	renderstyle Add
	scale 0.15
	alpha 0.9
	decal BFGSplash
	damage 0
	radius 14
	height 8
	+ISMONSTER +FRIENDLY
States
	{
	Spawn:
		TNT1 A 0 NoDelay ACS_NamedExecuteAlways("BD_AssignMBFGSpecies",0)
		TNT1 A 0 A_GiveInventory("BFGChargeCounter",CountInv("BFGChargeCounter",AAPTR_TARGET))
		TNT1 A 0 //A_TakefromTarget("BFGChargeCounter",12)
		TNT1 A 0 A_JumpIfInventory("BFGChargeCounter",9,"SelfDestruct")
		TNT1 A 0 A_SetScale (0.06 + CountInv("BFGChargeCounter") * 0.03, 0.06 + CountInv("BFGChargeCounter") * 0.03)
		TNT1 A 0 A_PlaySound("weapons/bfg/fly",6,1.0,TRUE)
		if(Bdoom_debris == 0,2)
		TNT1 A 0 A_SpawnItemEx("ModernBFGTrail",0,0,0,velx,vely,velz,0,SXF_SETMASTER|SXF_ORIGINATOR|SXF_ABSOLUTEVELOCITY|SXF_TRANSFERSCALE)
	SpawnMain:
		COIR ABCDEFGHIJKLMNOPQRSTUV 2 bright
		loop;
	Death.Sky:
		TNT1 A 0 A_RemoveChildren(1,RMVF_EVERYTHING)
		stop
	Death:
//do this in case of point-blank shot (apparently Spawn state is skipped in those cases)
		TNT1 A 0 A_JumpIfInventory("BFGChargeCounter",1,6)
		TNT1 A 0 ACS_NamedExecuteAlways("BD_AssignMBFGSpecies",0)
		TNT1 A 0 A_GiveInventory("BFGChargeCounter",CountInv("BFGChargeCounter",AAPTR_TARGET))
		TNT1 A 0 //A_TakefromTarget("BFGChargeCounter",12)
		TNT1 A 0 A_JumpIfInventory("BFGChargeCounter",12,"SelfDestruct")
		TNT1 A 0 A_SetScale (0.06 + CountInv("BFGChargeCounter") * 0.03, 0.06 + CountInv("BFGChargeCounter") * 0.03)
//remove the halo, stop humming, place decal, explode
		TNT1 A 0 A_RemoveChildren(1,RMVF_EVERYTHING)
		TNT1 A 0 A_SprayDecal("BFGLightning",32)
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_Explode(40*CountInv("BFGChargeCounter"),64,0,1,64,0,0,none,"BFGSplash")
//turn it into a 'monster'
		TNT1 A 0 A_ClearTarget
		TNT1 A 0 A_ChangeFlag("MISSILE",0) //IMPORTANT!
		COIX A 1 bright A_PlaySound("weapons/bfg/explosion",6)
	Rails:
		TNT1 A 0 A_SetRoll(roll+10,SPF_INTERPOLATE)
		TNT1 A 0 A_LookEx(LOF_NOJUMP,0,144*CountInv("BFGChargeCounter"),0,360)
		TNT1 A 0 A_CustomRailGun(0,0,none,green,RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING,0,15,"NullPuff",random(0,360),random(0,360),random(22,56),56,3.0,0,"MBFGRailParticle")
		COIX A 1 bright A_CustomRailGun(25,0,none,green,RGF_FULLBRIGHT|RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING,1,15,"ModernBFGrailPuff",0,0,144*CountInv("BFGChargeCounter"),64,6.5,0.0,"MBFGRailParticle")
		TNT1 A 0 A_SetRoll(roll+10,SPF_INTERPOLATE)
		TNT1 A 0 A_LookEx(LOF_NOJUMP,0,144*CountInv("BFGChargeCounter"),0,360)
		TNT1 A 0 A_CustomRailGun(0,0,none,green,RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING,0,15,"NullPuff",random(0,360),random(0,360),random(22,56),56,3.0,0,"MBFGRailParticle")
		COIX A 1 bright A_CustomRailGun(25,0,none,green,RGF_FULLBRIGHT|RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING,1,15,"ModernBFGrailPuff",0,0,144*CountInv("BFGChargeCounter"),64,6.5,0.0,"MBFGRailParticle")
		TNT1 A 0 A_SetRoll(roll+10,SPF_INTERPOLATE)
		TNT1 A 0 A_LookEx(LOF_NOJUMP,0,144*CountInv("BFGChargeCounter"),0,360)
		TNT1 A 0 A_CustomRailGun(0,0,none,green,RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING,0,15,"NullPuff",random(0,360),random(0,360),random(22,56),56,3.0,0,"MBFGRailParticle")
		COIX A 1 bright A_CustomRailGun(25,0,none,green,RGF_FULLBRIGHT|RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING,1,15,"ModernBFGrailPuff",0,0,144*CountInv("BFGChargeCounter"),64,6.5,0.0,"MBFGRailParticle")
		TNT1 A 0 A_SetRoll(roll+10,SPF_INTERPOLATE)
		TNT1 A 0 A_LookEx(LOF_NOJUMP,0,144*CountInv("BFGChargeCounter"),0,360)
		TNT1 A 0 A_CustomRailGun(0,0,none,green,RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING,0,15,"NullPuff",random(0,360),random(0,360),random(22,56),56,3.0,0,"MBFGRailParticle")
		COIX A 1 bright A_CustomRailGun(25,0,none,green,RGF_FULLBRIGHT|RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING,1,15,"ModernBFGrailPuff",0,0,144*CountInv("BFGChargeCounter"),64,6.5,0.0,"MBFGRailParticle")
		TNT1 A 0 A_SetRoll(roll+10,SPF_INTERPOLATE)
		TNT1 A 0 A_LookEx(LOF_NOJUMP,0,144*CountInv("BFGChargeCounter"),0,360)
		TNT1 A 0 A_CustomRailGun(0,0,none,green,RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING,0,15,"NullPuff",random(0,360),random(0,360),random(22,56),56,3.0,0,"MBFGRailParticle")
		COIX A 1 bright A_CustomRailGun(25,0,none,green,RGF_FULLBRIGHT|RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING,1,15,"ModernBFGrailPuff",0,0,144*CountInv("BFGChargeCounter"),64,6.5,0.0,"MBFGRailParticle")
		TNT1 A 0 A_SetRoll(roll+10,SPF_INTERPOLATE)
		TNT1 A 0 A_LookEx(LOF_NOJUMP,0,144*CountInv("BFGChargeCounter"),0,360)
		TNT1 A 0 A_CustomRailGun(0,0,none,green,RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING,0,15,"NullPuff",random(0,360),random(0,360),random(22,56),56,3.0,0,"MBFGRailParticle")
		COIX A 1 bright A_CustomRailGun(25,0,none,green,RGF_FULLBRIGHT|RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING,1,15,"ModernBFGrailPuff",0,0,144*CountInv("BFGChargeCounter"),64,6.5,0.0,"MBFGRailParticle")
		TNT1 A 0 A_SetRoll(roll+10,SPF_INTERPOLATE)
		TNT1 A 0 A_LookEx(LOF_NOJUMP,0,144*CountInv("BFGChargeCounter"),0,360)
		TNT1 A 0 A_CustomRailGun(0,0,none,green,RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING,0,15,"NullPuff",random(0,360),random(0,360),random(22,56),56,3.0,0,"MBFGRailParticle")
		COIX A 1 bright A_CustomRailGun(25,0,none,green,RGF_FULLBRIGHT|RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING,1,15,"ModernBFGrailPuff",0,0,144*CountInv("BFGChargeCounter"),64,6.5,0.0,"MBFGRailParticle")
		TNT1 A 0 A_SetRoll(roll+10,SPF_INTERPOLATE)
		TNT1 A 0 A_LookEx(LOF_NOJUMP,0,144*CountInv("BFGChargeCounter"),0,360)
		TNT1 A 0 A_CustomRailGun(0,0,none,green,RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING,0,15,"NullPuff",random(0,360),random(0,360),random(22,56),56,3.0,0,"MBFGRailParticle")
		COIX A 1 bright A_CustomRailGun(25,0,none,green,RGF_FULLBRIGHT|RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING,1,15,"ModernBFGrailPuff",0,0,144*CountInv("BFGChargeCounter"),64,6.5,0.0,"MBFGRailParticle")
		TNT1 A 0 A_TakeInventory("BFGChargeCounter",1)
		TNT1 A 0 A_JumpIfInventory("BFGChargeCounter",1,"Rails")
		goto Explosion
	Explosion:	
		COIX ABCDEFGHIJKLM 1 bright
		stop
	SelfDestruct:
		TNT1 A 0 A_Stop
		TNT1 A 0 A_RemoveChildren(1,RMVF_EVERYTHING)
		TNT1 A 0 A_SetScale(1.0,1.0)
		TNT1 A 0 A_PlaySound("Mweapons/bfg/overcharge",6)
		TNT1 A 0 A_Explode(10*CountInv("BFGChargeCounter"),250,XF_HURTSOURCE ,1,250,0,0,none,"BFGSplash")
		COIX ABCDEFGHIJKLM 2 bright A_CustomRailGun(0,0,none,green,RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING,0,15,"NullPuff",random(0,360),random(0,360),random(22,56),56,3.0,0,"MBFGRailParticle")
		stop
	}
}

Class ModernBFGTrail : Flare_General
{
alpha 0.4
scale 0.5
+NOINTERACTION
states
	{	
	Spawn:
		TNT1 A 0 NoDelay A_JumpIf(GetCVAR("Bdoom_debris == 0,"Null")
		TNT1 A 0 A_SetScale(scalex*1.5,scaley*1.5)
		TNT1 A 0 A_Warp(AAPTR_MASTER)
		LENG A 1 bright
		wait;
	}
}

Class ModernBFGrailPuff : BFGRailPuff
{
+ALLOWTHRUFLAGS
+THRUSPECIES
+MTHRUSPECIES
+DONTTHRUST
states
	{
	Spawn:
		TNT1 A 0 NoDelay A_JumpIf(GetCVAR("Bdoom_debris == 0,"Null")
		TNT1 AAAAAAAAAAAA 0 A_SpawnProjectile("BFGGreenPlasmaPiece",0,0,random(-360,360),2,random(-50,50))
		TNT1 A 1
		stop
	}
}

Class MBFGRailParticle : Flare_General
{
renderstyle Add
alpha 0.6
scale 0.03
translation "GreenPlasma"
states
	{
	Spawn:
		PEXP ABCDEFGHIJKLM 3 bright //A_FadeOut(0.05)
		stop
	}
}

Class ModernBFG9000 : BD_BFG9000
{
//weapon.sisterweapon	BD_BFG9000
//+POWERED_UP
+NOAUTOFIRE
Weapon.BobStyle InverseSmooth
weapon.bobrangex 0.2
weapon.bobrangey 0.5
weapon.bobspeed 2.0
weapon.upsound "Mweapons/bfg/raise"
weapon.slotnumber 7
weapon.ammouse 	10
weapon.ammogive		0
weapon.ammogive2	0
states
	{
	Select:
		TNT1 AAAAAAAA 0 A_Raise();
		BBGN A 1 offset(-40,72) A_WeaponReady(WRF_NOFIRE|WRF_NOBOB)
		BBGN A 1 offset(-36,68) A_WeaponReady(WRF_NOFIRE|WRF_NOBOB)
		BBGN A 1 offset(-33,64) A_WeaponReady(WRF_NOFIRE|WRF_NOBOB)
		BBGN A 1 offset(-30,62) A_WeaponReady(WRF_NOFIRE|WRF_NOBOB)
		BBGN A 1 offset(-24,56) A_WeaponReady(WRF_NOFIRE|WRF_NOBOB)
		BBGN A 1 offset(-18,50) A_WeaponReady(WRF_NOFIRE|WRF_NOBOB)
		BBGN A 1 offset(-12,44) A_WeaponReady(WRF_NOFIRE|WRF_NOBOB)
		BBGN A 1 offset(-6,38) A_WeaponReady(WRF_NOFIRE|WRF_NOBOB)
		goto ready;
	Deselect:
		TNT1 A 0 A_ClearRefire
		TNT1 A 0 A_TakeInventory("BFGChargeCounter",12)
		TNT1 A 0 A_StopSound(5)
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_StopSound(7)
		BBGN A 1 A_Lower();
		wait;
	Ready:
		TNT1 A 0 A_PlaySound("Mweapons/bfg/ready",6,0.45,1)
		TNT1 A 0 A_ClearRefire
		TNT1 A 0 A_TakeInventory("BFGChargeCounter",12)
		TNT1 A 0 A_OverLay(3,"ReadyLights")
		BBGN A 20 A_WeaponReady(WRF_NOSECONDARY)
		goto ready;+2
	ReadyLights:
		BMGY ABCDEFEDCB 2 bright
		stop
	Fire:
		TNT1 A 0 A_StopSound(5)
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_StopSound(7)
		TNT1 A 0 A_Overlay(3,"ChargeLights")
		BBGN A 10 A_PLaySound("Mweapons/bfg/charge",6)
	Hold:
		TNT1 A 0 A_JumpIfInventory("BFGChargeCounter",8,"OverCharge")
		TNT1 A 0 A_Overlay(3,"ChargeLights")
		BBGN A 14 A_TakeInventory("Cell",10)
		TNT1 A 0 A_GiveInventory("BFGChargeCounter",1)
		TNT1 A 0 A_JumpIf(CountInv("Cell") < 10,"FireBFG")
		TNT1 A 0 A_ReFire
		goto FireBFG
	OverCharge:
		TNT1 A 0 A_PLaySound("Mweapons/bfg/charge2",7)
	OverCharge1:
		TNT1 A 0 A_Overlay(3,"OverChargeLights")
		BBGN A 18
		TNT1 A 0 A_ReFire(1)
		goto FireBFG
		TNT1 A 0 A_Overlay(3,"OverChargeLights")
		BBGN A 18
		TNT1 A 0 A_ReFire(1)
		goto FireBFG
		TNT1 A 0 A_Overlay(3,"OverChargeLights")
		BBGN A 18 A_GiveInventory("BFGChargeCounter",1)
		goto FireSelf
	OverChargeLights:
		BMGZ JIHJIHJIH 2 bright
		stop
	FireBFG:
		BBGF AB 2 bright
		TNT1 A 0 A_StopSound(7)
		TNT1 A 0 A_JumpIfInventory("BFGChargeCounter",7,"Fire4")
		TNT1 A 0 A_JumpIfInventory("BFGChargeCounter",5,"Fire3")
		TNT1 A 0 A_JumpIfInventory("BFGChargeCounter",3,"Fire2")
	Fire1:
		TNT1 A 0 Radius_Quake(1,12,0,2,0)
		TNT1 A 0 A_PlaySound("Mweapons/bfg/fire",6)
		BBGF C 3 bright A_FireProjectile("ModernBFGBall",0,0)
		TNT1 A 0 A_SetPitch(pitch - (0.8 * CountInv("BFGChargeCounter")),SPF_INTERPOLATE)
		BBGF BA 3 bright
		BBGN EEDDCCBB 1 A_SpawnItemEx("WeaponSmoke",cos(pitch)*25,random(-5,5),sin(-pitch)*25+random(33,37),		0,0,1,0,0,128)
		BBGN A 2
		goto ready;
	Fire2:
		BBGF C 2 bright
		TNT1 A 0 Radius_Quake(1,14,0,2,0)
		TNT1 A 0 A_PlaySound("Mweapons/bfg/fire",6)
		BBGF D 3 bright A_FireProjectile("ModernBFGBall",0,0)
		TNT1 A 0 A_SetPitch(pitch - (0.8 * CountInv("BFGChargeCounter")),SPF_INTERPOLATE)
		BBGF CBA 3 bright
		BBGN EEEDDDCCCBBB 1 A_SpawnItemEx("WeaponSmoke",cos(pitch)*25,random(-5,5),sin(-pitch)*25+random(33,37),		0,0,1,0,0,112)
		BBGN A 4
		goto ready;
	Fire3:
		BBGF CD 2 bright
		TNT1 A 0 Radius_Quake(1,14,0,2,0)
		TNT1 A 0 A_PlaySound("Mweapons/bfg/fire",6)
		BBGF E 3 bright A_FireProjectile("ModernBFGBall",0,0)
		TNT1 A 0 A_SetPitch(pitch - (0.8 * CountInv("BFGChargeCounter")),SPF_INTERPOLATE)
		BBGF DCBA 3 bright
		BBGN EEEDDDCCCBBB 1 A_SpawnItemEx("WeaponSmoke",cos(pitch)*25,random(-5,5),sin(-pitch)*25+random(33,37),		0,0,1,0,0,100)
		BBGN A 6
		goto ready;
	Fire4:
		BBGF CDE 2 bright
		TNT1 A 0 Radius_Quake(1,14,0,2,0)
		TNT1 A 0 A_PlaySound("Mweapons/bfg/fire",6)
		BBGF F 3 bright A_FireProjectile("ModernBFGBall",0,0)
		TNT1 A 0 A_SetPitch(pitch - (0.8 * CountInv("BFGChargeCounter")),SPF_INTERPOLATE)
		BBGF DDCBA 3 bright
		BBGN EEEEDDDDCCCCBBBB 1 A_SpawnItemEx("WeaponSmoke",cos(pitch)*25,random(-5,5),sin(-pitch)*25+random(33,37),		0,0,1,0,0,92)
		BBGN A 8
		goto ready;	
	FireSelf:
		TNT1 A 0 A_StopSound(7)
		TNT1 A 0 A_StopSound(6)
		BBGF ABCDE 1 bright
		TNT1 A 0 Radius_Quake(1,25,0,2,0)
		TNT1 A 0 A_PlaySound("Mweapons/bfg/fire",6)
		BBGF F 3 bright A_FireProjectile("ModernBFGBall",0,0)
		TNT1 A 0 A_SetPitch(pitch - (0.8 * CountInv("BFGChargeCounter")),SPF_INTERPOLATE)
		BBGF DDCBA 2 bright
		BBGN EEEEEEDDDDDDCCCCCCBBBBBB 1 A_SpawnItemEx("WeaponSmoke",cos(pitch)*25,random(-5,5),sin(-pitch)*25+random(33,37),		0,0,1,0,0,80)
		BBGN AAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("WeaponSmoke",cos(pitch)*25,random(-5,5),sin(-pitch)*25+random(33,37),		0,0,1,0,0,80)
		goto ready;	
	ChargeLights:
		TNT1 A 0 A_JumpIfInventory("BFGChargeCounter",8,9)
		TNT1 A 0 A_JumpIfInventory("BFGChargeCounter",7,9)
		TNT1 A 0 A_JumpIfInventory("BFGChargeCounter",6,9)
		TNT1 A 0 A_JumpIfInventory("BFGChargeCounter",5,9)
		TNT1 A 0 A_JumpIfInventory("BFGChargeCounter",4,9)
		TNT1 A 0 A_JumpIfInventory("BFGChargeCounter",3,9)
		TNT1 A 0 A_JumpIfInventory("BFGChargeCounter",2,9)
		TNT1 A 0 A_JumpIfInventory("BFGChargeCounter",1,9)
		TNT1 A 0 A_JUmp(256,9)
		BMGZ HGFEDCBA 14 bright
		BMGZ A 60
		stop
	}
}

Class BFGChargeCounter : DummyChecker
{
inventory.maxamount 12
}