////////////////////////////////////////////////////////////;
////////////// ALL BASIC BEAUTIFUL DOOM OBJECTS ////////////;
////////////////////////////////////////////////////////////


Class DebrisGeneral : Actor
{
int sfxtype; //0 = debris, 1 = flames/smoke
Default {
	+BLOODLESSIMPACT
	+FIXMAPTHINGPOS
	+NOTAUTOAIMED
	+MISSILE
	+NOBLOCKMAP 
	+MOVEWITHSECTOR
	+RELATIVETOFLOOR
	+NOGRAVITY
	+DROPOFF
	+NOTELEPORT
	+FORCEXYBILLBOARD
	+THRUACTORS
	+FLOORCLIP
	-ALLOWPARTICLES
	renderstyle "Translucent";
	alpha 1.0;
	radius 1;
	height 1;
	mass 1;
	damage 0;
	}
override void PostBeginPlay()
	{
//if the type is "debris" (default), check against bdoom_debris variable and flip x and y randomly
		if (sfxtype == 0) {
			if (bdoom_debris == 0)
				self.destroy();
			else
				A_SetScale(scale.x*randompick(-1,1),scale.y*randompick(-1,1));
		}
//if the type is "flames", check against bdoom_flames and don't touch scale
		else if (sfxtype == 1) {
			if (bdoom_flames == 0)
				self.destroy();
		}
	super.PostBeginPlay();
	}
}

Class SmallDebris : DebrisGeneral
{
double dgravity;
property dgravity : dgravity;
Default {
	-MISSILE
	-RELATIVETOFLOOR
	+NOINTERACTION
	smalldebris.dgravity 0.8;
	}
override void Tick() {
	super.tick();
	vel.z-=dgravity;
	if (pos.z <= floorz)
		self.destroy();
	}
}

Class BdoomPuff : Actor
{
Default {
	+NOBLOCKMAP
	+NOGRAVITY
	+FORCEXYBILLBOARD
	-ALLOWPARTICLES
	+DONTSPLASH
	}
}

Class Flare_General : DebrisGeneral
{
Default {
	-MOVEWITHSECTOR
	-RELATIVETOFLOOR
	+NOINTERACTION
	-MISSILE
	renderstyle "Add";
	alpha 0.4;
	scale 0.4;
	}
override void PostBeginPlay()
	{
	sfxtype = 1;
	super.PostBeginPlay();
	}
}

//used for flares that are launched from the weapon alongside the projectile, e.g. grenades
Class ProjectileFlare : Actor
{
Default {
	+FORCEXYBILLBOARD
	+MISSILE
	+NOBLOCKMAP
	+NOTELEPORT
	+DROPOFF
	+NOGRAVITY
	+BLOODLESSIMPACT
	damage 0;
	renderstyle "Add";
	}
}

Class ParticleFire_General : DebrisGeneral
{
Default {
	speed 2;
	renderstyle "Add";
	scale 0.5;
	alpha 0.5;
	+NOINTERACTION
	}
override void PostBeginPlay()
	{
	sfxtype = 1;
	super.PostBeginPlay();
	}
}

Class FirePiece : DebrisGeneral
{
Default {
	renderstyle "Add";
	scale 0.2;
	alpha 0.5;
	+NOINTERACTION
	}
override void PostBeginPlay()
	{
	A_SetScale(scale.x*randompick(-1,1),scale.y*randompick(-1,1));
	sfxtype = 1;
	super.PostBeginPlay();
	}
states
	{
	Spawn:		
		FIRP ABCDEFGHIJ 2 bright A_FadeOut(0.05);
		stop;
	}
}

///////////////;
//// SMOKE ////;
///////////////

Class Smoke_General : DebrisGeneral
{
Default {
	+NOINTERACTION
	vspeed 1;
	renderstyle "Add";
	alpha 0.3;
	scale 0.1;
	}
states
	{
	Spawn:
		SMOK ABCDEFGHIJKLMNOPQ 1 {
			A_SpawnItemEx("BasicSmokeTrail",random(-2,2),random(-2,2),random(-2,2),0,0,0,0,SXF_SETMASTER);
			A_Fadeout(0.01);
			}
		stop;
	}
}

Class BasicSmokeTrail : Smoke_General
{
Default {
	vspeed 0;
	alpha 0.15;
	}
states
	{
	Spawn:
		SMOK DEFGHIJKLMNOPQ 1 A_Fadeout(0.01);
		stop;
	}
}

//spawned by puffs
class ShotSmoke : Smoke_General
{ 
Default {
	alpha 0.4;
	scale 0.18;
	}
states
	{
	Spawn:
		SMK1 ABCDEFGHIJKLMNOPQR 1 {
			A_SpawnItemEx("ShotSmokeTrail",frandom(-1.5,1.5),frandom(-1.5,1.5),frandom(-1.5,1.5),0,0,0,0,SXF_SETMASTER);
			A_Fadeout(0.01);
			}
		stop;
	}
}

Class ShotSmokeTrail : BasicSmokeTrail
{
Default {
	alpha 0.15;
	}
states
	{
	Spawn:
		SMK1 DEFGHIJKLMNOPQR 1 A_Fadeout(0.01);
		stop;
	}
}

//spawned over weapon barrels after shooting
class WeaponSmoke : Smoke_General
{
Default {
	alpha 0.25;
	scale 0.15;
	}
states
	{
	Spawn:		
		SMK1 ABCDEFGHIJKLMNOPQR 1 {
			A_SpawnItemEx("WeaponSmokeTrail",random(-2,2),random(-2,2),random(-2,2),0,0,0,0);
			A_FadeOut(0.01);
			}
		stop;
	}
}

Class WeaponSmokeTrail : BasicSmokeTrail
{
Default {
	alpha 0.1;
	scale 0.12;
	}
states
	{
	Spawn:
		SMK1 DEFGHIJKLMNOPQR 1 A_Fadeout(0.01);
		stop;
	}
}

//big dark smoke used for some explosions
class BlackSmoke : Smoke_General
{
Default {
	renderstyle "Translucent";
	alpha 0.15;
	}
states
	{
	Spawn:
		SMOK ABCDEFGHIJKLMNOPQ 1 {
			A_SpawnItemEx("BlackSmokeTrail",random(-2,2),random(-2,2),random(-2,2),0,0,0,0);
			A_FadeOut(0.01);
			}
		wait;
	}
}

Class BlackSmokeTrail : BasicSmokeTrail
{
Default {
	renderstyle "Translucent";
	alpha 0.08;
	}
}

//basic smoke behind a rocket
Class Rocket1Trail : Smoke_General
{
Default {
	scale 0.1;
	renderstyle "Translucent";
	alpha 0.3;
	}
states
	{
	Spawn:
		SMOK ABCDEFGHIJKLMNOPQ 1 A_FadeOut(0.01);
		stop;
	}
}

Class SmokeBallTrail : Rocket1Trail
{
Default {
	alpha 0.15;
	}
}

//a bouncing particle that spawns thin smoke behind itself
Class SmokingPiece : SmallDebris
{
Default {
	smalldebris.dgravity 0.7;
	alpha 1.0;
	}
states
		{
		Spawn:
			TNT1 A 1 {
				A_SpawnItem("SmokingPieceSmoke");
				A_FadeOut(0.025);
				}
			loop;
		}
}

Class SmokingPieceSmoke : BasicSmokeTrail
{
Default {
	scale 0.04;
	alpha 0.3;
	}
}

/////////////////////
//// BULLET PUFF ////
/////////////////////

//used by stuff like decorative rails spawned by BFGball
Class NullPuff : BulletPuff
{
Default {
	damagetype "none";
	+NOINTERACTION
	+BLOODLESSIMPACT
	+PAINLESS
	}
states
	{
		Spawn:
			TNT1 A 1 Nodelay;
			stop;
	}
}

Class EnBulletPuff : BDoomPuff
{
Default {
	decal "bulletchip";
	renderstyle "Add";
	scale 0.1;
	alpha 0.8;
	mass 1;
	}
states
	{
	Spawn:
		TNT1 A 0 NoDelay {
			if (bdoom_debris == 1) {
				A_SpawnItemEx("ShotSmoke",0,0,0,0,0,frandom(0.2,0.5));
				for (int i = 0; i <= 6; i++)
					A_SpawnItemEx("Wallpart",0,0,0,	frandom(1,4),frandom(1,4),frandom(2,5),	random(0,360),0,64);
				}
			}
		BPUF ABCD 1 bright;
		stop;
	}
}


Class EnShotPuff : EnBulletPuff
{
Default {
	-NOEXTREMEDEATH
	decal "ShotChip";
	}
}

//a very small dark piece of debris spawned by hitting a wall
Class WallPart : DebrisGeneral
{
Default {
	bouncetype "Doom";
	-NOGRAVITY
	+DONTSPLASH
	bouncefactor 0.4;
	Renderstyle "Translucent";
	alpha 1.0;
	scale 0.1;
	translation "Scorched";
	}
states
	{
	Spawn:
		BPRT ACDEFGH 2 {
			if (vel.z == 0)
				self.destroy();
			}
		BPRT ACDEFGH 3 {
			if (vel.z == 0)
				self.destroy();
			}
		stop;
	 Death:
		TNT1 A 1;
	 	stop;
	 }
}

//spawns sparks for chainsaw
Class Spark_Spawner : DebrisGeneral
{
Default {
	+NOINTERACTION
	+NOGRAVITY
	}
states
	{
	Spawn:
		TNT1 AAAAAAAAAAAAAAA 0 NoDelay A_SpawnItemEx("RicochetSpark",0,0,0,	random(1,2),0,random(5,9),random(0,360),0,40);
		TNT1 A 1;
		stop;
	}
}

Class RicochetSpark : SmallDebris
{
Default {
	renderstyle "ADD";
	alpha 1.0;
	radius 3;
	height 3;
	scale 0.03;
	}
states
	{
	Spawn:
		SPRK A 1 bright	A_FadeOut(0.05);
		loop;
	}
}

//fake bullet that ricochets from bulletpuffs
Class RicochetBullet : DebrisGeneral
{
Default {
	+THRUACTORS
	bouncetype "Hexen";
	speed 30;
	seesound "none";
	renderstyle "Add";
	alpha 0.8;
	}
states
	{
	Spawn:
		TNT1 A 0 NoDelay {
			if (bdoom_sparks == 1)
				A_PlaySound("weapons/ricochet");
			}
		PUFF A 2;
		stop;
	}
}

//for backwards compatibility, will be removed after full transition to zscript
Class DummyChecker : Inventory
{
Default {
	+INVENTORY.UNDROPPABLE 
	+INVENTORY.UNTOSSABLE
	-COUNTITEM
	-INVENTORY.INVBAR
	+INVENTORY.PERSISTENTPOWER
	inventory.amount 1;
	inventory.maxamount 9999;
	}
}