Class BD_SuperShotgun : BDoomWeapon //replaces Supershotgun
{
bool ShotFired;
Default
	{
	Tag "$TAG_SUPERSHOTGUN";
	inventory.pickupmessage "$GOTSHOTGUN2"; 
	Obituary "$OB_MPSSHOTGUN"; 
	weapon.selectionorder 40;
	Weapon.AmmoType		"Shell";
	Weapon.AmmoUse		1;
	Weapon.AmmoGive		0;
	Weapon.AmmoType2	"Shell";
	Weapon.AmmoUse2		1;
	Weapon.AmmoGive2	8;
	weapon.slotnumber 	3;
	weapon.slotpriority 1;
	BDoomWeapon.AutoReloadTime 160;
	}
override void Tick()
	{
	If (Owner)
		return;
	else
		{
		if(bdoom_weapons == 2)
			pickupsound = "Mweapons/ssg/close";
		else
			pickupsound = "weapons/ssg/close";
		}
	Super.Tick();
	}
override void DoEffect()
	{
	if (owner)
		{
		if(bdoom_weapons == 2)
			{
			Ammo1 = ammo(Owner.FindInventory("SSGClip") );
			ammouse1 = 2;
			ammouse2 = 0;
			bNOAUTOFIRE = true;
			bAMMO_OPTIONAL = true;
			if (!ammo1)
				Owner.GiveInventory("SSGClip",2);
			}
		else
			{
			Ammo1 = ammo(Owner.FindInventory("Shell"));
			ammouse1 = 2;
			ammouse2 = 1;
			bNOAUTOFIRE = false;
			bAMMO_OPTIONAL = false;
			}
		}
	Super.DoEffect();
	}
states
{
	Loadsprites:
		SH2L ABCDEF 0;
		SH2M ABCDEF 0; 
		SH2O ABCDEF 0;
		stop;
	Spawn:
		SGN2 A 1 {
			if (bdoom_weapons == 2)
				self.frame = 1;
			else
				self.frame = 0;
			}
		loop;
	Select:
		TNT1 A 0 A_JumpIf(bdoom_weapons==2,"Select.Modern");
		TNT1 A 0 A_JumpIf(bdoom_weapons==1,"Select.Enhanced");
		//TNT1 AAAAAAAA 0 A_Raise();
		SH21 ABCDEF 1 A_WeaponReady(WRF_NOFIRE);
		goto ready;
	Deselect:
		TNT1 A 0 A_JumpIf(bdoom_weapons==2,"DeSelect.Modern");
		TNT1 A 0 A_JumpIf(bdoom_weapons==1,"Deselect.Enhanced");
		SH2N C 1 A_Lower();
		wait;
	Ready:
		TNT1 A 0 A_JumpIf(bdoom_weapons==2,"Ready.Modern");
		TNT1 A 0 A_JumpIf(bdoom_weapons==1,"Ready.Enhanced");
		SH2N C 1 A_WeaponReady(WRF_NOSECONDARY);
		loop;
	BarrelSmokeRight:
		TNT1 A random(15,20);
		TNT1 AAAAAAAAAAAAAAAAAAAA 	random(1,2) {
			let s = player.FindPSprite(PSP_Weapon);
			if (s && (invoker.InStateSequence(s.curstate,invoker.FindState("Ready"))			||
				invoker.InStateSequence(s.curstate,invoker.FindState("Ready.Enhanced"))	||
				invoker.InStateSequence(s.curstate,invoker.FindState("Ready.Modern")))	)
				A_Eject("BarrelSmoke",cos(pitch)*12,0.5,3.5,	frandom(0.015,-0.015),frandom(0.015,-0.015),0.1);
			}
		stop;
	BarrelSmokeLeft:
		TNT1 A random(45,50);
		TNT1 AAAAAAAAAAAAAAAAAAAA 	random(1,2) {
			let s = player.FindPSprite(PSP_Weapon);
			if (s && (invoker.InStateSequence(s.curstate,invoker.FindState("Ready"))			||
				invoker.InStateSequence(s.curstate,invoker.FindState("Ready.Enhanced"))	||
				invoker.InStateSequence(s.curstate,invoker.FindState("Ready.Modern")))	)
				A_Eject("BarrelSmoke",cos(pitch)*12,-0.5,3.5,	frandom(0.015,-0.015),frandom(0.015,-0.015),0.1);
			}
		stop;
	BarrelSmokeBoth:
		TNT1 A random(45,50);
		TNT1 AAAAAAAAAAAAAAAAAAAA 	random(1,2) {
			let s = player.FindPSprite(PSP_Weapon);
			if (s && (invoker.InStateSequence(s.curstate,invoker.FindState("Ready"))			||
				invoker.InStateSequence(s.curstate,invoker.FindState("Ready.Enhanced"))	||
				invoker.InStateSequence(s.curstate,invoker.FindState("Ready.Modern")))	) {
				A_Eject("BarrelSmoke",cos(pitch)*12,0.5,3.5,	frandom(0.015,-0.015),frandom(0.015,-0.015),0.1);
				A_Eject("BarrelSmoke",cos(pitch)*12,-0.5,3.5,	frandom(0.015,-0.015),frandom(0.015,-0.015),0.1);
				}
			}
		stop;
	Fire:
	//fire = 10 tics, reload = 47 tics, refire 5 tics
		TNT1 A 0 A_JumpIf(bdoom_weapons==2,"Fire.Modern");
		TNT1 A 0 A_JumpIf(bdoom_weapons==1,"Fire.Enhanced");
		SH2N C 3 A_Gunflash();
		SH2F Z 2 {
				A_PlaySound("weapons/sshotf",5);
				if (bdoom_tracers)
					A_FireBullets(11.2, 7.1, 20, 5, "EnSSGPuff",FBF_USEAMMO|FBF_NORANDOMPUFFZ,0,"BulletTracer",0,0);
				else
					A_FireBullets(11.2, 7.1, 20, 5, "EnSSGPuff",FBF_USEAMMO|FBF_NORANDOMPUFFZ);
				}
		SH2F A 2;
		SH2F B 2;
		SH2N C 1 { 
			If(bdoom_debris)	{
				A_Overlay(10,"BarrelSmokeBoth");
				}
			}
		TNT1 A 0 A_CheckReload();
	Reload:
		TNT1 A 0 A_JumpIf(bdoom_weapons==2,"Reload.Modern");
		TNT1 A 0 A_JumpIf(bdoom_weapons==1,"Reload.Enhanced");
		SH2R ABCDEFGH 1;
		SH2R I 1 A_playsound("weapons/sshoto");
		SH2R JKL 1;
		TNT1 A 0 { 
			if (bdoom_debris) {
				A_Eject("ShotgunCasing",16,-3.5,6.5,frandom(0,1),FRandom(-2.5,-3),frandom(4,5));
				A_Eject("ShotgunCasing",16,-5,6.5,frandom(0,1),FRandom(-2.5,-3),frandom(4,5));
				}
			}
		SH2R MNOPQX 2;
		SH2R Y 2 A_playsound("weapons/sshotl");
		SH2R Z 2;
		SH2S ABCD 1;
		SH2S EFGH 1;
		TNT1 A 0 A_playsound("weapons/sshotc");
		SH2S H 2;
		SH2N C 6 A_Refire();
		SH2N C 5 A_Refire();
		goto ready	;
	Flash:
		TNT1 A 0 A_JumpIf(GetCVAR("bdoom_muzzle") == true,"Flash1");
		SH2L A 3 bright A_Light1();
		SH2L B 2 bright A_light2();
		goto lightdone;
	Flash1:
		SH2P A 3 bright {
			let fs = Player.FindPSprite(PSP_FLASH);
			fs.frame = random(0,2);
			}
		SH2P A 2 bright {
			let fs = Player.FindPSprite(PSP_FLASH);
			fs.frame = random(3,5);
			}
		goto LightDone;
	Select.Enhanced:
		TNT1 A 0 A_PlaySound("weapons/ssg/draw");
		TNT1 A 0 A_JumpIf(invoker.ShotFired == true,"Select1");
		//TNT1 AAAAAAAA 0 A_Raise();
		SH21 ABCDE 1 A_WeaponReady(WRF_NOFIRE);
		SH21 F 1 {
			A_WeaponReady(WRF_NOFIRE);
			let s = player.FindPSprite (PSP_Weapon);
			if (invoker.ShotFired) {
				s.sprite = GetSpriteIndex("SH2N");
				s.frame = 1;
				}
			}
		goto ready;
	Deselect.Enhanced:
		SH2N A 0 {
			let s = player.FindPSprite (PSP_Weapon);
			if (invoker.ShotFired)
				s.frame = 1;
			else
				s.frame = 0;
			}
		#### # 1 A_Lower(12);
		wait;
	Ready.Enhanced:
		SH2N A 1 {
			A_WeaponReady();
			let s = player.FindPSprite (PSP_Weapon);
			if (invoker.ShotFired)
				s.frame = 1;
			else
				s.frame = 0;
			}
		goto ready;
	Fire.Enhanced:
		SH2N A 3 {
			If(invoker.ShotFired)
				return ResolveState("Reload.Enhanced1");
			A_Gunflash("Flash");
			return ResolveState(null);
			}
		SH2F X 1 {
				A_PlaySound("weapons/ssg/fire",5);
				if (bdoom_tracers)
					A_FireBullets(11.2, 7.1, 20, 5, "EnSSGPuff",FBF_USEAMMO|FBF_NORANDOMPUFFZ,0,"BulletTracer",0,0);
				else
					A_FireBullets(11.2, 7.1, 20, 5, "EnSSGPuff",FBF_USEAMMO|FBF_NORANDOMPUFFZ);
				}
		
		SH2F X 1 A_Playsound("weapons/ssg/fire", 6);
		SH2F Y 1;
		SH2F AB 1;
		SH2N C 2 { 
			If(bdoom_debris)	{
				A_Overlay(10,"BarrelSmokeBoth");
				}
			}
		TNT1 A 0 A_CheckReload();
		goto reload;
	AltFire:
		SH2N A 3 {
			if (bdoom_weapons == 2)
				return ResolveState("AltFire.Modern");
			If(invoker.ShotFired)
				return ResolveState("AltFireSecond");
			A_Gunflash("AltFlash.Right");
			return ResolveState(null);
			}

		SH2F X 1 {
				invoker.ShotFired = true;
				A_PlaySound("weapons/ssg/fire",5);
				if (bdoom_tracers)
					A_FireBullets(10,6.5,10,5, "EnSSGPuff",FBF_USEAMMO|FBF_NORANDOMPUFFZ,0,"BulletTracer",0,1);
				else
					A_FireBullets(10,6.5,10,5,"EnSSGPuff",FBF_USEAMMO|FBF_NORANDOMPUFFZ);
				}
		TNT1 A 0 { 
			If(bdoom_debris)				
				A_Overlay(10,"BarrelSmokeRight");
			}
		SH2F CD 2;
		SH2N B 2;
		goto ready;
	AltFireSecond:
		SH2N B 3 A_Gunflash("AltFlash.Left");
		SH2F Y 1 {
				invoker.ShotFired = false;
				A_PlaySound("weapons/ssg/fire",5);
				if (bdoom_tracers)
					A_FireBullets(10,6.5,10,5, "EnSSGPuff",FBF_USEAMMO|FBF_NORANDOMPUFFZ,0,"BulletTracer",0,1);
				else
					A_FireBullets(10,6.5,10,5,"EnSSGPuff",FBF_USEAMMO|FBF_NORANDOMPUFFZ);
				}
		TNT1 A 0 { 
			If(bdoom_debris)	{
				let s = player.FindPSprite (10);
				if (s) //check if it's currently trying to show smoke over the right barrel (i.e. if two shots were fired in quick succession)
					A_Overlay(10,"BarrelSmokeBoth"); //if true, show the double smoke animation
				else
					A_Overlay(11,"BarrelSmokeLeft"); //otherwise spawn smoke over the left barrel only (if there was a long pause between shots)
				}
			}
		SH2F AB 2;
		SH2N C 2;	
		TNT1 A 0 A_CheckReload();
		goto Reload.Enhanced;
	Reload.Enhanced:
		SH2R ABCDEFGH 1;
		SH2R I 1 A_playsound("weapons/ssg/open");
		SH2R JKL 1;
		TNT1 A 0 { 
			if (bdoom_debris) {
				A_Eject("ShotgunCasing",16,-3.5,6.5,frandom(0,1),FRandom(-2.5,-3),frandom(4,5));
				A_Eject("ShotgunCasing",16,-5,6.5,frandom(0,1),FRandom(-2.5,-3),frandom(4,5));
				}
			}
		SH2R MNOPQX 2;
		SH2R Y 2 A_playsound("weapons/ssg/in");
		SH2R Z 2;
		SH2S ABCD 1;
		SH2S EFGH 1;
		TNT1 A 0 A_playsound("weapons/ssg/close");
		SH2S H 2;
		SH2N A 6 A_Refire();
		SH2N A 5 A_Refire();
		goto ready	;
	Reload.Enhanced1:
		TNT1 A 0 A_CheckReload();
		TNT1 A 0 { invoker.ShotFired = false; }
		SH2R ABCDEFGH 1;
		SH2R I 1 A_playsound("weapons/ssg/open");
		SH2R JKL 1;
		TNT1 A 0 { 
			If(bdoom_debris)
				A_Eject("ShotgunCasing",16,-5,6.5,frandom(0,1),FRandom(-2.5,-3),frandom(4,5));
			}
		SH2R UVWX 2;
		SH2R Y 2 A_playsound("weapons/ssg/in");
		SH2R Z 1;
		SH2S ABCDEFG 1;
		TNT1 A 0 A_playsound("weapons/ssg/close");
		SH2S H 1 A_ReFire();
		SH2N A 5 A_Refire();
		goto ready.Enhanced;
		
	AltFlash.Left:
		TNT1 A 0 A_JumpIf(GetCVAR("bdoom_muzzle") == true,"AltFlash.Left1");
		SH2L C 3 bright A_Light1();
		SH2L D 2 bright A_light2();
		goto lightdone;
	AltFlash.Left1:
		SH2M A 3 bright {
			let fs = Player.FindPSprite(PSP_FLASH);
			fs.frame = random(0,2);
			}
		SH2M A 2 bright {
			let fs = Player.FindPSprite(PSP_FLASH);
			fs.frame = random(3,5);
			}
		goto LightDone;
	AltFlash.Right:
		TNT1 A 0 A_JumpIf(GetCVAR("bdoom_muzzle") == true,"AltFlash.Right1");
		SH2L E 3 bright A_Light1();
		SH2L F 2 bright A_light2();
		goto lightdone;
	AltFlash.Right1:
		SH2O A 3 bright {
			let fs = Player.FindPSprite(PSP_FLASH);
			fs.frame = random(0,2);
			}
		SH2O A 2 bright {
			let fs = Player.FindPSprite(PSP_FLASH);
			fs.frame = random(3,5);
			}
		goto LightDone;
		
	//MODERN
	Select.Modern:		
		SMT2 A 0 A_WeaponOffset(-20.0,60.0);
		#### #### 1 {
			A_WeaponOffset(5.0,-7.0,WOF_ADD);
			A_WeaponReady(WRF_NOFIRE|WRF_NOBOB);
			}
		goto ready;
	Deselect.Modern:		
		SMT2 A 1 A_Lower(18);
		loop;		
	Ready.Modern:
		SMT2 A 1 BD_WeaponReady(true);
		goto ready;
	DryReload:
		SMT2 A 13 A_PlaySound("Mweapons/dry");
		goto reload;
	Fire.Modern:
		#### # 0 {
			If(CountInv("SSGClip") == 0)
				return ResolveState("DryReload");
			else If(CountInv("SSGClip") == 1)
				return ResolveState("AltFire.Modern");
			return ResolveState(null);
			}			
		SMT2 A 1 {
			A_FireBullets (15.0, 7, 24, 0, "NullPuff",FBF_USEAMMO|FBF_NORANDOMPUFFZ,0,"BD_SSGPellet",4,0);
			A_Gunflash("ModernFlash");
			A_PlaySound("Mweapons/ssg/firedual",5);
			}
		TNT1 A 0 {
			A_SetPitch(pitch-frandom(2.8,3.5),SPF_INTERPOLATE);
			A_setAngle(angle+frandom(-1,1),SPF_INTERPOLATE);
			}
		SMT2 BCD 1 A_WeaponOffset(frandom(-0.3,0.3),3,WOF_ADD);
		TNT1 A 0 { 
			If(bdoom_debris) {
					A_Overlay(10,"ModernSmokeRight");
					A_Overlay(11,"ModernSmokeLeft");
					}
			}
		SMT2 EFA 2 A_WeaponOffset(frandom(-0.1,0.1),-3,WOF_ADD);
		TNT1 A 0 A_WeaponOffset(0,32,WOF_INTERPOLATE);
		goto ready;
	AltFire.Modern:
		#### # 0 {
			If(CountInv("SSGClip") == 0)
				return ResolveState("DryReload");
			else If(CountInv("SSGClip") == 2) {
				A_Gunflash("ModernFlash.Right");
				A_PlaySound("Mweapons/ssg/fire1",5);
				}
			else If(CountInv("SSGClip") == 1) {
				A_Gunflash("ModernFlash.Left");
				A_PlaySound("Mweapons/ssg/fire1",6);
				}
				A_OverlayOffset(PSP_FLASH,0,-13);
			return ResolveState(null);
			}			
		SMT2 A 1 {
			A_FireBullets (15.0, 7, 12, 0, "NullPuff",FBF_USEAMMO|FBF_NORANDOMPUFFZ,0,"BD_SSGPellet",4,0);
			A_TakeInventory("SSGCLip",1);
			}
		TNT1 A 0 {
			A_SetPitch(pitch-frandom(2.3,3.0),SPF_INTERPOLATE);
			A_setAngle(angle+frandom(-0.5,0.5),SPF_INTERPOLATE);
			}
		SMT2 BCD 1 A_WeaponOffset(0,2,WOF_ADD);
		TNT1 A 0 { 
			If(bdoom_debris)	{
				If(CountInv("SSGClip") == 1)
					A_Overlay(10,"ModernSmokeRight");
				else If(CountInv("SSGClip") == 0)
					A_Overlay(10,"ModernSmokeLeft");
				}
			}
		SMT2 EFA 2 A_WeaponOffset(0,-2,WOF_ADD);
		SMT2 A 5 A_WeaponReady(WRF_NOSECONDARY);
		goto ready;
	Reload.Modern:
		SMTR ABCDE 1;
		TNT1 A 0 A_playsound("Mweapons/ssg/open");
		SMTR FGH 2;
		
		TNT1 A 0 {
			if (CountInv("SSGClip") == 1 || CountInv("Shell") == 1)
				return ResolveState("Reload.Modern1");
			return ResolveState(null);
			}
			
		SMTR I 8 {
			if (Bdoom_debris) {
				A_Eject("ShotgunCasing",18,0,12,frandom(0,1),FRandom(1,1.5),frandom(2,3));
				A_Eject("ShotgunCasing",18,-2,12,frandom(0,1),FRandom(1,1.5),frandom(2,3)); 
				A_Overlay(10,"InSmokeRight");
				A_Overlay(11,"InSmokeLeft");
				}
			}
		SMTI ABCDE 2;
		SMTI F 3 {
			A_TakeInventory("Shell",1);
			A_GiveInventory("SSGClip",1);
			A_playsound("Mweapons/ssg/in");
			}
		SMTI GHIKL 2;
		SMTI M 3 {
			A_TakeInventory("Shell",1);
			A_GiveInventory("SSGClip",1);
			A_playsound("Mweapons/ssg/in");
			}
		goto Reload.ModernEnd;
	Reload.Modern1:
		SMTI Y 8 {
			if (Bdoom_debris) {
				A_Overlay(10,"InSmokeRight");
				A_Eject("ShotgunCasing",18,0,12,frandom(0,1),FRandom(1,1.5),frandom(2,3));
				}
			}
		SMTJ AB 1;
		SMTI I 1;
		SMTI JKL 2;
		SMTI M 3 {
			A_TakeInventory("Shell",1);
			A_GiveInventory("SSGClip",1);
			A_playsound("Mweapons/ssg/in");
			}
		goto Reload.ModernEnd;
	Reload.ModernEnd:
		SMTI NO 2;
		SMTI X 4;
		SMTR HG 1;
		TNT1 A 0 A_playsound("Mweapons/ssg/close");		
		SMTR FE 2;
		SMTR DCBA 1;
		SMT2 A 2 A_WeaponReady(WRF_NOSWITCH);
		goto ready;
	ModernSmokeRight:
		TNT1 A random(1,3);
		TNT1 AAAAAAAAAAAAAAAAAAAA 	random(1,2) {
			let s = player.FindPSprite(PSP_Weapon);
			if (s && (invoker.InStateSequence(s.curstate,invoker.FindState("Ready.Modern"))	||
				invoker.InStateSequence(s.curstate,invoker.FindState("AltFire.Modern"))	))
				A_Eject("BarrelSmoke",cos(pitch)*12,0.5,3,	frandom(0.015,-0.015),frandom(0.015,-0.015),0.1);
			}
		stop;
	ModernSmokeLeft:
		TNT1 A random(1,3);
		TNT1 AAAAAAAAAAAAAAAAAAAA 	random(1,2) {
			let s = player.FindPSprite(PSP_Weapon);
			if (s && (invoker.InStateSequence(s.curstate,invoker.FindState("Ready.Modern"))	||
				invoker.InStateSequence(s.curstate,invoker.FindState("AltFire.Modern")))	)
				A_Eject("BarrelSmoke",cos(pitch)*12,-0.5,3,	frandom(0.015,-0.015),frandom(0.015,-0.015),0.1);
			}
		stop;
		
	ModernFlash:
		TNT1 A 0 A_OverlayOffset(PSP_FLASH,0,-13);
		TNT1 A 0 A_JumpIf(GetCVAR("bdoom_muzzle") == true,"ModernFlash1");
		SH2L A 1 bright A_Light1();
		SH2L B 1 bright A_light2();
		goto lightdone;
	ModernFlash1:
		SH2P A 1 bright {
			let fs = Player.FindPSprite(PSP_FLASH);
			fs.frame = random(0,2);
			}
		SH2P A 1 bright {
			let fs = Player.FindPSprite(PSP_FLASH);
			fs.frame = random(3,5);
			}
		goto LightDone;
	ModernFlash.Left:
		TNT1 A 0 A_OverlayOffset(PSP_FLASH,0,-13);
		TNT1 A 0 A_JumpIf(GetCVAR("bdoom_muzzle") == true,"ModernFlash.Left1");
		SH2L C 1 bright A_Light1();
		SH2L D 1 bright A_light2();
		goto lightdone;
	ModernFlash.Left1:
		SH2M A 1 bright {
			let fs = Player.FindPSprite(PSP_FLASH);
			fs.frame = random(0,2);
			}
		SH2M A 1 bright {
			let fs = Player.FindPSprite(PSP_FLASH);
			fs.frame = random(3,5);
			}
		goto LightDone;
	ModernFlash.Right:
		TNT1 A 0 A_OverlayOffset(PSP_FLASH,0,-13);
		TNT1 A 0 A_JumpIf(GetCVAR("bdoom_muzzle") == true,"ModernFlash.Right1");
		SH2L E 1 bright A_Light1();
		SH2L F 1 bright A_light2();
		goto lightdone;
	ModernFlash.Right1:
		SH2O A 1 bright {
			let fs = Player.FindPSprite(PSP_FLASH);
			fs.frame = random(0,2);
			}
		SH2O A 1 bright {
			let fs = Player.FindPSprite(PSP_FLASH);
			fs.frame = random(3,5);
			}
		goto LightDone;
		}
}

Class SSGClip : ammo
{
Default {
inventory.icon "HSHLY0";
	inventory.amount 1;
	inventory.maxamount 2;
	ammo.backpackamount 0;
	ammo.backpackmaxamount 2;
	}
}