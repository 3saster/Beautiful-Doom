Class BD_SuperShotgun : BDoomWeapon {
	private bool ShotFired;
	Default {
		Tag "$TAG_SUPERSHOTGUN";
		inventory.pickupmessage "$GOTSHOTGUN2"; 
		Obituary "$OB_MPSSHOTGUN"; 
		weapon.selectionorder 40;
		Weapon.AmmoType		"Shell";
		Weapon.AmmoUse		1;
		Weapon.AmmoGive		0;
		Weapon.AmmoType2	"Shell";
		Weapon.AmmoUse2		1;
		Weapon.AmmoGive2	8;
		weapon.slotnumber 	3;
		weapon.slotpriority 1;
		BDoomWeapon.AutoReloadTime 160;
	}
	override void Tick() {
		If (Owner)
			return;
		else {
			if(bdoom_weapons == 2)
				pickupsound = "Mweapons/ssg/close";
			else
				pickupsound = "weapons/ssg/close";
		}
		Super.Tick();
	}
	override void DoEffect() {
		Super.DoEffect();
		if (!owner)
			return;
		if(bdoom_weapons == 2) {
			if (!Owner.FindInventory("SSGClip"))
				Owner.GiveInventory("SSGClip",2);
			Ammo1 = ammo(Owner.FindInventory("SSGClip") );
			ammouse1 = 2;
			ammouse2 = 0;
			bNOAUTOFIRE = true;
			bAMMO_OPTIONAL = true;
		}
		else {
			Ammo1 = ammo(Owner.FindInventory("Shell"));
			ammouse1 = 2;
			ammouse2 = 1;
			bNOAUTOFIRE = false;
			bAMMO_OPTIONAL = false;
		}
	}
	states {
		Loadsprites:
			SH2L ABCDEF 0;
			SH2M ABCDEF 0; 
			SH2O ABCDEF 0;
			stop;
		Spawn:
			SGN2 A 1 {
				if (bdoom_weapons == 2)
					self.frame = 1;
				else
					self.frame = 0;
			}
			loop;
		Select:
			TNT1 A 0 {
				If(bdoom_weapons==2)
					return ResolveState("Select.Modern");
				else If(bdoom_weapons==1)
					return ResolveState("Select.Enhanced");
				return ResolveState(null);
			}
			SH21 ABCDEF 1 A_WeaponReady(WRF_NOFIRE);
			goto ready;
		Deselect:
			TNT1 A 0 {
				If(bdoom_weapons==2)
					return ResolveState("Deselect.Modern");
				else If(bdoom_weapons==1)
					return ResolveState("Deselect.Enhanced");
				return ResolveState(null);
			}
			SH2N C 1 A_Lower();
			wait;
		Ready:
			TNT1 A 0 {
				If(bdoom_weapons==2)
					return ResolveState("Ready.Modern");
				else If(bdoom_weapons==1)
					return ResolveState("Ready.Enhanced");
				return ResolveState(null);
			}
			SH2N C 1 A_WeaponReady(WRF_NOSECONDARY);
			loop;
		Fire:
		//fire = 10 tics, reload = 47 tics, refire 5 tics
			TNT1 A 0 {
				If(bdoom_weapons==2)
					return ResolveState("Fire.Modern");
				else If(bdoom_weapons==1)
					return ResolveState("Fire.Enhanced");
				return ResolveState(null);
			}
			SH2N C 3;
			SH2N C 2 {
				A_Gunflash();
				A_WeaponOffset(0,10,WOF_ADD);
				A_PlaySound("weapons/sshotf",5);
				if (bdoom_tracers)
					A_FireBullets(11.2, 7.1, 20, 5, "EnSSGPuff",FBF_USEAMMO|FBF_NORANDOMPUFFZ,0,"BulletTracer",0,0);
				else
					A_FireBullets(11.2, 7.1, 20, 5, "EnSSGPuff",FBF_USEAMMO|FBF_NORANDOMPUFFZ);
				}
			SH2N CCCCC 1 A_WeaponOffset(0,-2,WOF_ADD);
			TNT1 A 0 A_WeaponOffset(0,32,WOF_INTERPOLATE);
			TNT1 A 0 A_CheckReload();
		Reload:
			TNT1 A 0 {
				If(bdoom_weapons==2)
					return ResolveState("Reload.Modern");
				else If(bdoom_weapons==1)
					return ResolveState("Reload.Enhanced");
				return ResolveState(null);
			}
			SH2R ABCDEFGH 1;
			SH2R I 1 A_playsound("weapons/sshoto");
			SH2R JKL 1;
			TNT1 A 0 { 
				if (bdoom_debris) {
					A_Eject("ShotgunCasing",16,-3.5,6.5,frandom(0,1),FRandom(-2.5,-3),frandom(4,5));
					A_Eject("ShotgunCasing",16,-5,6.5,frandom(0,1),FRandom(-2.5,-3),frandom(4,5));
				}
			}
			SH2R MNOPQX 2;
			SH2R Y 2 A_playsound("weapons/sshotl");
			SH2R Z 2;
			SH2S ABCD 1;
			SH2S EFGH 1;
			TNT1 A 0 A_playsound("weapons/sshotc");
			SH2S H 2;
			SH2N C 6 A_Refire();
			SH2N C 5 A_Refire();
			goto ready;
		Flash:
			TNT1 A 3 {
				A_Light2();
				if(GetCVAR("bdoom_muzzle")==0)
					A_Overlay(100,"FlashVanilla");
				else {
					double vofs = 0;
					if (bdoom_weapons == 2) 
						vofs = -2.3;
					for (int i = random (4,6); i > 0; i --)
						A_Eject("BD_MuzzleSmoke",7,frandom(-1,1),4+vofs,32);
					A_Overlay(100,"FlashEnhanced");
					A_Overlay(-100,"FlashMuzzle");
					if (random(0,1) == 1) 
						A_OverlayFlags(-100,PSPF_FLIP,true);
					A_OverlayFlags(-100,PSPF_ADDWEAPON,false);
					A_OverlayOffset(-100,0,44);
					A_OverlayFlags(-100,PSPF_RENDERSTYLE|PSPF_ALPHA|PSPF_FORCEALPHA,true);
					A_OverlayRenderstyle(-100,STYLE_Add);
				}
				A_OverlayFlags(100,PSPF_RENDERSTYLE|PSPF_ALPHA|PSPF_FORCEALPHA,true);
				A_OverlayRenderstyle(100,STYLE_Add);
				if (bdoom_weapons == 2) {
					A_OverlayOffset(100, 0,-12,WOF_ADD);
					A_OverlayOffset(-100, 0,-12,WOF_ADD);
					A_SetTics(1);
				}
			}
			TNT1 A 2 {
				A_light1();
				if (bdoom_weapons == 2)
					A_SetTics(1);
			}
			goto lightdone;
		FlashVanilla:
			SH2L A 2 bright {
				if (bdoom_weapons == 2)
					A_SetTics(0);
			}
			SH2L B 2 bright {
				if (bdoom_weapons == 2)
					A_SetTics(1);
			}
			stop;		
		FlashEnhanced:
			SH2L I 2 bright {
				if (bdoom_weapons == 2)
					A_SetTics(1);
			}
			TNT1 A 0 {
				if (bdoom_weapons == 2)
					return ResolveState("null");
				return ResolveState(null);
			}
			SH2L I 1 bright A_OverlayAlpha(100,0.8);
			SH2L I 1 bright A_OverlayAlpha(100,0.5);
			stop;
		FlashMuzzle:
			MUZ4 A 2 bright {
					let fl = player.FindPSprite(-100);
					fl.frame = random(0,3);
					if (bdoom_weapons == 2)
						A_SetTics(1);
				}
			#### # 1 bright A_OverlayAlpha(-100,0.8);
			//#### # 1 bright A_OverlayAlpha(-100,0.6);
			//#### # 1 bright A_OverlayAlpha(-100,0.4);
			stop;
			
		
		Select.Enhanced:
			TNT1 A 0 {
				A_PlaySound("weapons/ssg/draw");
				if (invoker.ShotFired)
					return ResolveState("Select1");
				return ResolveState(null);
			}
			SH21 ABCDE 1 A_WeaponReady(WRF_NOFIRE);
			SH21 F 1 {
				A_WeaponReady(WRF_NOFIRE);
				let s = player.FindPSprite (PSP_Weapon);
				if (invoker.ShotFired) {
					s.sprite = GetSpriteIndex("SH2N");
					s.frame = 1;
				}
			}
			goto ready;
		Deselect.Enhanced:
			SH2N A 0 {
				let s = player.FindPSprite (PSP_Weapon);
				if (invoker.ShotFired)
					s.frame = 1;
				else
					s.frame = 0;
			}
			#### # 1 A_Lower(12);
			wait;
		Ready.Enhanced:
			SH2N A 1 {
				A_WeaponReady();
				let s = player.FindPSprite (PSP_Weapon);
				if (invoker.ShotFired)
					s.frame = 1;
				else
					s.frame = 0;
			}
			goto ready;
		Fire.Enhanced:
			SH2N A 3 {
				If(invoker.ShotFired)
					return ResolveState("Reload.Enhanced1");
				return ResolveState(null);
			}
			SH2N B 1 {
				A_Gunflash("Flash");
				A_WeaponOffset(0,10,WOF_ADD);
				A_PlaySound("weapons/ssg/fire",5);
				if (bdoom_tracers)
					A_FireBullets(11.2, 7.1, 20, 5, "EnSSGPuff",FBF_USEAMMO|FBF_NORANDOMPUFFZ,0,"BulletTracer",0,0);
				else
					A_FireBullets(11.2, 7.1, 20, 5, "EnSSGPuff",FBF_USEAMMO|FBF_NORANDOMPUFFZ);
			}
			
			SH2N C 1 A_Playsound("weapons/ssg/fire", 6);
			SH2N CCCCC 1 A_WeaponOffset(0,-2,WOF_ADD);
			TNT1 A 0 A_WeaponOffset(0,32,WOF_INTERPOLATE);
			TNT1 A 0 A_CheckReload();
			goto reload;
		AltFire:
			SH2N A 3 {
				if (bdoom_weapons == 2)
					return ResolveState("AltFire.Modern");
				If(invoker.ShotFired) {
					let psp = player.FindPSprite(PSP_WEAPON);
					if (psp) psp.frame = 1;
				}
				return ResolveState(null);
			}

			SH2N B 1 {
					A_Gunflash("AltFlash");
					A_PlaySound("weapons/ssg/fire",5);
					A_WeaponOffset(0,6,WOF_ADD);
					If(invoker.ShotFired) {
						let psp = player.FindPSprite(PSP_WEAPON);
						if (psp) psp.frame = 2;
						invoker.ShotFired = false;
					}
					else
						invoker.ShotFired = true;
					if (bdoom_tracers)
						A_FireBullets(10,6.5,10,5, "EnSSGPuff",FBF_USEAMMO|FBF_NORANDOMPUFFZ,0,"BulletTracer",0,1);
					else
						A_FireBullets(10,6.5,10,5,"EnSSGPuff",FBF_USEAMMO|FBF_NORANDOMPUFFZ);
				}
			SH2N ###### 1 A_WeaponOffset(0,-1,WOF_ADD);
			TNT1 A 0 {
				A_WeaponOffset(0,32,WOF_INTERPOLATE);
				if (invoker.shotfired)
					return ResolveState("Ready");
				else
					return ResolveState("Reload.Enhanced");
				return ResolveState(null);
			}
			goto ready;
		AltFlash:
			TNT1 A 2 {
				A_Light2();
				if(GetCVAR("bdoom_muzzle")==0) {
					if	(invoker.shotfired || (bdoom_weapons == 2 && CountInv("SSGCLip") < 2))
						A_Overlay(100,"FlashVanillaLeft");
					else
						A_Overlay(100,"FlashVanillaRight");
				}
				else {
					A_Overlay(100,"FlashEnhancedSide");
					A_Overlay(-100,"FlashMuzzleSide");
					A_OverlayFlags(-100,PSPF_ADDWEAPON,false);
					A_OverlayOffset(-100,0,44);
					A_OverlayFlags(-100,PSPF_RENDERSTYLE|PSPF_ALPHA|PSPF_FORCEALPHA,true);
					A_OverlayRenderstyle(-100,STYLE_Add);
					double vofs = 0;
					if (bdoom_weapons == 2) 
						vofs = -2.3;
					if	((bdoom_weapons == 1 && invoker.shotfired) || (bdoom_weapons == 2 && CountInv("SSGClip") < 2)) {
						for (int i = random (2,3); i > 0; i --)
							A_Eject("BD_MuzzleSmoke",7,-1,4+vofs,32);
					}
					else {
						for (int i = random (2,3); i > 0; i --)
							A_Eject("BD_MuzzleSmoke",7,1,4+vofs,32);
						A_OverlayFlags(-100,PSPF_FLIP|PSPF_MIRROR,true);
						A_OverlayFlags(100,PSPF_FLIP|PSPF_MIRROR,true);
					}
				}
				if (bdoom_weapons == 2) {
					A_OverlayOffset(100, 0,-12,WOF_ADD);
					A_OverlayOffset(-100, 0,-12,WOF_ADD);
					A_SetTics(1);
				}
				A_OverlayFlags(100,PSPF_RENDERSTYLE|PSPF_ALPHA|PSPF_FORCEALPHA,true);
				A_OverlayFlags(-100,PSPF_RENDERSTYLE|PSPF_ALPHA|PSPF_FORCEALPHA,true);
				A_OverlayRenderstyle(100,STYLE_Add);
				A_OverlayRenderstyle(-100,STYLE_Add);
			}
			TNT1 A 1 A_light1();
			goto lightdone;
		FlashVanillaLeft:
			SH2L C 2 bright {
				if (bdoom_weapons == 2) 
					A_SetTics(0);
			}
			SH2L D 1 bright;
			stop;		
		FlashVanillaRight:
			SH2L E 2 bright {
				if (bdoom_weapons == 2) 
					A_SetTics(0);
			}
			SH2L F 1 bright;
			stop;
		FlashEnhancedSide:
			SH2L G 1 bright;
			TNT1 A 0 {
				if (bdoom_weapons == 2) 
					return ResolveState("null");
				return ResolveState(null);
			}
			SH2L G 1 bright A_OverlayAlpha(100,0.8);
			SH2L G 1 bright A_OverlayAlpha(100,0.5);
			stop;
		FlashMuzzleSide:
			MUZ3 A 1 bright {
					let fl = player.FindPSprite(-100);
					fl.frame = random(0,3);
				}
			#### # 1 bright A_OverlayAlpha(-100,0.8);
			//#### # 1 bright A_OverlayAlpha(-100,0.6);
			//#### # 1 bright A_OverlayAlpha(-100,0.4);
			stop;
			
		Reload.Enhanced:
			SH2R ABCDEFGH 1;
			SH2R I 1 A_playsound("weapons/ssg/open");
			SH2R JKL 1;
			TNT1 A 0 { 
				if (bdoom_debris) {
					A_Eject("ShotgunCasing",16,-3.5,6.5,frandom(0,1),FRandom(-2.5,-3),frandom(4,5));
					A_Eject("ShotgunCasing",16,-5,6.5,frandom(0,1),FRandom(-2.5,-3),frandom(4,5));
				}
			}
			SH2R MNOPQX 2;
			SH2R Y 2 A_playsound("weapons/ssg/in");
			SH2R Z 2;
			SH2S ABCD 1;
			SH2S EFGH 1;
			TNT1 A 0 A_playsound("weapons/ssg/close");
			SH2S H 2;
			SH2N A 6 A_Refire();
			SH2N A 5 A_Refire();
			goto ready	;
		Reload.Enhanced1:
			TNT1 A 0 A_CheckReload();
			TNT1 A 0 { invoker.shotfired = false; }
			SH2R ABCDEFGH 1;
			SH2R I 1 A_playsound("weapons/ssg/open");
			SH2R JKL 1;
			TNT1 A 0 { 
				If(bdoom_debris)
					A_Eject("ShotgunCasing",16,-5,6.5,frandom(0,1),FRandom(-2.5,-3),frandom(4,5));
			}
			SH2R UVWX 2;
			SH2R Y 2 A_playsound("weapons/ssg/in");
			SH2R Z 1;
			SH2S ABCDEFG 1;
			TNT1 A 0 A_playsound("weapons/ssg/close");
			SH2S H 1 A_ReFire();
			SH2N A 5 A_Refire();
			goto ready.Enhanced;
			
			
		//MODERN
		Select.Modern:		
			SST2 A 0 {
				A_WeaponOffset(-20.0,60.0);
				A_PlaySound("weapons/ssg/draw");
			}
			#### #### 1 {
				A_WeaponOffset(5.0,-7.0,WOF_ADD);
				A_WeaponReady(WRF_NOFIRE|WRF_NOBOB);
			}
			goto ready;
		Deselect.Modern:		
			SST2 A 1 A_Lower(18);
			loop;		
		Ready.Modern:
			SST2 A 1 BD_WeaponReady(true);
			goto ready;
		DryReload:
			SST2 A 13 A_PlaySound("Mweapons/dry");
			goto reload;
		Fire.Modern:		
			SST2 A 1 {
				If(CountInv("SSGClip") == 0)
					return ResolveState("DryReload");
				else If(CountInv("SSGClip") == 1)
					return ResolveState("AltFire.Modern");
				A_FireBullets (15.0, 7, 24, 0, "NullPuff",FBF_USEAMMO|FBF_NORANDOMPUFFZ,0,"BD_SSGPellet",4,0);
				A_SetPitch(pitch-frandom(2.8,3.5),SPF_INTERPOLATE);
				A_setAngle(angle+frandom(-1,1),SPF_INTERPOLATE);
				A_Gunflash("Flash");
				A_PlaySound("Mweapons/ssg/firedual",5);
				A_ZoomFactor(0.98,ZOOM_NOSCALETURNING);
				return ResolveState(null);
			}
			TNT1 A 0 A_ZoomFactor(1,ZOOM_NOSCALETURNING);
			SST2 BCD 1 A_WeaponOffset(frandom(-0.3,0.3),4,WOF_ADD);
			SST2 EEFFAA 1 A_WeaponOffset(frandom(-0.15,0.15),-2,WOF_ADD);
			TNT1 A 0 A_WeaponOffset(0,32,WOF_INTERPOLATE);
			goto ready;
		AltFire.Modern:
			SST2 A 1 {
				If(CountInv("SSGClip") == 0)
					return ResolveState("DryReload");
				else If(CountInv("SSGClip") == 2) 
					A_PlaySound("Mweapons/ssg/fire1",5);
				else If(CountInv("SSGClip") == 1) 
					A_PlaySound("Mweapons/ssg/fire1",6);
				A_Gunflash("AltFlash");
				A_FireBullets (15.0, 7, 12, 0, "NullPuff",FBF_USEAMMO|FBF_NORANDOMPUFFZ,0,"BD_SSGPellet",4,0);
				A_TakeInventory("SSGCLip",1);
				A_SetPitch(pitch-frandom(2.3,3.0),SPF_INTERPOLATE);
				A_setAngle(angle+frandom(-0.5,0.5),SPF_INTERPOLATE);
				A_ZoomFactor(0.986,ZOOM_NOSCALETURNING);
				return ResolveState(null);
			}
			TNT1 A 0 A_ZoomFactor(1,ZOOM_NOSCALETURNING);
			SST2 BCD 1 A_WeaponOffset(0,2.5,WOF_ADD);
			SST2 EEFFAA 1 A_WeaponOffset(0,-1.25,WOF_ADD);
			SST2 A 5 A_WeaponReady(WRF_NOSECONDARY);
			goto ready;
		Reload.Modern:
			TNT1 A 0 {
				if (CountInv("SSGCLip") == 2 || CountInv("Shell") < 1)
					return ResolveState("Ready.Modern");
				return ResolveState(null);
			}
			SSTR ABCDE 1;
			TNT1 A 0 A_playsound("Mweapons/ssg/open");
			SSTR FGH 2;
			
			TNT1 A 0 {
				if (CountInv("SSGClip") == 1 || CountInv("Shell") == 1)
					return ResolveState("Reload.Modern1");
				return ResolveState(null);
			}
				
			SSTR I 8 {
				if (Bdoom_debris) {
					A_Eject("ShotgunCasing",18,0,12,frandom(0,1),FRandom(1,1.5),frandom(2,3));
					A_Eject("ShotgunCasing",18,-2,12,frandom(0,1),FRandom(1,1.5),frandom(2,3)); 
					A_Overlay(10,"InSmokeRight");
					A_Overlay(11,"InSmokeLeft");
				}
			}
			SSTI ABCDE 2;
			SSTI F 3 {
				A_TakeInventory("Shell",1);
				A_GiveInventory("SSGClip",1);
				A_playsound("Mweapons/ssg/in");
			}
			SSTI GHIKL 2;
			SSTI M 3 {
				A_TakeInventory("Shell",1);
				A_GiveInventory("SSGClip",1);
				A_playsound("Mweapons/ssg/in");
			}
			goto Reload.ModernEnd;
		Reload.Modern1:
			SSTI Y 8 {
				if (Bdoom_debris) {
					A_Overlay(10,"InSmokeRight");
					A_Eject("ShotgunCasing",18,0,12,frandom(0,1),FRandom(1,1.5),frandom(2,3));
				}
			}
			SSTJ AB 1;
			SSTI I 1;
			SSTI JKL 2;
			SSTI M 3 {
				A_TakeInventory("Shell",1);
				A_GiveInventory("SSGClip",1);
				A_playsound("Mweapons/ssg/in");
			}
			goto Reload.ModernEnd;
		Reload.ModernEnd:
			SSTI NO 2;
			SSTI X 4;
			SSTR HG 1;
			TNT1 A 0 A_playsound("Mweapons/ssg/close");		
			SSTR FE 2;
			SSTR DCBA 1;
			SST2 A 2 A_WeaponReady(WRF_NOSWITCH);
			goto ready;
}
}

Class SSGClip : ammo {
	Default {
	inventory.icon "HSHLY0";
		inventory.amount 1;
		inventory.maxamount 2;
		ammo.backpackamount 0;
		ammo.backpackmaxamount 2;
		+INVENTORY.IGNORESKILL
	}
}