//***************************\\
//***************************\\
//****** V I C T I M S ******\\
//***************************\\
//***************************\\




//decorative blood drop for gory decorations
Class DecorBloodDrop : BD_CeilingBloodDrop {
	Default {
		scale 0.15;
	}
	states {
		spawn:
			BLOD XYZ 3;
			TNT1 A 0 { vel.z = -3.4; }
			BLOD ZZZZZZZZZZZZZZZZZZZZZZZZZ 1 {
				vel.z = Clamp(vel.z-0.05,-4,0);
				if (waterlevel > 0) {
					destroy();
					return ResolveState(null);
				}
				if (pos.z <= floorz)
					return ResolveState("Death");
				return ResolveState(null);
			}
			stop;
	}
}

Class BD_BaseVictim : BDoomActor abstract {
	protected bool vdead;
	protected double swingspeed;
	property swingspeed : swingspeed;
	protected int spriterange;
	protected name spritename;
	property spriterange : spriterange;
	property spritename : spritename;
	
	protected double rollangVel;
	protected double rollang;
	protected double damping;
	Default {
		BD_BaseVictim.swingspeed 0;
		BD_BaseVictim.spriterange 0;
		BD_Basevictim.spritename 'BDB1';
		+SOLID
		+SHOOTABLE
		+DONTTHRUST
		+DONTFALL
		+DONTCORPSE
		+NODAMAGE
		+ROLLSPRITE
		+ROLLCENTER
		+INTERPOLATEANGLES
		+SPRITEFLIP
		painsound "";
	}
	override void PostBeginPlay() {
		super.PostBeginPlay();
		if (default.bSPRITEFLIP)
			bSPRITEFLIP = randompick(0,1);
		else
			bSPRITEFLIP = false;
		rollangVel = 0;
		rollang = 0;
		damping = 0.02;
		if (pos.z - floorz < 0 || pos.z - floorz > 96)
			return;
		if (!bdoom_blood)
			return;
		let a = AniBloodPool(Spawn("AniBloodPool",(pos.x,pos.y,floorz)));
		if (a) {
			a.instant = true;
			a.scale = (0.14,0.14)*frandom(0.8,1.4);
			a.target = self;
		}
	}
	void BD_StartSwing(double rfactor = 1.0) {
		double sspeed = 1 * rfactor;
		for (int i = 4; i > 0; i--) {
			if (random(0,100) < 50)
				sspeed *= 0.7;
		}
		if (roll ~== 0)
			rollangVel = swingspeed * randompick(-1,1);
		else 
			rollangVel = swingspeed * BD_Sign(roll);
		rollangVel *= sspeed;
	}
	void BD_SetSprite() {
		sprite = GetSpriteIndex(spritename);
		frame = random(0,spriterange);
	}
	override void Tick() {
		super.Tick();
		if (default.bSHOOTABLE)
			bSHOOTABLE = bdoom_killableobjects;
		else if (default.bVULNERABLE)
			bVULNERABLE = bdoom_killableobjects;
		if (isFrozen())
			return;
		if (bdoom_debris && abs(roll) < 5) 
			A_SpawnitemEx("DecorBloodDrop",frandom(-5,5),frandom(-5,5),frandom(22,24),failchance:254);
		if (!bROLLSPRITE || swingspeed ~== 0)
			return;
		rollang += rollangVel;
		rollangVel += -(damping * rollang) - rollangVel*damping;
		roll = rollang * 180.0 / pi;
	}
	states {
		Loadsprites:
			BDB1 ABCDEFGHIJK 0;
			BDB3 ABCDEFGHIJKL 0;
			BGO2 ABCDE 0;
			BGO3 ABCDE 0;
			BGO4 ABCDE 0;
			BGO5 AB 0;
			BTWT ABCDEFGHIJKLMNOPQR 0;
			BTWU ABCDEFGHIJKLMNOPQR 0;
			stop;
		Spawn:
			TNT1 A 0 NoDelay BD_SetSprite;
			#### # 0 {
				return ResolveState("Idle");
			}
			wait;
		Idle:
			#### # 1;
			loop;
		Pain:
			#### # 0 {
				BD_StartSwing();
				A_PlaySound(painsound,CHAN_BODY|CHAN_NOSTOP,attenuation:4);
			}
			#### # 0 {
				return ResolveState("Idle");
			}
			wait;
	}
}

Class BD_HangingTorso : BD_BaseVictim {	
	Default {
		BD_BaseVictim.swingspeed 0.08;
		BD_BaseVictim.spriterange 10;
		BD_BaseVictim.spritename 'BDB1';
		Radius 16;
		Height 64;
		xscale 0.8;
		yscale 0.68;
		+NOGRAVITY
		+SPAWNCEILING
		painchance 160;
	}
	override void PostBeginPlay() {
		super.PostBeginPlay();
		if (!bdoom_gibs)
			return;
		for (int i = 4; i > 0; i--) {
			if (random(0,2) > 0) {
				let g = BasicMeatPiece(Spawn("BasicMeatPiece",(pos.x+frandom(-8,8),pos.y+frandom(-8,8),floorz+1)));
				if (g) g.instant = true;
			}
		}
	}
	override void Tick() {
		super.Tick();
		if (isFrozen())
			return;
		if (abs(roll) < 1 && rollangVel > 0.01)
			A_Playsound("victims/ropecreak",CHAN_VOICE|CHAN_NOSTOP,attenuation:4);
	}
}

Class BD_HangingBody : BD_HangingTorso {
	Default {
		BD_BaseVictim.swingspeed 0.05;
		BD_BaseVictim.spriterange 11;
		BD_BaseVictim.spritename 'BDB3';
		Radius 16;
		Height 88;
	}
}

//hanging body upside-down
Class BD_Meat2 : BD_BaseVictim {
	Default {
		BD_BaseVictim.swingspeed 0.015;
		BD_BaseVictim.spriterange 4;
		BD_BaseVictim.spritename 'BGO2';
		Radius 16;
		Height 84;
		xscale 0.9;
		yscale 0.74;
		painchance 160;
		+NOGRAVITY
		+SPAWNCEILING
		-SPRITEFLIP
		painsound "victims/chain";
	}
}

//hanging body upside-down, missing leg
Class BD_Meat3 : BD_Meat2 {
	Default {
		BD_BaseVictim.spriterange 4;
		BD_BaseVictim.spritename 'BGO3';
	}
}

//hanging legs upside-down
Class BD_Meat4 : BD_Meat2 {
	Default {
		BD_BaseVictim.spriterange 4;
		BD_BaseVictim.spritename 'BGO4';
		height 68;
	}
}

//hanging single leg upside-down
Class BD_Meat5 : BD_Meat2 {
	Default {
		BD_BaseVictim.swingspeed 0.018;
		BD_BaseVictim.spriterange 1;
		BD_BaseVictim.spritename 'BGO5';
		height 52;
	}
}

Class BD_NonsolidMeat2 : BD_Meat2 {
	Default {
		-SOLID
		-SHOOTABLE
		+VULNERABLE
		radius 20;
	}
}

Class BD_NonsolidMeat3 : BD_Meat3 {
	Default {
		-SOLID
		-SHOOTABLE
		+VULNERABLE
		radius 20;
	}
}

Class BD_NonsolidMeat4 : BD_Meat4 {
	Default {
		-SOLID
		-SHOOTABLE
		+VULNERABLE
		radius 20;
	}
}

Class BD_NonsolidMeat5 : BD_Meat5 {
	Default {
		-SOLID
		-SHOOTABLE
		+VULNERABLE
		radius 20;
	}
}

Class BD_BloodyTwitch : BD_BaseVictim {
	Default {
		BD_BaseVictim.swingspeed 0.01;
		radius 16;
		height 68;
		yscale 0.8;
		health 80;
		-NODAMAGE
		painchance 220;
		+BUDDHA
		+NOGRAVITY
		+SPAWNCEILING
	}
	override void Tick() {
		super.Tick();
		if (isFrozen())
			return;
		if (bdoom_debris) 
			A_SpawnitemEx("DecorBloodDrop",frandom(-3,3),frandom(-3,3),frandom(-4,0),failchance:254);
		if (health == 1 && !vdead)
			SetStateLabel("Die");
	}
	states {
		Spawn:
			BTWT A 0 NoDelay {
				if (random(0,1) == 1)
					sprite = GetSpriteIndex("BTWU");
			}
		Idle:
			#### A 0 A_Jump(256,"HeadNeutral","HeadLowered","HeadRaised");
		Pain:
			#### # 1 {
				bNOPAIN = true;
				A_PlaySound("victims/chain",CHAN_BODY|CHAN_NOSTOP,attenuation:4);
				BD_StartSwing(2.5);
				if (vdead)
					return ResolveState("Dead");
				else if (health <= 1)
					return ResolveState("Die");
				else {
					A_PlaySound("victims/pain",CHAN_VOICE|CHAN_NOSTOP);
					if (frame > 5 && frame < 9)
						return ResolveState("LowTwitch");
					else
						return ResolveState("TopTwitch");
				}
				return ResolveState(null);
			}
			goto spawn;
		HeadNeutral:
			#### AB random(20,60) A_Jump(128,"RaiseHead","LowerHead");
			loop;
		LowerHead:
			#### AFG 6;
		HeadLowered:
			#### GHGI random(20,60);
			#### A 0 A_Jump(144,"HeadLoweredEnd","LowTwitch","Cough");
			loop;
		HeadLoweredEnd:
			#### FB 6;
			goto HeadNeutral;
		RaiseHead:
			#### BC 6;			
		HeadRaised:
			#### CD random(20,60);
			#### A 0 A_Jump(112,"HeadRaisedEnd","TopTwitch");
			loop;
		HeadRaisedEnd:
			#### CB 6;
			goto HeadNeutral;
		TopTwitch:
			#### A 0 {
				A_PlaySound("victims/chain",attenuation:4);
				BD_StartSwing();
			}
			#### CECECE random(9,12);
			#### A 0 { bNOPAIN = false; }
			goto HeadRaised;
		LowTwitch:
			#### A 0 {
				A_PlaySound("victims/chain",attenuation:4);
				BD_StartSwing();
			}
			#### IJIJIJ random(9,12);
			#### A 0 { bNOPAIN = false; }
			goto HeadLowered;
		Cough:
			#### G 4;
			#### A 0 A_PlaySound("victims/cough",attenuation:5);
			#### KLMN 4;
			#### G 10;
			#### A 0 A_Jump(96,"HeadLowered");
			#### A 0 A_PlaySound("victims/cough",attenuation:5);
			#### KLMN 4;
			#### G 14;
			goto HeadLowered;
		Die:
			#### F 5 {
				A_PlaySound("victims/death",CHAN_ITEM);
				vdead = true;
			}
			#### GOPQ 7;
		Dead:
			#### R 20;
			#### A 0 { bNOPAIN = false; }
			loop;
	}
}


Class BD_NonsolidTwitch : BD_BloodyTwitch {
	Default {
		-SOLID
		-SHOOTABLE
		+VULNERABLE
		radius 20;
	}
}

Class BD_DeadStick : BD_BaseVictim {
	Default {
		Radius 16;
		Height 64;
		ProjectilePassHeight -16;
		-ROLLSPRITE
		-SPRITEFLIP
		xscale 0.8;
		yscale 0.68;
	}
	states {
		Spawn:
			TNT1 A 0 NoDelay A_Jump(256,1,2,3,4,5,6,7,8);
			BSTD ABCDEFGH -1;
			stop;
	}
}
		

/*
// ********************
// A head impaled on a stick
// ********************

Class BD_HeadOnAStick : BD_BaseVictim replaces HeadOnAStick
{
+SHOOTABLE
+DONTBLAST
+NOPAIN +DONTFALL
health 20
mass 9999999
Deathheight 56
states
	{
	Spawn:
		TNT1 AAAA 0 NoDelay A_SpawnItemEx("BD_Bloodpool", random(-4,4),random(-4,4),0,	0,0,0,	0,0,64)
		POL4 A 1
		wait
	Death:
		POL4 B 1 A_SpawnItemEx("HeadFromPole",random(-4,4),random(-4,4),56,random(3,7),0,random(0,5),random(0,360))
		POL4 B -1
		stop
}
}
	
actor HeadFromPole : BD_BaseGib
{
+NOBLOCKMAP
mass 1
states
	{
	spawn:
		TNT1 A 0 NoDelay A_SetScale(scalex*randompick(-1,1),scaley)
		PL4P ABCDEFGH 2 A_SpawnItemEx("BD_Blood",random(-1,1),random(-1,1),random(-1,1),	random(1,3),0,random(0,1),random(-165,195),0,80)
		goto spawn+1
	Death:
		TNT1 A 0 A_ChangeFlag("SHOOTABLE",1)
		TNT1 A 0 A_ChangeFlag("NOBLOCKMAP",0)
		TNT1 A 0 A_jump(256,1,2)
		PL4P A 1
		wait
		PL4P E 1
		wait
	 }
}

// ********************
// Several heads impaled on a stick
// ********************

actor BD_HeadsOnAStick : HeadsOnAStick replaces HeadsOnAStick
{
+DONTBLAST
+SHOOTABLE
mass 9999999
-NOPAIN
-NOBLOOD
+NODAMAGE
painchance 230
states
	{
	Spawn:
		TNT1 AAAA 0 NoDelay A_SpawnItemEx("BD_SmallBloodpool", random(-4,4),random(-4,4),0,	0,0,0,	0,0,64)
		TNT1 A 0 A_GiveInventory("DummyChecker",5)
		POL2 A 1
		wait
	Spawn1:
		POL2 B 1
		loop
	Spawn2:
		POL2 C 1
		loop
	Spawn3:
		POL2 D 1
		loop
	Spawn4:
		POL2 E 1
		loop
	Spawn5:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("SHOOTABLE",0)
		TNT1 A 0 A_ChangeFlag("NOPAIN",1)
		TNT1 A 0 A_ChangeFlag("NOBLOOD",1)
		POL2 F 1
		wait
	Pain:
		TNT1 A 0 A_JumpIfInventory("DummyChecker",5,"Head1")
		TNT1 A 0 A_JumpIfInventory("DummyChecker",4,"Head2")
		TNT1 A 0 A_JumpIfInventory("DummyChecker",3,"Head3")
		TNT1 A 0 A_JumpIfInventory("DummyChecker",2,"Head4")
		TNT1 A 0 A_JumpIfInventory("DummyChecker",1,"Head5")
		goto Spawn5 //unnecessary though
	Head1:
		TNT1 A 0
		TNT1 A 0 A_TakeInventory("DummyChecker",1)
		POL2 B 1 A_SpawnItemEx("HeadFromPole",random(-4,4),random(-4,4),64,random(3,7),0,random(0,5),random(0,360))
		goto spawn1
	Head2:
		TNT1 A 0
		TNT1 A 0 A_TakeInventory("DummyChecker",1)
		POL2 C 1 A_SpawnItemEx("HeadFromPole",random(-4,4),random(-4,4),54,random(3,7),0,random(0,5),random(0,360))
		goto spawn2
	Head3:
		TNT1 A 0
		TNT1 A 0 A_TakeInventory("DummyChecker",1)
		POL2 D 1 A_SpawnItemEx("HeadFromPole",random(-4,4),random(-4,4),44,random(3,7),0,random(0,5),random(0,360))
		goto spawn3
	Head4:
		TNT1 A 0
		TNT1 A 0 A_TakeInventory("DummyChecker",1)
		POL2 E 1 A_SpawnItemEx("HeadFromPole",random(-4,4),random(-4,4),34,random(3,7),0,random(0,5),random(0,360))
		goto spawn4
	Head5:
		TNT1 A 0
		TNT1 A 0 A_TakeInventory("DummyChecker",1)
		POL2 F 1 A_SpawnItemEx("HeadFromPole",random(-4,4),random(-4,4),24,random(3,7),0,random(0,5),random(0,360))
		goto spawn5
}
}





// ********************
// Impaled dead body
// ********************


actor BD_DeadStick : DeadStick replaces DeadStick
{
+DONTBLAST
+SHOOTABLE
+LOOKALLAROUND
mass 9999999
health 60
Deathheight 64
+NOPAIN +DONTFALL
states
	{
	Spawn:
		TNT1 A 0 NoDelay A_SetScale(scalex*randompick(-1,1),scaley)
		TNT1 AAAA 0 A_SpawnItemEx("BD_SmallBloodpool", random(-4,4),random(-4,4),0,	0,0,0,	0,0,64)
		TNT1 A 0 A_JumpIf(GetCVAR("bdoom_blood")==0,3)
		TNT1 A 0 A_CheckSight(2)
		TNT1 A 0 A_Look
		POl1 A 10
		goto spawn+5
	Normal:
		POl1 A 10
		goto spawn+5
	See:
		TNT1 A 0
		TNT1 A 0 A_FaceTarget
		TNT1 A 0 A_Jump(80,3)
		POl1 A 10 A_SpawnitemEx("BloodSpill",0,random(10,12),30,0,0,0,0,0,230) //blood from the stump
		goto spawn+5
		TNT1 A 0
		POl1 A 10 A_SpawnitemEx("BloodSpill",-15,random(-3,-5),30,0,0,0,0,0,230) // blood from the back falling behind it
		goto spawn+5
	Death:
		POL1 BCDEFGHIJKLMN 5
		POL1 N -1
		stop
}
}

// ****************************
// Impaled living twitching killable body
// ****************************


actor BD_LiveStick : LiveStick replaces LiveStick
{
+DONTBLAST
health 40
painsound "grunt/pain"
Deathsound "grunt/Death"
painchance 255
Deathheight 64
+SHOOTABLE
mass 9999999
states
	{
	Spawn:
		TNT1 A 0 NoDelay A_SetScale(scalex*randompick(-1,1),scaley)
		TNT1 AAAA 0 A_SpawnItemEx("BD_SmallBloodpool", random(-4,4),random(-4,4),0,	0,0,0,	0,0,64)
		POL6 A 6
		POL6 B 8
		goto spawn+5
	Pain:
		POL6 B 4 A_Pain
		goto spawn+5
	Death:
		POL6 B 50 A_Scream
		POL6 CDEFGHIJKL 5
		POL6 L -1
		stop
}
}

