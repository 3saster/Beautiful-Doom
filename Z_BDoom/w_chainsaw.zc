Class BD_Chainsaw : BDoomWeapon {
	name mblood; //enemy blood color
	int jamstacks; //chance to jam
	bool hittarget; //did it hit target?
	protected bool started; //is it on?
	protected bool cleaning; //is in the process of being cooled, for pseudo-refire of enhanced alt.attack (cleaning)
	protected int sndcounter; //at >75 produces higher-pitched sound
		
	Default	{
		Weapon.Kickback 0;
		Weapon.SelectionOrder 220;
		weapon.readysound "";
		weapon.upsound "";
		inventory.pickupsound "weapons/chainsaw/draw";
		Inventory.PickupMessage "$GOTCHAINSAW";
		Obituary "$OB_MPCHAINSAW";
		Tag "$TAG_CHAINSAW";
		weapon.slotnumber 1;
		weapon.slotpriority 1;
		+WEAPON.MELEEWEAPON
		+WEAPON.AXEBLOOD
	}
		
	override void DoEffect() {
		if (owner) {
			if(bdoom_weapons == 2) { 
				bNOALERT = true;
				bNOAUTOFIRE = true;
			}
			else { 
				bNOALERT = false;
				bNOAUTOFIRE = false;
				A_ClearOverlays(3,3);
			}
		//Console.Printf("jamstacks "..jamstacks);
		}
		Super.DoEffect();
	}	


	//Thanks to phantombeta for helping me optimize this overlay thing
	action void BD_BloodOverlay () {
		let po = player.FindPSprite (3);
		let main = player.FindPSprite (PSP_Weapon);
	 
		if (!po || !main)
			return;
	 
		int stage = 0;
			 if (invoker.jamstacks >  4  && invoker.jamstacks < 30) stage = 1;
		else if (invoker.jamstacks >= 30 && invoker.jamstacks < 52) stage = 2;
		else if (invoker.jamstacks >= 52 && invoker.jamstacks < 64) stage = 3;
		else if (invoker.jamstacks >= 64                          ) stage = 4;
	 
		if (stage == 0)
			return;
	 
		string colorLetter = "";
		if (invoker.mBlood == "blue")
			colorLetter = "Y";
		else if (invoker.mBlood == "green")
			colorLetter = "Z";
		else
			colorLetter = "X";
			
			 if (main.sprite == GetSpriteIndex ("SAWN"))  po.sprite = GetSpriteIndex (String.Format ("S%s%dN", colorLetter, stage));
		else if (main.sprite == GetSpriteIndex ("SAWB"))  po.sprite = GetSpriteIndex (String.Format ("S%s%dB", colorLetter, stage));
		else if (main.sprite == GetSpriteIndex ("SAWS"))  po.sprite = GetSpriteIndex (String.Format ("S%s%dS", colorLetter, stage));
		else if (main.sprite == GetSpriteIndex ("SAWF"))  po.sprite = GetSpriteIndex (String.Format ("S%s%dF", colorLetter, stage));
		else if (main.sprite == GetSpriteIndex ("SAW2"))  po.sprite = GetSpriteIndex (String.Format ("S%s%d2", colorLetter, stage));
	 
		po.frame = main.frame;
	}

	states	{
		Spawn:
			CSAW A -1;
			Stop;
		Select:
			TNT1 A 0 {
				If(bdoom_weapons == 2)
					return ResolveState("Select.Modern");
				if (bdoom_weapons == 1)
					A_PlaySound("weapons/chainsaw/draw");
				else
					A_PlaySound("weapons/sawup",5);
				return ResolveState(null);
			}
			SAWS ABCDEF 1 A_WeaponReady(WRF_NOFIRE);
			goto ready;
		Deselect:
			TNT1 A 0 A_JumpIf(bdoom_weapons ==1,"Deselect.Enhanced");
			TNT1 A 0 A_JumpIf(bdoom_weapons ==2,"Deselect.Modern");
			TNT1 A 0 {
				A_ClearRefire();
				invoker.jamstacks = 0;
				invoker.started = false;
				invoker.sndcounter = 0;
				invoker.cleaning = 0;
				A_Stopsound(4);
				A_Stopsound(5);
			}
			SAWN A 1 A_Lower();
			wait;
		Ready:
			TNT1 A 0 A_JumpIf(bdoom_weapons ==2,"Ready.Modern");
			TNT1 A 0 {
				invoker.jamstacks = 0;
				invoker.started = false;
				invoker.sndcounter = 0;
				invoker.cleaning = 0;
				if (bdoom_weapons == 1)
					A_PlaySound("weapons/chainsaw/idle",5);
				else
					A_PlaySound("weapons/sawidle",5);
			}
			SAWB BCDC 2 {
				if (bdoom_weapons == 1)
					A_weaponready();
				else
					A_weaponready(WRF_NOSECONDARY);
			}
			TNT1 A 0 {
				if (bdoom_debris) {
					A_SpawnItemEx("SawSmoke",cos(pitch)*15,random(8,10),sin(-pitch)*25+random(22,26),0,0,frandom(0.85,1.0),0,SXF_ABSOLUTEVELOCITY|SXF_SETTARGET,80);
					A_SpawnItemEx("SawSmoke",cos(pitch)*15,random(8,10),sin(-pitch)*25+random(22,26),0,0,frandom(0.85,1.0),0,SXF_ABSOLUTEVELOCITY|SXF_SETTARGET,80);
				}
			}
			loop;
		Fire: //should be 8 tics with no refire frames
			TNT1 A 0 A_JumpIf(bdoom_weapons ==1,"Fire.Enhanced");
			TNT1 A 0 A_JumpIf(bdoom_weapons ==2,"Fire.Modern");
			//fake chargeup, attack begins to coincide with vanilla speed
			TNT1 A 0 A_Saw("","weapons/sawhit",2,"BD_ChainsawPuff") ;
			SAWN AABC 1;
			TNT1 A 0 {
				A_playsound("weapons/sawfull",4,1.0,TRUE);
				A_Saw("","weapons/sawhit",2,"BD_ChainsawPuff");
			}
			SAWF AB 2 A_WeaponOffset(frandom(-2.0,2.0),frandom(32.0,34.0),WOF_INTERPOLATE);
			TNT1 A 0 A_Refire();
			TNT1 A 0 A_Stopsound(4);
			SAWN CBA 1 A_WeaponReady(WRF_NOSECONDARY);
			goto ready;
		Hold:
			TNT1 A 0 A_JumpIf(bdoom_weapons ==1,"Hold.Enhanced");
			TNT1 A 0 A_JumpIf(bdoom_weapons ==2,"Hold.Modern");
			TNT1 A 0 A_Saw("","weapons/sawhit",2,"BD_ChainsawPuff");
			SAWF AB 2 A_WeaponOffset(frandom(-2.0,2.0),frandom(32.0,34.0),WOF_INTERPOLATE);
			TNT1 A 0 A_Saw("","weapons/sawhit",2,"BD_ChainsawPuff");
			SAWF AB 2 A_WeaponOffset(frandom(-2.0,2.0),frandom(32.0,34.0),WOF_INTERPOLATE);
			TNT1 A 0 A_Refire();
			TNT1 A 0 A_Stopsound(4);
			SAWN CBA 1 A_WeaponReady(WRF_NOSECONDARY);
			goto ready;

	//// ENHANCED
		Deselect.Enhanced:
			TNT1 A 0 A_Stopsound(4);
			SAWN A 1 A_Lower(12);
			wait;
		Fire.Enhanced:
			TNT1 A 0 {
				A_PlaySound("weapons/chainsaw/start",4);
				A_CustomPunch(2*random(1,10),1,0,"BD_ChainsawPuff");
			}
			SAWN AABC 1 ;
			TNT1 A 0 {
				A_playsound("weapons/chainsaw/loop",4,1.0,TRUE);
				A_CustomPunch(2*random(1,10),1,0,"BD_ChainsawPuff");
			}
			SAWF AB 2 A_WeaponOffset(frandom(-2.0,2.0),frandom(32.0,34.0),WOF_INTERPOLATE);
			TNT1 A 0 A_Refire("Hold.Enhanced");
			TNT1 A 0 A_PlaySound("weapons/chainsaw/stop",4);
			SAWN CBA 1 A_WeaponReady();
			goto ready;
		Hold.Enhanced:
			TNT1 A 0 A_CustomPunch(2*random(1,10),1,0,"BD_ChainsawPuff");
			SAWF AB 2 A_WeaponOffset(frandom(-2.0,2.0),frandom(32.0,34.0),WOF_INTERPOLATE);
			TNT1 A 0 A_CustomPunch(2*random(1,10),1,0,"BD_ChainsawPuff");
			SAWF AB 2 A_WeaponOffset(frandom(-2.0,2.0),frandom(32.0,34.0),WOF_INTERPOLATE);
			TNT1 A 0 A_Refire("Hold.Enhanced");
			TNT1 A 0 A_PlaySound("weapons/chainsaw/stop",4);
			SAWN CBA 1 A_WeaponReady();
			goto ready;
		AltFire:
			TNT1 A 0 A_JumpIf(bdoom_weapons ==2,"AltFire.Modern");
			TNT1 A 2 A_GunFlash("SawKick",GFF_NOEXTCHANGE);
			TNT1 A 0 A_jumpifinventory("PowerStrength",1,"AltHoldStrong");
			KICK AB 1;
			TNT1 A 0 {
				A_SetSpeed(0.1);
				A_playsound("weapons/kick/swing");
			}
			KICK CD 1 ;
			TNT1 A 0 A_Recoil(-2);
			KICK EF 1;
			KICK G 3 A_CustomPunch(3*random(5,12),TRUE,CPF_NOTURN,"KickPuff",72);
			KICK HD 2;
			KICK CBA 3;
			TNT1 A 4 A_SetSpeed(1); 
			goto ready;
		AltHoldStrong:
			KICK AB 1;
			TNT1 A 0 {
				A_SetSpeed(0.2);
				A_playsound("weapons/kick/swing");
			}
			KICK CD 1 ;
			TNT1 A 0 A_Recoil(-5);
			KICK EF 1;
			KICK G 3 A_CustomPunch(30*random(3,10),TRUE,CPF_NOTURN,"KickPuffStrong",80);
			KICK HD 2;
			KICK CBA 3;
			TNT1 A 4 A_SetSpeed(1);
			goto ready;
		SawKick:
			TNT1 A 0 A_PlaySound("weapons/chainsaw/idle",5);
			SAW2 ACDF 1;
			SAW2 FE 2;
			TNT1 A 0 A_PlaySound("weapons/chainsaw/idle",5);
			SAW2 DCBA 2;
			TNT1 A 0;
			SAWN A 4 A_PlaySound("weapons/chainsaw/idle",5);
			TNT1 A 0 A_PlaySound("weapons/chainsaw/idle",5);
			SAWB BCDC 2;
			stop;

	/////////// MODERN

		Select.Modern:
			SAWN A 0 {
				A_Overlay(3,"BloodOverlay");
				A_WeaponOffset(-35.0,74.0);
			}
			SAWN AAAAAA 1 {
				A_WeaponOffset(5.0,-6.0,WOF_ADD);
				A_WeaponReady(WRF_NOFIRE|WRF_NOBOB);
			}
			goto ready;
		Deselect.Modern:
			TNT1 A 0 {
				A_ClearRefire();
				invoker.started = false;
				invoker.sndcounter = 0;
				invoker.cleaning = 0;
				A_Stopsound(4);
				A_Stopsound(5);
			}
		Deselect1.Modern:
			SAWN A 1 A_Lower(12);
			loop;

		Ready.Modern:
			TNT1 A 0 {
				let po = player.FindPSprite (3);
				if (!po)
					A_Overlay(3,"BloodOverlay");
			}
			SAWN A 1 {
				if (bdoom_weapons != 2)
					return ResolveState("Ready");
				else If(invoker.started == true)
					return ResolveState("ReadyOn");
				A_WeaponReady();
				return ResolveState(null);
			}
			wait;
		ReadyOn:
			TNT1 A 0 {
				A_PlaySound("Mweapons/saw/ready",5,1.0,TRUE);
				invoker.started = true;
				A_AlertMonsters(312);
				if (random(0,32) < invoker.jamstacks)
					A_Eject("ChainsawBloodSpill",frandom(13,20),frandom(1.2,2.8),frandom(4.5,7.5),0,0,0);
			}
			SAWB ABCDC 2 A_WeaponReady();
			TNT1 A 0 {
				A_SpawnItemEx("SawSmoke",cos(pitch)*15,random(8,10),sin(-pitch)*25+random(22,26),0,0,frandom(0.85,1.0),0,SXF_ABSOLUTEVELOCITY|SXF_SETTARGET,80);
				A_SpawnItemEx("SawSmoke",cos(pitch)*15,random(8,10),sin(-pitch)*25+random(22,26),0,0,frandom(0.85,1.0),0,SXF_ABSOLUTEVELOCITY|SXF_SETTARGET,80);
				A_AlertMonsters(312);
				if (random(0,32) < invoker.jamstacks)
					A_Eject("ChainsawBloodSpill",frandom(13,20),frandom(1.2,2.8),frandom(4.5,7.5),0,0,0);
				invoker.jamstacks = clamp(invoker.jamstacks-1,0,2048);
			}
			SAWB ABCDC 2 A_WeaponReady();
			TNT1 A 0 {
				A_SpawnItemEx("SawSmoke",cos(pitch)*15,random(8,10),sin(-pitch)*25+random(22,26),0,0,frandom(0.85,1.0),0,SXF_ABSOLUTEVELOCITY|SXF_SETTARGET,80);
				A_SpawnItemEx("SawSmoke",cos(pitch)*15,random(8,10),sin(-pitch)*25+random(22,26),0,0,frandom(0.85,1.0),0,SXF_ABSOLUTEVELOCITY|SXF_SETTARGET,80);
				if (random(0,32) < invoker.jamstacks)
					A_Eject("ChainsawBloodSpill",frandom(13,20),frandom(1.2,2.8),frandom(4.5,7.5),0,0,0);
			}
			goto ready;
		AltFire.Modern:
			TNT1 A 0 A_Jumpif(invoker.started == false, "Fire.Modern");
			TNT1 A 0 A_Jumpif(invoker.cleaning == true, "AltFire1.Modern");
			SAW2 ABCDE 1;
		AltFire1.Modern:
			TNT1 A 0 A_PlaySound("Mweapons/saw/start",4);
			SAW2 EFGEFGEFG 1  {
				if (invoker.jamstacks > 0)
					A_SpawnItemEx("ChainsawBloodSpray",0,5,random(10,13),vel.x+random(4,5),vel.y*0.4,frandom(6.0,6.5),frandom(5.5,6.0),SXF_SETTARGET,32);
			}
			TNT1 A 0 {
				A_PlaySound("Mweapons/saw/stop",4);
				invoker.jamstacks = clamp(invoker.jamstacks-8,0,2048);
				invoker.cleaning = 1;
			}
			SAW2 E 9 A_WeaponReady(WRF_NOPRIMARY);
			SAW2 E 9 A_WeaponReady();
			TNT1 A 0 { invoker.cleaning = 0; }
			SAW2 DCBA 1;
			goto ready;	

		Fire.Modern:
			TNT1 A 0 {
				invoker.cleaning = 0;
				A_AlertMonsters(312);
				A_PlaySound("Mweapons/saw/cock");
				if (invoker.started == true)
					return ResolveState("Attack");
				return ResolveState(null);
			}
			
			SAWS FEDCBA 1 A_WeaponOffset(0,32);
			SAWS BCD 1 A_WeaponOffset(0,32);
			SAWS EF 2 A_WeaponOffset(0,32);

			TNT1 A 0 A_Jump(256 - invoker.jamstacks * 2,"ReadyOn");
			TNT1 A 0 { invoker.jamstacks = clamp(invoker.jamstacks-8,0,2048); }
			goto ready;		
		Attack:	
			TNT1 A 0 {
				A_StopSound(5);
				A_PlaySound("Mweapons/saw/start",4);
			}
			SAWN ABC 2;
		Hold.Modern:
			TNT1 A 0 {
				if(invoker.sndcounter < 75)
					A_playsound("Mweapons/saw/loop",4,1.0,TRUE);
				else
					A_playsound("Mweapons/saw/highloop",4,1.0,TRUE);
				A_AlertMonsters();
				A_CustomPunch(6*random(1,4),1,CPF_NOTURN,"ModernsawPuff");
				invoker.sndcounter++;
				A_SetAngle(angle + frandom(invoker.jamstacks * -0.01,invoker.jamstacks * 0.01));
				A_SetPitch(Pitch + frandom(invoker.jamstacks * -0.01,invoker.jamstacks * 0.01));
			}
			SAWF AB 1 A_WeaponOffset(frandom(-0.3 + invoker.jamstacks * -0.01, 0.3 + invoker.jamstacks * 0.01),frandom(32.0, 32.8 + invoker.jamstacks * 0.01), WOF_INTERPOLATE);
			TNT1 A 0 {
				if (invoker.jamstacks >= 28 && invoker.hittarget == true && random(0,256) <= invoker.jamstacks / 10)
					return ResolveState("Jam");
				invoker.hittarget = false;
				return ResolveState(null);
			}
			TNT1 A 0 A_Refire("Hold.Modern");
		AttackEnd:	
			TNT1 A 0 {
				invoker.sndcounter = 0;
				A_PlaySound("Mweapons/saw/stop",4);
			}
			SAWN CBAA 2;
			TNT1 A 0 A_PlaySound("Mweapons/saw/ready",5,1.0,TRUE);
			goto ready;

		Jam:
			TNT1 A 0 {
				A_PlaySound("Mweapons/saw/stuck",4);
				invoker.started = false;
				invoker.sndcounter = 0;
				invoker.hittarget = false;
				A_ClearRefire();
			}
			SAW2 ABCDE 1;
			SAW2 FFFF 1 A_WeaponOffset(random(-1,1),random(32,33),WOF_INTERPOLATE);
			SAW2 F 9;
			SAW2 EDCBA 2;
			SAWN A 2;
			goto ready;


		BloodOverlay:
			TNT1 A 1 BD_BloodOverlay();
			loop;
		Loadsprites:
			SX1F AB 0;		SX2F AB 0;		SX3F AB 0;		SX4F AB 0;			//attack
			SX1N ABC 0;		SX2N ABC 0;		SX3N ABC 0;		SX4N ABC 0;			//idle
			SX1B ABCD 0; 	SX2B ABCD 0; 	SX3B ABCD 0; 	SX4B ABCD 0;		//on
			SX1S ABCDEF 0;	SX2S ABCDEF 0;	SX3S ABCDEF 0;	SX4S ABCDEF 0;		//start
			SX12 ABCDEFG 0; SX22 ABCDEFG 0;	SX32 ABCDEFG 0;	SX42 ABCDEFG 0;		//clean
			SZ1F AB 0;		SZ2F AB 0;		SZ3F AB 0;		SZ4F AB 0;			//attack
			SZ1N ABC 0;		SZ2N ABC 0;		SZ3N ABC 0;		SZ4N ABC 0;			//idle
			SZ1B ABCD 0; 	SZ2B ABCD 0; 	SZ3B ABCD 0; 	SZ4B ABCD 0;		//on
			SZ1S ABCDEF 0;	SZ2S ABCDEF 0;	SZ3S ABCDEF 0;	SZ4S ABCDEF 0;		//start
			SZ12 ABCDEFG 0; SZ22 ABCDEFG 0;	SZ32 ABCDEFG 0;	SZ42 ABCDEFG 0;		//clean
			SY1F AB 0;		SY2F AB 0;		SY3F AB 0;		SY4F AB 0;			//attack
			SY1N ABC 0;		SY2N ABC 0;		SY3N ABC 0;		SY4N ABC 0;			//idle
			SY1B ABCD 0; 	SY2B ABCD 0; 	SY3B ABCD 0; 	SY4B ABCD 0;		//on
			SY1S ABCDEF 0;	SY2S ABCDEF 0;	SY3S ABCDEF 0;	SY4S ABCDEF 0;		//start
			SY12 ABCDEFG 0; SY22 ABCDEFG 0;	SY32 ABCDEFG 0;	SY42 ABCDEFG 0;		//clean
			stop;
	}
}



Class BD_ChainsawPuff : BDoomPuff {
	Default {
		+PUFFONACTORS
		Damagetype "Saw";
		scale 0.15;
		alpha 0.6;
		decal "Sawmark";
		renderstyle "Add";
		alpha 0.5;
	}
	states {
		Crash:
			TNT1 A 0 {
				If (bdoom_debris) {
					for (int i = 5; i > 0; i--)
						A_SpawnItemEx("Wallpart",0,0,0,	frandom(-3,3),frandom(-3,3),frandom(5,10),	0,0,64);
					A_SpawnItemEx("WallSmoke",0,0,0,0,0,frandom(0.2,0.5));
				}
				if (random(1,100) <= 70) {
					if (bdoom_sparks)
						A_PlaySound("weapons/chainsaw/hitwall");
					for (int i = 15; i > 0; i--)
						A_SpawnItemEx("RicochetSpark",0,0,0,	frandom(-2,2),frandom(-2,2),frandom(5,10),failchance:160);
				}
			}
			CPUF ABCD 1 bright;
			stop;
	}
}

Class ModernsawPuff : BD_ChainsawPuff {
	Default {
		+HITTRACER
		+PUFFONACTORS
		+PUFFGETSOWNER
	}
	states {
		Melee:
			TNT1 A 1 {
				let chainsaw = BD_Chainsaw (target.player.readyweapon);
				if (chainsaw) {
					chainsaw.jamstacks++;
					chainsaw.hittarget = true;	
					if (tracer) {
						if (tracer.bloodcolor.G > 4*(tracer.bloodcolor.R  + tracer.bloodcolor.B))
							chainsaw.mblood = "green";
						else if (tracer.bloodcolor.B > 4*(tracer.bloodcolor.R  + tracer.bloodcolor.G))
							chainsaw.mblood = "blue";
						else
							chainsaw.mblood = "red";
					}
				}
			}
			stop;
	}
}

Class ChainsawBloodSpray : BloodSpray {
	Default {
		scale 0.1;
		gravity 0.5;
		alpha 0.7;
		height 8;
	}
	override void PostBeginPlay() {
		Super.PostBeginPlay();
		let chainsaw = BD_Chainsaw (target.player.readyweapon);
		if (chainsaw) {
			if (chainsaw.mBlood == "green") {
				bcolor = "green";
				A_SetTranslation("GreenBlood");
			}
			else if (chainsaw.mBlood == "blue") {
				bcolor = "blue";
				A_SetTranslation("BlueBlood");
			}
			else
				bcolor = "red";
		}
	}
}

Class ChainsawBloodSpill : CeilingBloodDrop {
	Default {
		scale 0.06;
	}
	override void PostBeginPlay() {
		Super.PostBeginPlay();
		A_SetScale(scale.x*randompick(-1,1)*frandom(1.0,1.3),scale.y*frandom(1.0,1.3));
		let chainsaw = BD_Chainsaw (target.player.readyweapon);
		if (chainsaw) {
			if (chainsaw.mBlood == "green") {
				A_SetTranslation("GreenBlood");
			}
			else if (chainsaw.mBlood == "blue") {
				A_SetTranslation("BlueBlood");
			}
		}
	}
	states {
		spawn:
			BLOD XXYYZZZZZZZZZZZZZZZZZZZZZZZZZ 1 {
				vel.z = clamp(vel.z-0.25,-3.5,0.0);
				if (bdoom_blood == 0 || waterlevel > 0) {
					self.destroy();
					return ResolveState(null);
				}
				if (pos.z <= floorz)
					return ResolveState("Death");
				return ResolveState(null);
			}
			stop;
	}
}

class SawSmoke : Smoke_General {
	Default {
		alpha 0.3;
		scale 0.22;
	}
	override void Tick() {
		if (target) {
			vel.x = target.vel.x;
			vel.y = target.vel.y;
		}
		super.Tick();
	}
	states {
		Spawn:
			SMK1 AABBCCDDEEFFGGHHIIJJKKLLMMNNOOPPQQRR 1 A_FadeOut(0.01);
			stop;
	}
}