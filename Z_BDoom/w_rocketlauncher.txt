Class BD_RocketLauncher : BDoomWeapon replaces RocketLauncher
{
	Default
	{
	+WEAPON.NOAUTOFIRE
	Inventory.PickupMessage "$GOTLAUNCHER";
	Tag "$TAG_ROCKETLAUNCHER";
	inventory.pickupsound "pickups/rocketlauncher";
	weapon.ammotype1	"RocketAmmo";
	weapon.ammogive1	0;
	weapon.ammouse1		1;
	weapon.ammotype2 	"RocketAmmo";
	weapon.ammouse2		1;
	weapon.ammogive2	2;
	weapon.selectionorder 250;
	weapon.slotnumber 5;
	}
	
override void DoEffect()
	{
	If (Owner)
		{
		if(bdoom_weapons == 2)
			{
				Ammo1 = ammo(Owner.FindInventory("RLClip"));
				AmmoUse1 = 1;
				AmmoUse2 = 0;
				bAMMO_OPTIONAL = true;
			}
		else
			{
				Ammo1 = ammo(Owner.FindInventory("RocketAmmo"));
				AmmoUse1 = 1;
				AmmoUse2 = 1;
				bAMMO_OPTIONAL = false;
			}
		}
	Super.DoEffect();
	}
	
states
	{
	Spawn:
		LAUN A 1 NoDelay A_JumpIf(Bdoom_weapons == 2,1);
		Loop;
		LAUN B 1;
		loop;
	Select:
		TNT1 A 0 A_JumpIf(bdoom_weapons==2,"Select.Modern");
		TNT1 A 0 { if(bdoom_weapons ==1)
			A_PlaySound("weapons/rlan/draw");}
		TNT1 AAAAAAAA 0 A_Raise();
		RLAN DCBEFG 1 A_WeaponReady(WRF_NOFIRE);
		goto ready;
	Deselect:
		TNT1 A 0 A_JumpIf(bdoom_weapons==2,"Deselect.Modern");
		RLAN A 1 A_Lower;
		loop;
	Ready:
		TNT1 A 0 A_JumpIf(bdoom_weapons==2,"Ready.Modern");
		RLAN A 1  { if(bdoom_weapons ==1) {
				A_WeaponReady(); }
			else {
				A_WeaponReady(WRF_NOSECONDARY); }
			}
		loop;
	Fire: //8 tics before fire, 12 tics fire, 0 tics refire
		TNT1 A 0 A_JumpIf(bdoom_weapons==2,"Fire.Modern");
		RLAN A 2;
		TNT1 A 0 A_GunFlash();
		RLAN ABC 2 ;
		RLAN D 3 A_FireProjectile("BD_Rocket",0,1);
		RLAN CB 3;
		RLAN EFG 1;
		TNT1 A 0 A_Refire();
		goto ready;
	AltFire:
		TNT1 A 0 A_JumpIf(bdoom_weapons==2,"AltFire.Modern");
		RLAN A 20 A_PlaySound("weapons/rlan/lock");
		TNT1 A 0 A_GunFlash();
		RLAN ABC 2 ;
		RLAN D 2 A_FireProjectile("BD_HomingRocket",0,1);
		RLAN CB 3;
		RLAN EFG 1;
		RLAN A 15 A_WeaponReady(WRF_NOSECONDARY);
		RLAN A 8 A_ReFire();
		goto ready	;
	Flash:
		RLAF A 2 Bright A_Light1();
		RLAF B 2 Bright;
		RLAF C 2 Bright A_Light2();
		RLAF DE 3 Bright;
		Goto LightDone;
		
//modern;
	Select.Modern:
		TNT1 A 0 A_PlaySound("weapons/RORN/draw");
		TNT1 AAAAAAAA 0 A_Raise();
		TNT1 A 0 A_JumpIfInventory("RLClip",3,4);
		TNT1 A 0 A_JumpIfInventory("RLClip",2,4);
		TNT1 A 0 A_JumpIfInventory("RLClip",1,4);
		RORV C 0;
		goto Select1.Modern;
		RORN A 0;
		goto Select1.Modern;
		RORE A 0;
		goto Select1.Modern;
		RORE C 0;
		goto Select1.Modern;
	Select1.Modern:
		#### # 0 A_WeaponOffset(-35.0,74.0);
		#### ####### 1 {
			A_WeaponOffset(5.0,-6.0,WOF_ADD);
			A_WeaponReady(WRF_NOFIRE|WRF_NOBOB);
			}
		goto ready;
	Deselect.Modern:
		TNT1 A 0 A_JumpIfInventory("RLClip",3,4);
		TNT1 A 0 A_JumpIfInventory("RLClip",2,4);
		TNT1 A 0 A_JumpIfInventory("RLClip",1,4);
		RORV C 1 A_Lower();
		wait;
		RORN A 1 A_Lower();
		wait;
		RORE A 1 A_Lower();
		wait;
		RORE C 1 A_Lower();
		wait;
	Ready.Modern:
		TNT1 A 0 A_JumpIfInventory("RLClip",3,4);
		TNT1 A 0 A_JumpIfInventory("RLClip",2,4);
		TNT1 A 0 A_JumpIfInventory("RLClip",1,4);
		RORV C 1 BD_WeaponReady(1);
		wait;
		RORN A 1 BD_WeaponReady(1);
		wait;
		RORE A 1 BD_WeaponReady(1);
		wait;
		RORE C 1 BD_WeaponReady(1);
		wait;
	Fire.Modern:
		TNT1 A 0 A_JumpIfInventory("RLClip",4,"Fire0.Modern");
		TNT1 A 0 A_JumpIfInventory("RLClip",3,"Fire1.Modern");
		TNT1 A 0 A_JumpIfInventory("RLClip",2,"Fire2.Modern");
		TNT1 A 0 A_JumpIfInventory("RLClip",1,"Fire3.Modern");
		goto DryReload;
	Fire0.Modern:
		RORN A 1;
		RORN B 1;
		RORN C 1 A_FireProjectile("ModernRocket",0,1);
		TNT1 A 0 A_SetPitch(pitch - 1.2,SPF_INTERPOLATE);
		RORN D 2;
		RORN C 2;
		RORN B 2;
		RORV ABCDA 2;
		RORN A 1;
		goto ready;
	Fire1.Modern:
		RORN A 1;
		RORN B 1;
		RORN C 1 A_FireProjectile("ModernRocket",0,1);
		TNT1 A 0 A_SetPitch(pitch - 1.2,SPF_INTERPOLATE);
		RORN D 2;
		RORN C 2;
		RORN B 2;
		RORV ABCEF 2;
		RORE A 1;
		goto ready;
	Fire2.Modern:
		RORE A 1;
		RORE B 1;
		RORN C 1 A_FireProjectile("ModernRocket",0,1);
		TNT1 A 0 A_SetPitch(pitch - 1.2,SPF_INTERPOLATE);
		RORN D 2;
		RORN C 2;
		RORE B 2;
		RORV FGCCC 2;
		RORE C 1;
		goto ready;
	Fire3.Modern:
		RORE C 1;
		RORE D 1;
		RORE E 2 A_FireProjectile("ModernRocket",0,1);
		TNT1 A 0 A_SetPitch(pitch - 1.2,SPF_INTERPOLATE);
		RORN D 2;
		RORE E 2;
		RORE D 2;
		RORV C 3;
		goto ready;
	Flash.Modern:
		RLAF A 2 Bright A_Light1();
		RLAF B 2 Bright;
		RLAF C 1 Bright A_Light2();
		RLAF DE 1 Bright;
		Goto LightDone;
	AltFire.Modern:
		TNT1 A 0 A_JumpIfInventory("RLClip",4,"AltFire0.Modern");
		TNT1 A 0 A_JumpIfInventory("RLClip",3,"AltFire1.Modern");
		TNT1 A 0 A_JumpIfInventory("RLClip",2,"AltFire2.Modern");
		TNT1 A 0 A_JumpIfInventory("RLClip",1,"AltFire3.Modern");
		goto DryReload;
	AltFire0.Modern:
		TNT1 A 0 A_TakeInventory("RLClip",1);
		RORN A 1;
		RORN B 1;
		TNT1 A 0 A_FireProjectile("ModernGrenadeFlare",0,0,0,0,0,-5);
		RORN C 1 A_FireProjectile("ModernGrenade",0,0,0,0,0,-5);
		TNT1 A 0 A_SetPitch(pitch - 0.25,SPF_INTERPOLATE);
		RORN D 2;
		RORN C 2;
		RORN B 2;
		RORV ABCDA 2;
		RORN A 1;
		goto ready;
	AltFire1.Modern:
		TNT1 A 0 A_TakeInventory("RLClip",1);
		RORN A 1;
		RORN B 1;
		TNT1 A 0 A_FireProjectile("ModernGrenadeFlare",0,0,0,0,0,-5);
		RORN C 1 A_FireProjectile("ModernGrenade",0,0,0,0,0,-5);
		TNT1 A 0 A_SetPitch(pitch - 0.25,SPF_INTERPOLATE);
		RORN D 2;
		RORN C 2;
		RORN B 2;
		RORV ABCEF 2;
		RORE A 1;
		goto ready;
	AltFire2.Modern:
		TNT1 A 0 A_TakeInventory("RLClip",1);
		RORE A 1;
		RORE B 1;
		TNT1 A 0 A_FireProjectile("ModernGrenadeFlare",0,0,0,0,0,-5);
		RORN C 1 A_FireProjectile("ModernGrenade",0,0,0,0,0,-5);
		TNT1 A 0 A_SetPitch(pitch - 0.25,SPF_INTERPOLATE);
		RORN D 2;
		RORN C 2;
		RORE B 2;
		RORV FGCCC 2;
		RORE C 1;
		goto ready;
	AltFire3.Modern:
		TNT1 A 0 A_TakeInventory("RLClip",1);
		RORE C 1;
		RORE D 1;
		TNT1 A 0 A_FireProjectile("ModernGrenadeFlare",0,0,0,0,0,-5);
		RORE E 2 A_FireProjectile("ModernGrenade",0,0,0,0,0,-5);
		TNT1 A 0 A_SetPitch(pitch - 0.25,SPF_INTERPOLATE);
		RORN D 2;
		RORE E 2;
		RORE D 2;
		RORV C 3;
		goto ready;
	DryReload:
		RORV C 15 A_PlaySound("Mweapons/dry");
	Reload:
		TNT1 A 0 A_JumpIf(CountInv ("RocketAmmo") == 0,"Ready");
		TNT1 A 0 A_Overlay(-3,"ReloadMag");
		TNT1 A 0 A_JumpIfInventory("RLClip",1,2);
		RORR B 1;
		goto reload1;
		RORR A 1;
		goto reload1;
	Reload1:
		#### ####### 1 A_WeaponOffset(-1.1,0.5,WOF_ADD);
		#### # 8 A_WeaponOffset(0.0,0.0,WOF_ADD);
		#### # 0 A_PlaySound("Mweapons/rocket/clipout",5);
		#### # 1 A_WeaponOffset(1.5,0.0,WOF_ADD);
		#### ### 1 A_WeaponOffset(-0.5,0.0,WOF_ADD);
		
		#### # 30 A_WeaponOffset(0.0,0.0,WOF_ADD);
		
		#### # 0 A_PlaySound("Mweapons/rocket/clipin",5);
		
		#### # 1 A_WeaponOffset(-3.0,0.0,WOF_ADD);
		#### ### 1 A_WeaponOffset(1.0,0.0,WOF_ADD);
		
		#### ####### 1 A_WeaponOffset(1.1,-0.5,WOF_ADD);
		goto ready;
	ReloadMag:
		TNT1 A 0 A_JumpIfInventory("RLClip",3,4);
		TNT1 A 0 A_JumpIfInventory("RLClip",2,2);
		RORT C 1;
		goto ReloadMagMain;
		RORT B 1;
		goto ReloadMagMain;
		RORT A 1;
		goto ReloadMagMain;
	ReloadMagMain:	
		#### ######## 1;
		#### # 8;
		
		#### ########## 1 A_Overlayoffset(-3,1.8,2.3,WOF_ADD);
		#### # 13 BD_Reload();
	
		TNT1 A 0 A_JumpIfInventory("RLClip",3,4);
		TNT1 A 0 A_JumpIfInventory("RLClip",2,2);
		RORT C 1;
		goto ReloadMagEnd;
		RORT B 1;
		goto ReloadMagEnd;
		RORT A 1;
		goto ReloadMagEnd;
	ReloadMagEnd:
		#### ########## 1 A_Overlayoffset(-3,-1.8,-2.3,WOF_ADD);
		
		#### #### 1;
		#### ####### 1;
		stop;
	}
}


Class BD_Rocket : Rocket replaces Rocket
{
Default {
	damagetype "Normal";
	scale 1.0;
	-ROCKETTRAIL
	+SKYEXPLODE
	+THRUGHOST
	decal "bigscorch";
	seesound "";
	deathsound "";
	}
states
	{
	Spawn:
		TNT1 A 0 NoDelay { 
			if(Bdoom_debris == 1)
				A_SpawnItemEx("RocketFlare",-36,0,7,vel.x,vel.y,vel.z,0,SXF_SETMASTER|SXF_ORIGINATOR|SXF_ABSOLUTEVELOCITY); 
			if(bdoom_weapons == 0)
				A_PlaySound("weapons/rocklf",5,1.0);
			if(bdoom_weapons == 1)
				A_PlaySound("weapons/rlan/fire",5,1.0);
			}
		MISL AAAA 1 bright { 
			if(Bdoom_debris==1)
				A_SpawnItemEx("BD_RocketTrail",-15,random(-2,2),random(6,9),0,0,0,0);
				}
		TNT1 A 0 A_PlaySound("weapons/rlan/fly",4,1.0,1,3);
		MISL A 1 bright { 
			if(Bdoom_debris==1)
				A_SpawnItemEx("BD_RocketTrail",-15,random(-2,2),random(6,9),0,0,0,0);
				}
		wait;
	Death.Sky:
		TNT1 A 0 A_RemoveChildren(1,RMVF_EVERYTHING);
		stop;
	BrainExplode:
	Death:
		TNT1 A 0 { 
			A_RemoveChildren(1,RMVF_EVERYTHING);
			A_StopSound(4);
			bFORCEXYBILLBOARD = true;
			A_SetRenderStyle(0.5,STYLE_Add);
			A_SetScale(0.9*randompick(-1,1),0.9*randompick(-1,1));
			if(bdoom_shakes == 1)
				A_Quake(1,6,0,4,"none");
			if(bdoom_weapons == 0)
				A_PlaySound("weapons/rocklx",5);
			if(bdoom_weapons == 1)
				A_PlaySound("weapons/rlan/explosion",5);
			if(bdoom_debris == 1) {
				A_SpawnItemEx("SmokingPiece",0,0,0, random(3,6),0,random(5,8),random(0,360),0,120);
				A_SpawnItemEx("SmokingPiece",0,0,0, random(3,6),0,random(5,8),random(0,360),0,120);
				A_SpawnItemEx("SmokingPiece",0,0,0, random(3,6),0,random(5,8),random(0,360),0,120);
				A_SpawnItemEx("SmokingPiece",0,0,0, random(3,6),0,random(5,8),random(0,360),0,120);
				A_SpawnItemEx("SmokingPiece",0,0,0, random(3,6),0,random(5,8),random(0,360),0,120);
				A_SpawnItemEx("SmokingPiece",0,0,0, random(3,6),0,random(5,8),random(0,360),0,120);
				A_SpawnItemEx("SmokingPiece",0,0,0, random(3,6),0,random(5,8),random(0,360),0,120);
				}
			A_Explode();
			}
		BOM2 ABCDEFGHIJKLMNOPQRSTUVWXY 1 bright;
		stop;
	}
}

Class BD_HomingRocket : BD_Rocket
{
int SeekerCount;
Default {
	+SEEKERMISSILE;
	+SCREENSEEKER;
	speed 17;
	seesound "weapons/rlan/fire";
	}
states
	{
	Spawn:
		TNT1 A 0 NoDelay { 
			if(Bdoom_debris==1)
				A_SpawnItemEx("HomingRocketFlare",-36,0,7,vel.x,vel.y,vel.z,0,SXF_SETMASTER|SXF_ORIGINATOR|SXF_ABSOLUTEVELOCITY); 
			if(bdoom_weapons == 0)
				A_PlaySound("weapons/rocklf",5,1.0);
			if(bdoom_weapons == 1)
				A_PlaySound("weapons/rlan/fire",5,1.0);
			}
		MISL AAAA 1 bright { 
			if(Bdoom_debris==1) {
				A_SpawnItemEx("BD_SeekerRocketTrail",-10,random(-2,2),random(6,9),0,0,0,0);
				}
			}
		TNT1 A 0 { 
			if(Bdoom_debris==1)
				A_SpawnItemEx("SeekerFlare",8,0,8,vel.x,vel.y,vel.z,0,SXF_ABSOLUTEMOMENTUM);
			}
		TNT1 A 0 A_PlaySound("weapons/rlan/fly",4,1.0,1,3);
	Spawn1:
		MISL A 1 bright { 
			A_SeekerMissile(0,4, SMF_LOOK | SMF_PRECISE | SMF_CURSPEED,200);
			invoker.SeekerCount++;
			if (invoker.SeekerCount == 30) {
				invoker.SeekerCount = 0;
				A_SpawnItemEx("SeekerFlare",8,0,8,vel.x,vel.y,vel.z,0,SXF_ABSOLUTEMOMENTUM);
				}
			if(Bdoom_debris==1)
				A_SpawnItemEx("BD_SeekerRocketTrail",-10,random(-2,2),random(6,9),0,0,0,0);
			}
		loop;
	}
}

Class BD_SeekerRocketTrail : BD_RocketTrail
{
Default {
	scale 0.07;
	}
}

Class ModernRocket : BD_Rocket
{
Default
	{
	scale 0.4;
	speed 25;
	seesound "Mweapons/rocket/fire";
	}
states
	{
	Spawn:
		TNT1 A 0 NoDelay { 
			A_PlaySound("weapons/rlan/fly",4,1.0,1,3);
			if(Bdoom_debris==1)
				A_SpawnItemEx("ModernRocketFlare",-6,0,2,vel.x,vel.y,vel.z,0,SXF_SETMASTER|SXF_ORIGINATOR|SXF_ABSOLUTEVELOCITY);
			}
		MROK AAAA 1 bright;
		TNT1 A 0 A_ScaleVelocity(2.0);
		MROK A 1 { 
			if(Bdoom_debris==1)
				A_SpawnItemEx("ModernRocketTrail",-16,random(-1,1),random(-1,1),0,0,0,0);
			}
		wait;
	Death.Sky:
		TNT1 A 1 A_RemoveChildren(1,RMVF_EVERYTHING);
		stop;
	BrainExplode:
	Death:
		TNT1 A 0 { 
			A_RemoveChildren(1,RMVF_EVERYTHING);
			A_StopSound(4);
			bFORCEXYBILLBOARD = true;
			A_SetRenderStyle(0.5,STYLE_Add);
			A_SetScale(1.0*randompick(-1,1),1.0*randompick(-1,1));
			A_PlaySound("Mweapons/rocket/explosion",5);
			if(bdoom_shakes == 1)
				A_Quake(1,6,0,4,"none");
			A_Explode();
			}
		BOM2 ABCDEFGHIJKLMNOPQRSTUVWXY 1 bright {
			if (bdoom_debris == 1)
				A_SpawnItemEx("BlackSmoke",random(-10,10),random(-10,10),random(16,32),0,0,0,0,0,180);		
			}
		stop;
	}
}

Class RLClip : ammo
{
Default {
	inventory.icon "HDRMZ0";
	inventory.amount 1;
	inventory.maxamount 6;
	ammo.backpackamount 0;
	ammo.backpackmaxamount 6;
	}
}

Class ModernGrenade : ModernRocket
{
default
	{
	scale 0.45;
	-NOGRAVITY;
	gravity 0.3;
	speed 25;
	radius 8;
	height 8;
	bouncetype "Doom";
	wallbouncefactor 0.5;
	bouncefactor 0.45;
	+EXPLODEONWATER;
	-ALLOWBOUNCEONACTORS;
	+FORCEXYBILLBOARD;
	seesound "Mweapons/grenade/fire";
	bouncesound "Mweapons/grenade/bounce";
	}
states
	{
	Spawn:
		MROG AABBCCDD 1 bright A_SPawnItemEx("ModernGrenadeTrail",0,0,0,0,0,0,0,SXF_SETMASTER);
		loop;
	Death:
		TNT1 A 0 { bNOGRAVITY = true; }
		goto super::Death;
	}
}

Class ModernGrenadeFlare : ModernGrenade
{
Default 
	{
	damage 0;
	seesound "";
	renderstyle "Add";
	alpha .4;
	scale .05;
	}
states
	{
	Spawn:
		LENY A 1 bright A_Warp(AAPTR_MASTER,0,0,0,0);
		loop;
	Death:
		stop;
	Death.Sky:
		stop;
	}
}

Class RocketFlare : Flare_General
{ Default {
renderstyle "Add";
alpha 0.4;
scale 0.09;
} 
states
	{
	Spawn:
		TNT1 A 0 NoDelay A_JumpIf(GetCVAR("Bdoom_debris")==0,"Null");
		TNT1 A 0 A_Warp(AAPTR_MASTER,-16,0,6);
		LENR A 1 bright;
		wait;
	}
}

Class BD_RocketTrail : Rocket1Trail
{ Default {
alpha 0.22;
	}
}



Class HomingRocketFlare : Flare_General
{ 
Default {
	renderstyle "Add";
	alpha 0.4;
	scale 0.09;
	} 
states
	{
	Spawn:
		LENR A 1 bright A_JumpIf(GetCVAR("Bdoom_debris")==0,"Null");
		TNT1 A 0 A_Warp(AAPTR_MASTER,-16,0,6);
		TNT1 A 0 A_JumpIfMasterCloser(18,"Spawn");
		stop;
	}
}



Class SeekerFlare : Flare_General
{ Default {
+FORCEXYBILLBOARD
+NOGRAVITY;
alpha 0.5;
scale 0.12;
} 
states
	{
	Spawn:
		TNT1 A 0 NoDelay A_PlaySound("weapons/rlan/seek",1,1.0,0,1);
		LENG A 2;
		stop;
	}
}







Class ModernRocketFlare : Flare_General
{ Default {
renderstyle "Add";
alpha 0.4;
scale 0.06;
} 
states
	{
	Spawn:
		LENY A 1 NoDelay bright {
			if (Bdoom_debris==0)
				self.destroy();
			A_Warp(AAPTR_MASTER,-7,0,1);
			}
		loop;
	}
}

Class ModernGrenadeTrail : Flare_General
{ Default {
renderstyle "Add";
alpha 0.2;
scale 0.04;
} 
states
	{
	Spawn:
		TNT1 A 3;
		LENY A 1 bright A_FadeOut(0.03);
		wait;
	}
}

Class ModernRocketTrail : Rocket1Trail
{ Default {
scale 0.06;
alpha 0.4;
	}
}