Class BD_RocketLauncher : BDoomWeapon {
	Default {
		+WEAPON.NOAUTOFIRE
		Inventory.PickupMessage "$GOTLAUNCHER";
		Tag "$TAG_ROCKETLAUNCHER";
		inventory.pickupsound "pickups/rocketlauncher";
		weapon.ammotype1	"RocketAmmo";
		weapon.ammogive1	0;
		weapon.ammouse1		1;
		weapon.ammotype2 	"RocketAmmo";
		weapon.ammouse2		1;
		weapon.ammogive2	2;
		weapon.selectionorder 250;
		weapon.slotnumber 5;
		BDoomWeapon.AutoReloadTime 110;
	}
		
	override void DoEffect() {
		If (Owner)	{
			if(bdoom_weapons == 2)	{
				Ammo1 = ammo(Owner.FindInventory("RLClip"));
				AmmoUse1 = 1;
				AmmoUse2 = 0;
				bAMMO_OPTIONAL = true;
				if (!ammo1)
					Owner.GiveInventory("RLClip",4);
			}
			else {
				Ammo1 = ammo(Owner.FindInventory("RocketAmmo"));
				AmmoUse1 = 1;
				AmmoUse2 = 1;
				bAMMO_OPTIONAL = false;
			}
		}
		Super.DoEffect();
	}
		
	states	{
		Spawn:
			LAUN A 1 NoDelay {
				if (bdoom_weapons == 2)
					frame = 1;
			}
			Loop;
			LAUN B 0;
			stop;
		Select:
			TNT1 A 0 { 
				if(bdoom_weapons > 0)
					A_PlaySound("weapons/rlan/draw");
				If(bdoom_weapons == 2)
					return ResolveState("Select.Modern");
				return ResolveState(null);
			}
			RLAN DCBEFG 1 A_WeaponReady(WRF_NOFIRE);
			goto ready;
		Deselect:
			TNT1 A 0 A_JumpIf(bdoom_weapons==2,"Deselect.Modern");
			RLAN A 1 A_Lower;
			loop;
		Ready:
			RLAN A 1  { 
				if (bdoom_weapons == 2)
					return ResolveState("Ready.Modern");
				else if (bdoom_weapons ==1)
					A_WeaponReady();
				else
					A_WeaponReady(WRF_NOSECONDARY);
				return ResolveState(null);
			}
			loop;
		Fire: //8 tics before fire, 12 tics fire, 0 tics refire
			RLAN A 2 A_JumpIf(bdoom_weapons==2,"Fire.Modern");
			TNT1 A 0 A_GunFlash();
			RLAN ABC 2 ;
			RLAN D 3 A_FireProjectile("BD_Rocket",0,1);
			RLAN CB 3;
			RLAN EFG 1;
			TNT1 A 0 A_Refire();
			goto ready;
		AltFire:
			TNT1 A 0 A_JumpIf(bdoom_weapons==2,"AltFire.Modern");
			RLAN A 20 A_PlaySound("weapons/rlan/lock");
			TNT1 A 0 A_GunFlash();
			RLAN ABC 2 ;
			RLAN D 2 A_FireProjectile("BD_HomingRocket",0,1);
			RLAN CB 3;
			RLAN EFG 1;
			RLAN A 15 A_WeaponReady(WRF_NOSECONDARY);
			RLAN A 8 A_ReFire();
			goto ready	;
		Flash:
			RLAF A 2 Bright A_Light1();
			RLAF B 2 Bright;
			RLAF C 2 Bright A_Light2();
			RLAF DE 3 Bright;
			Goto LightDone;
			
	//modern;
		Select.Modern:
			RORV C 0 {
				A_PlaySound("weapons/RORN/draw");
				let ws = player.FindPSprite (PSP_Weapon);
				if (ws) {
					if (countinv("RLCLip") >= 3) {
						ws.sprite = GEtSpriteIndex("RORN");
						ws.frame = 0;
					}
					else if (countinv("RLCLip") >= 2) {
						ws.sprite = GEtSpriteIndex("RORE");
						ws.frame = 0;
					}
					else if (countinv("RLCLip") >= 1) {
						ws.sprite = GEtSpriteIndex("RORE");
						ws.frame = 2;
					}
					else {
						ws.sprite = GEtSpriteIndex("RORV");
						ws.frame = 2;
					}
				}
				A_WeaponOffset(-35.0,74.0);
			}
			#### ####### 1 {
				A_WeaponOffset(5.0,-6.0,WOF_ADD);
				A_WeaponReady(WRF_NOFIRE|WRF_NOBOB);
			}
			goto ready;
		Deselect.Modern:
			RORV C 0 {
				let ws = player.FindPSprite (PSP_Weapon);
				if (ws) {
					if (countinv("RLCLip") >= 3) {
						ws.sprite = GEtSpriteIndex("RORN");
						ws.frame = 0;
					}
					else if (countinv("RLCLip") >= 2) {
						ws.sprite = GEtSpriteIndex("RORE");
						ws.frame = 0;
					}
					else if (countinv("RLCLip") >= 1) {
						ws.sprite = GEtSpriteIndex("RORE");
						ws.frame = 2;
					}
					else {
						ws.sprite = GEtSpriteIndex("RORV");
						ws.frame = 2;
					}
				}
			}
			#### # 1 A_Lower();
			wait;
		Ready.Modern:
			TNT1 A 1 {
				BD_WeaponReady(1);
				let ws = player.FindPSprite (PSP_Weapon);
				if (ws) {
					let mag = CountInv("RLClip");					
					if (mag >= 3) {
						ws.sprite = GEtSpriteIndex("RORN");
						ws.frame = 0;
					}
					else if (mag >= 2) {
						ws.sprite = GEtSpriteIndex("RORE");
						ws.frame = 0;
					}
					else if (mag >= 1) {
						ws.sprite = GEtSpriteIndex("RORE");
						ws.frame = 2;
					}
					else {
						ws.sprite = GEtSpriteIndex("RORV");
						ws.frame = 2;
					}
				}
			}
			goto ready;
			//load
			RORN ABC 0; RORE ABC 0; RORV ABC 0; RORT ABC 0;
			RORR ABC 0; //load
			stop;
		DryReload:
			RORV C 14 A_PlaySound("Mweapons/dry");
			goto reload;
		Fire.Modern:
			TNT1 A 0 {
				let mag = CountInv("RLClip");
				if (mag>=4)			return ResolveState("Fire0.Modern");
				else if (mag>=3) 	return ResolveState("Fire1.Modern");
				else if (mag>=2) 	return ResolveState("Fire2.Modern");
				else if (mag>=1) 	return ResolveState("Fire3.Modern");
				return ResolveState(null);
			}	
			goto DryReload;
		Fire0.Modern:
			RORN A 1;
			RORN B 1;
			RORN C 1 A_FireProjectile("ModernRocket",0,1,0,-6);
			RORN D 2 A_SetPitch(pitch - 1.2,SPF_INTERPOLATE);
			RORN C 2;
			RORN B 2;
			RORV ABCDA 2;
			RORN A 1;
			goto ready;
		Fire1.Modern:
			RORN A 1;
			RORN B 1;
			RORN C 1 A_FireProjectile("ModernRocket",0,1,0,-6);
			RORN D 2 A_SetPitch(pitch - 1.2,SPF_INTERPOLATE);
			RORN C 2;
			RORN B 2;
			RORV ABCEF 2;
			RORE A 1;
			goto ready;
		Fire2.Modern:
			RORE A 1;
			RORE B 1;
			RORN C 1 A_FireProjectile("ModernRocket",0,1,0,-6);
			RORN D 2 A_SetPitch(pitch - 1.2,SPF_INTERPOLATE);
			RORN C 2;
			RORE B 2;
			RORV FGCCC 2;
			RORE C 1;
			goto ready;
		Fire3.Modern:
			RORE C 1;
			RORE D 1;
			RORE E 2 A_FireProjectile("ModernRocket",0,1,0,-6);
			RORN D 2 A_SetPitch(pitch - 1.2,SPF_INTERPOLATE);
			RORE E 2;
			RORE D 2;
			RORV C 3;
			goto ready;
		Flash.Modern:
			RLAF A 2 Bright A_Light1();
			RLAF B 2 Bright;
			RLAF C 1 Bright A_Light2();
			RLAF DE 1 Bright;
			Goto LightDone;
		AltFire.Modern:
			TNT1 A 0 {
				let mag = CountInv("RLClip");
				if (mag>=4)			return ResolveState("AltFire0.Modern");
				else if (mag>=3) 	return ResolveState("AltFire1.Modern");
				else if (mag>=2) 	return ResolveState("AltFire2.Modern");
				else if (mag>=1) 	return ResolveState("AltFire3.Modern");
				return ResolveState(null);
			}
			goto DryReload;
		AltFire0.Modern:
			TNT1 A 0 A_TakeInventory("RLClip",1);
			RORN A 1;
			RORN B 1;
			RORN C 1 A_FireProjectile("ModernGrenade",0,0,0,0,0,-5);
			RORN D 2 A_SetPitch(pitch - 0.25,SPF_INTERPOLATE);
			RORN C 2;
			RORN B 2;
			RORV ABCDA 2;
			RORN A 1;
			goto ready;
		AltFire1.Modern:
			TNT1 A 0 A_TakeInventory("RLClip",1);
			RORN A 1;
			RORN B 1;
			RORN C 1 A_FireProjectile("ModernGrenade",0,0,0,0,0,-5);
			RORN D 2 A_SetPitch(pitch - 0.25,SPF_INTERPOLATE);
			RORN C 2;
			RORN B 2;
			RORV ABCEF 2;
			RORE A 1;
			goto ready;
		AltFire2.Modern:
			TNT1 A 0 A_TakeInventory("RLClip",1);
			RORE A 1;
			RORE B 1;
			RORN C 1 A_FireProjectile("ModernGrenade",0,0,0,0,0,-5);
			RORN D 2 A_SetPitch(pitch - 0.25,SPF_INTERPOLATE);
			RORN C 2;
			RORE B 2;
			RORV FGCCC 2;
			RORE C 1;
			goto ready;
		AltFire3.Modern:
			TNT1 A 0 A_TakeInventory("RLClip",1);
			RORE C 1;
			RORE D 1;
			RORE E 2 A_FireProjectile("ModernGrenade",0,0,0,0,0,-5);
			RORN D 2 A_SetPitch(pitch - 0.25,SPF_INTERPOLATE);
			RORE E 2;
			RORE D 2;
			RORV C 3;
			goto ready;
		Reload:
			TNT1 A 1 {
				if (CountInv ("RocketAmmo") < 1)
					return ResolveState("Ready");
				A_Overlay(-3,"ReloadMag");
				let ws = player.FindPSprite (PSP_Weapon);
				if (ws) {
					ws.sprite = GEtSpriteIndex("RORR");
					if (countinv("RLCLip") > 0)
						ws.frame = 0;
					else
						ws.frame = 1;
				}
				return ResolveState(null);
			}
			#### ####### 1 A_WeaponOffset(-1.1,0.5,WOF_ADD);
			#### # 6 A_WeaponOffset(0.0,0.0,WOF_ADD);
			#### # 0 A_PlaySound("Mweapons/rocket/clipout",5);
			#### # 1 A_WeaponOffset(1.5,0.0,WOF_ADD);
			#### ### 1 A_WeaponOffset(-0.5,0.0,WOF_ADD);
			
			#### # 24 A_WeaponOffset(0.0,0.0,WOF_ADD);
					
			#### # 0 A_PlaySound("Mweapons/rocket/clipin",5);
			#### # 1 A_WeaponOffset(-3.0,0.0,WOF_ADD);
			#### ### 1 A_WeaponOffset(1.0,0.0,WOF_ADD);
			
			#### ####### 1 A_WeaponOffset(1.1,-0.5,WOF_ADD);
			goto ready;
		ReloadMag:
			RORT A 1 {
				let ws = player.FindPSprite (-3);
				ws.sprite = GEtSpriteIndex("RORT");
				if (countinv("RLCLip") > 2)
					ws.frame = 0;
				else if (countinv("RLCLip") > 1)
					ws.frame = 1;
				else
					ws.frame = 2;
			}
			#### ######## 1;
			#### # 6;
			#### ########## 1 A_Overlayoffset(-3,1.8,2.3,WOF_ADD);
			#### # 7 BD_Reload();

			RORT A 1 {
				let ws = player.FindPSprite (-3);
				if (countinv("RLCLip") > 2)
					ws.frame = 0;
				else if (countinv("RLCLip") > 1)
					ws.frame = 1;
				else
					ws.frame = 2;
			}
			#### ########## 1 A_Overlayoffset(-3,-1.8,-2.3,WOF_ADD);
			#### #### 1;
			#### ####### 1;
			stop;
	}
}


Class RLClip : ammo {
	Default {
		inventory.icon "HROKZ0";
		inventory.amount 1;
		inventory.maxamount 8;
		ammo.backpackamount 0;
		ammo.backpackmaxamount 8;
	}
}

Class BD_Rocket : Actor {
	Default {
		Radius 11;
		Height 8;
		Speed 20;
		Damage 20;
		Projectile;
		+DEHEXPLOSION
		+ZDOOMTRANS
		+ROLLSPRITE
		Obituary "$OB_MPROCKET";
		scale 1.0;
		decal "bigscorch";
		seesound "none";
		deathsound "none";
	}
	states {
		Spawn:
			TNT1 A 0 NoDelay { 
				if(bdoom_debris) {
					let flare = BD_ProjFlare(Spawn("BD_ProjFlare",pos));
					if (flare) {
						flare.master = self;
						flare.fcolor = 'red';
						flare.fscale = 0.11;
						flare.falpha = 0.4;
						flare.xoffset = -15;
					}
				}
				if(bdoom_weapons == 0)
					A_PlaySound("weapons/rocklf",5,1.0);
				if(bdoom_weapons == 1)
					A_PlaySound("weapons/rlan/fire",5,1.0);
			}
			VROK AAAA 1 bright { 
				if(bdoom_debris)
					A_SpawnItemEx("BD_RocketTrail",-15,frandom(-1,1),frandom(-1,1),0,0,0,0);
			}
			TNT1 A 0 A_PlaySound("weapons/rlan/fly",4,1.0,1,3);
			VROK A 1 bright { 
				if(bdoom_debris)
					A_SpawnItemEx("BD_RocketTrail",-15,frandom(-1,1),frandom(-1,1),0,0,0,0);
			}
			wait;
		Death:
			TNT1 A 0 { 
				A_RemoveChildren(1,RMVF_EVERYTHING);
				A_StopSound(4);
				bFORCEXYBILLBOARD = true;
				A_SetRenderStyle(0.5,STYLE_Add);
				double rs = (frandom(0.38,0.42)*randompick(-1,1));
				A_SetScale(rs,rs);
				A_SetRoll(random(0,359));
				if(bdoom_shakes)
					A_Quake(1,8,0,256,"");
				if(bdoom_weapons == 0)
					A_PlaySound("weapons/rocklx",5);
				else
					A_PlaySound("weapons/rlan/explosion",5);
				if(bdoom_debris) {
					for (int i = 8; i > 0; i--) 
						A_SpawnItemEx("SmokingPiece",0,0,0, random(3,6),0,random(5,8),random(0,360),0,48);
				}
				A_Explode();
			}
			BOM6 ABCDEFGHIJKLMNOPQRST 1 bright;
			stop;
	}
}

Class BD_HomingRocket : BD_Rocket {
	Default {
		+SEEKERMISSILE;
		+SCREENSEEKER;
		speed 17;
		seesound "weapons/rlan/fire";
	}
	states	{
		Spawn:
			TNT1 A 0 NoDelay { 
				if(bdoom_debris) {
					let flare = BD_ProjFlare(Spawn("BD_ProjFlare",pos));
					if (flare) {
						flare.master = self;
						flare.fcolor = 'red';
						flare.fscale = 0.11;
						flare.falpha = 0.4;
						flare.xoffset = -15;
					}
				}
				if(bdoom_weapons == 0)
					A_PlaySound("weapons/rocklf",5,1.0);
				if(bdoom_weapons == 1)
					A_PlaySound("weapons/rlan/fire",5,1.0);
				let flare = BD_ProjFlare(Spawn("SeekerFlare",pos));
				if (flare) {
					flare.master = self;
					flare.xoffset = 18;
				}
			}
			HROK AAAA 1 bright { 
				if(bdoom_debris)
					A_SpawnItemEx("BD_RocketTrail",-15,frandom(-1,1),frandom(-1,1),0,0,0,0);
			}
			TNT1 A 0 A_PlaySound("weapons/rlan/fly",4,1.0,1,3);
			HROK A 1 bright { 
				A_SeekerMissile(0,3, SMF_LOOK | SMF_PRECISE | SMF_CURSPEED,200);
				if(bdoom_debris)
					A_SpawnItemEx("BD_RocketTrail",-15,frandom(-1,1),frandom(-1,1),0,0,0,0);
			}
			wait;
	}
}

Class ModernRocket : BD_Rocket {
	Class<Actor> trailactor;
	Default {
		+FORCERADIUSDMG
		scale 0.4;
		speed 25;
		seesound "Mweapons/rocket/fire";
	}
	override void PostBeginPlay() {
		super.PostBeginPlay();
		trailactor = "ModernRocketTrail";
	}
	//lovely snippet for smoke trail by Arctangent
	override void Tick () {
		Vector3 oldPos = pos;
		
		Super.Tick();
		if (bdoom_debris && !isFrozen() && GetAge() > 3) {
			Vector3 path = level.vec3Diff( pos, oldPos );
			double distance = path.length() / 4; //this determines how far apart the particles are
			Vector3 direction = path / distance;
			int steps = int( distance );
			
			for( int i = 0; i < steps; i++ )  {
				actor mo = Spawn(trailactor, oldPos );
				mo.vel = (frandom(-0.5,0.5),frandom(-0.5,0.5),frandom(-0.5,0.5));
				oldPos = level.vec3Offset( oldPos, direction );
			}
		}
	}
	states	{
		Spawn:
			TNT1 A 0 NoDelay { 
				A_PlaySound("weapons/rlan/fly",4,1.0,1,1);
				if(Bdoom_debris){
					let flare = BD_ProjFlare(Spawn("BD_ProjFlare",pos));
					if (flare) {
						flare.master = self;
						flare.fcolor = 'yellow';
						flare.fscale = 0.06;
						flare.falpha = 0.4;
						flare.xoffset = -7;
					}
				}
			}
			MROK AAAA 1 bright A_ScaleVelocity(1.2);
			MROK A 1;
			wait;
		BrainExplode:
		Death:
			TNT1 A 0 { 
				A_RemoveChildren(1,RMVF_EVERYTHING);
				A_StopSound(4);
				bFORCEXYBILLBOARD = true;
				A_SetRenderStyle(0.5,STYLE_Add);
				double rs = (frandom(0.55,0.57)*randompick(-1,1));
				A_SetScale(rs,rs);
				roll = random(0,359);
				A_PlaySound("Mweapons/rocket/explosion",5);
				if(bdoom_shakes)
					A_Quake(2,8,0,256,"");
				if(bdoom_debris) {
					for (int i = 20; i > 0; i--)
						A_SpawnItemEx("RicochetSpark",0,0,0,	frandom(-6,6),frandom(-6,6),frandom(3,10),0,0,92);
					if (pos.z <= floorz+10) {
						for (int i = 20; i > 0; i--)
							A_SpawnItemEx("RocketDebris",0,0,0,	frandom(-3,3),frandom(-3,3),frandom(9,12),0,0,92);
					}
					else {
						for (int i = 15; i > 0; i--)
							A_SpawnItemEx("RocketDebris",0,0,0,	frandom(-4,4),frandom(-4,4),frandom(2,7),0,0,92);
					}
				}
				A_Explode();
			}
			BOM4 ABCDEFGHIJKLMNOPQ 1 bright {
				if (bdoom_debris)
					A_SpawnItemEx("BigBlackSmoke",random(-12,12),random(-12,12),random(10,20),frandom(-0.3,0.3),frandom(-0.3,0.3),frandom(0.7,1.3),0,SXF_ORIGINATOR,200);
			}
			BOM5 ABCDEFGHIJKLMN 1 bright A_Fadeout(0.04);
			stop;
	}
}


Class ModernGrenade : ModernRocket {
	private state sspawn;
	Default	{
		scale 0.45;
		-NOGRAVITY;
		+NODECAL;
		decal "none";
		gravity 0.3;
		speed 25;
		radius 8;
		height 8;
		bouncetype "Doom";
		bouncefactor 0.5;
		+EXPLODEONWATER;
		+ALLOWBOUNCEONACTORS;
		+FORCEXYBILLBOARD;
		-BOUNCEAUTOOFF
		-FLOORCLIP
		seesound "Mweapons/grenade/fire";
		bouncesound "Mweapons/grenade/bounce";	
	}
	override void PostBeginPlay() {
		super.PostBeginPlay();
		if (bdoom_debris) {
			let a = Spawn("ModernGrenadeFlare",pos);
			if (a)
				a.master = self;
			}
		trailactor = "ModernGrenadeTrail";
		sspawn = FindState("Spawn");
	}
	override void Tick() {
		super.Tick();
		if (isFrozen())
			return;
		if (InstateSequence(curstate,sspawn) && GetAge() > 250)
			SetStateLabel("Death");
	}
	states {
		Spawn:
			MROG AABBCCDD 1 {
				// this in combination with -BOUNCEAUTOOFF lets the grenade slide and come to a stop instead of stopping dead OR bouncing continuously
				if (vel.length() < 12 && (pos.z-floorz < 12)) {
					bMISSILE = false;
					bCORPSE = true;
				}
			}
			loop;
		Crash:
		Death:
			MROG # 35 bright {
				A_PlaySound("Mweapons/grenade/bounce");
				A_PlaySound("MWeapons/rocket/beep",7,1.0,1,2);
			}
			TNT1 A 0 A_StopSound(7);
			goto super::Death;
		XDeath:
			TNT1 A 0 { bNOGRAVITY = true; }
			goto super::Death;
	}
}

//yellow flare around the grenade
Class ModernGrenadeFlare : BD_BaseFlare {
	Default {
		renderstyle "Add";
		alpha 0.4;
		scale 0.05;
	}
	override void Tick() {
		super.Tick();
		if (master)
			SetOrigin(master.pos,true);
		else {
			destroy();
			return;
		}
	} 
	states {
		Spawn:
			LENY A 1 bright NoDelay {
				if (master && master.InstateSequence(master.curstate,mdeath)) {
					scale *= 2;
					return ResolveState("Death");
					}
				return ResolveState(null);
			}
			loop;
		Death:
			LENR A 4 bright;
			TNT1 A 3;
			LENR A 4 bright;
			TNT1 A 3;
			LENR A 4 bright;
			TNT1 A 3;
			LENR A 4 bright;
			TNT1 A 3;
			LENR A 4 bright;
			stop;
	}
}


Class ModernRocketTrail : WallSmoke {
	Default {
		alpha 0.1;
	}
	states
		{
		Spawn:
			SM21 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 NoDelay {
				A_Fadeout(0.002);
				a_Setscale(clamp(scale.x*1.07,0.01,0.1),clamp(scale.y*1.07,0.01,0.1));
				vel*=0.98;
				roll+=wrot;
				wrot *= 0.98;
			}
			SM22 ABCDEFGHIJK 2 {
				A_Fadeout(0.002);
				a_Setscale(clamp(scale.x*1.07,0.01,0.1),clamp(scale.y*1.07,0.01,0.1));
				vel*=0.99;
				roll+=wrot;
				wrot *= 0.98;
			}
			wait;
	}
}
	
Class ModernGrenadeTrail : WallSmoke {
	Default {
		alpha 0.3;
	}
	states {
		Spawn:
			SM21 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 NoDelay {
				A_Fadeout(0.006);
				a_Setscale(clamp(scale.x*1.07,0.01,0.1),clamp(scale.y*1.07,0.01,0.1));
				vel*=0.95;
				roll+=wrot;
				wrot *= 0.98;
			}
			SM22 ABCDEFGHIJK 2 {
				A_Fadeout(0.005);
				a_Setscale(clamp(scale.x*1.07,0.01,0.1),clamp(scale.y*1.07,0.01,0.1));
				vel*=0.95;
				roll+=wrot;
				wrot *= 0.98;
			}
			wait;
	}
}

//flashes at the end of the homing version of the rocket
Class SeekerFlare : BD_ProjFlare { 
	Default {
		alpha 0.6;
	} 
	states {
		Spawn:
			TNT1 A 0 NoDelay A_SetScale(0.22);
			LENG A 1 A_PlaySound("weapons/rlan/seek",1,1.0,0,1);			
			LENG AAAAAAAAAAAAAAAAAAA 1 {
				scale *= 0.9;
				}
			loop;
	}
}